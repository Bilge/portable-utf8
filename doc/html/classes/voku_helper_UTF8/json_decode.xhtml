<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#voku_helper">voku\helper</a>
          </li>
          <li class="separator">
            <a title="voku\helper\UTF8" href="../../classes/voku_helper_UTF8.xhtml">UTF8</a>
          </li>
          <li class="separator">json_decode</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="../../source/voku/helper/UTF8.php.xhtml#line3599">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>voku\helper\UTF8::</small>json_decode</h1>
        <h4>(PHP 5 &amp;gt;= 5.2.0, PECL json &amp;gt;= 1.2.0)&lt;br/&gt; Decodes a JSON string</h4>
        <p/>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function json_decode(string
        $json,
            [boolean
        $assoc = false,
            [integer
        $depth = 512,
            [integer
        $options = 0]]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$json</code>
                —
                string</dt>
          <dd>&lt;p&gt;<br/>The &lt;i&gt;json&lt;/i&gt; string being decoded.<br/>&lt;/p&gt;<br/>&lt;p&gt;<br/>This function only works with UTF-8 encoded strings.<br/>&lt;/p&gt;<br/>&lt;p&gt;PHP implements a superset of<br/>JSON - it will also encode and decode scalar types and &lt;b&gt;NULL&lt;/b&gt;. The JSON standard<br/>only supports these values when they are nested inside an array or an object.<br/>                       &lt;/p&gt;</dd>
          <dt><code>$assoc</code>
                —
                boolean</dt>
          <dd>[optional] &lt;p&gt;<br/>When &lt;b&gt;TRUE&lt;/b&gt;, returned objects will be converted into<br/>associative arrays.<br/>                       &lt;/p&gt;</dd>
          <dt><code>$depth</code>
                —
                integer</dt>
          <dd>[optional] &lt;p&gt;<br/>User specified recursion depth.<br/>                       &lt;/p&gt;</dd>
          <dt><code>$options</code>
                —
                integer</dt>
          <dd>[optional] &lt;p&gt;<br/>Bitmask of JSON decode options. Currently only<br/>&lt;b&gt;JSON_BIGINT_AS_STRING&lt;/b&gt;<br/>is supported (default is to cast large integers as floats)<br/>                       &lt;/p&gt;</dd>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>mixed</dt>
          <dd>the value encoded in &lt;i&gt;json&lt;/i&gt; in appropriate<br/>PHP type. Values true, false and
null (case-insensitive) are returned as &lt;b&gt;TRUE&lt;/b&gt;, &lt;b&gt;FALSE&lt;/b&gt;
and &lt;b&gt;NULL&lt;/b&gt; respectively. &lt;b&gt;NULL&lt;/b&gt; is returned if the
&lt;i&gt;json&lt;/i&gt; cannot be decoded or if the encoded
data is deeper than the recursion limit.</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.1.1 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
