<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/lars/PhpstormProjects/portable-utf8/src/voku/helper" file="UTF8.php" realpath="/home/lars/PhpstormProjects/portable-utf8/src/voku/helper/UTF8.php" size="206704" time="2016-06-09T15:26:09+00:00" unixtime="1465485969" sha1="58d264397ede5410e8654c303cbe97d173de9936" relative="voku/helper/UTF8.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">voku</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">helper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Polyfill</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Intl</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Grapheme</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Grapheme</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Polyfill</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Xml</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Xml</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7"/>
  <line no="8">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * UTF8-Helper-Class</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * @package voku\helper</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="13">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UTF8</token>
  </line>
  <line no="14">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$win1252ToUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x82\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EURO SIGN</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">130</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">131</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER F WITH HOOK</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">132</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="23">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">133</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// HORIZONTAL ELLIPSIS</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">134</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DAGGER</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">135</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE DAGGER</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">136</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// MODIFIER LETTER CIRCUMFLEX ACCENT</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">137</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// PER MILLE SIGN</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">138</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER S WITH CARON</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">139</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LEFT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">140</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LIGATURE OE</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">142</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Z WITH CARON</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">145</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT SINGLE QUOTATION MARK</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">146</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT SINGLE QUOTATION MARK</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">147</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">148</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">149</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// BULLET</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">150</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EN DASH</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">151</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EM DASH</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">152</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SMALL TILDE</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">153</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x84\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// TRADE MARK SIGN</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">154</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER S WITH CARON</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">155</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE RIGHT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">156</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LIGATURE OE</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">158</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER Z WITH CARON</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">      </token>
    <token name="T_LNUMBER">159</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Y WITH DIAERESIS</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cp1252ToUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x20AC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201A;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x192;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201E;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2026;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2020;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2021;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2C6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2030;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x160;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2039;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x152;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x17D;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2018;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2019;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201C;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201D;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2022;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2013;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2014;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2DC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2122;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x161;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x203A;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x153;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x17E;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x178;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="80"/>
  <line no="81">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">   * Numeric code point =&gt; UTF-8 Character</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">   * url: http://www.w3schools.com/charsets/ref_utf_punctuation.asp</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$whitespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// NUL Byte</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Tab</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">9</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// New Line</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">10</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Vertical Tab</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">11</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Carriage Return</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">13</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Ordinary Space</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">32</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x20"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// NO-BREAK SPACE</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">160</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// OGHAM SPACE MARK</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">5760</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x9a\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// MONGOLIAN VOWEL SEPARATOR</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">6158</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xa0\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// EN QUAD</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8192</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// EM QUAD</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8193</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// EN SPACE</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8194</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// EM SPACE</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8195</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// THREE-PER-EM SPACE</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8196</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// FOUR-PER-EM SPACE</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8197</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// SIX-PER-EM SPACE</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8198</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// FIGURE SPACE</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8199</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// PUNCTUATION SPACE</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8200</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// THIN SPACE</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8201</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//HAIR SPACE</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8202</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// LINE SEPARATOR</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8232</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// PARAGRAPH SEPARATOR</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8233</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// NARROW NO-BREAK SPACE</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8239</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// MEDIUM MATHEMATICAL SPACE</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8287</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x81\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// IDEOGRAPHIC SPACE</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">12288</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe3\x80\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140"/>
  <line no="141">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="142">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="143">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$whitespaceTable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SPACE'</token>
    <token name="T_WHITESPACE">                     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x20"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'NO-BREAK SPACE'</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'OGHAM SPACE MARK'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x9a\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EN QUAD'</token>
    <token name="T_WHITESPACE">                   </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EM QUAD'</token>
    <token name="T_WHITESPACE">                   </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EN SPACE'</token>
    <token name="T_WHITESPACE">                  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EM SPACE'</token>
    <token name="T_WHITESPACE">                  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'THREE-PER-EM SPACE'</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'FOUR-PER-EM SPACE'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SIX-PER-EM SPACE'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'FIGURE SPACE'</token>
    <token name="T_WHITESPACE">              </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PUNCTUATION SPACE'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'THIN SPACE'</token>
    <token name="T_WHITESPACE">                </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HAIR SPACE'</token>
    <token name="T_WHITESPACE">                </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LINE SEPARATOR'</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PARAGRAPH SEPARATOR'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ZERO WIDTH SPACE'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'NARROW NO-BREAK SPACE'</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MEDIUM MATHEMATICAL SPACE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x81\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IDEOGRAPHIC SPACE'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe3\x80\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="166"/>
  <line no="167">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="168">
    <token name="T_DOC_COMMENT">   * bidirectional text chars</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">   * url: https://www.w3.org/International/questions/qa-bidi-unicode-controls</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bidiUniCodeControlsTable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// LEFT-TO-RIGHT EMBEDDING (use -&gt; dir = "ltr")</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8234</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x80\xAA"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// RIGHT-TO-LEFT EMBEDDING (use -&gt; dir = "rtl")</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8235</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x80\xAB"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// POP DIRECTIONAL FORMATTING // (use -&gt; &lt;/bdo&gt;)</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8236</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x80\xAC"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// LEFT-TO-RIGHT OVERRIDE // (use -&gt; &lt;bdo dir = "ltr"&gt;)</token>
  </line>
  <line no="182">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8237</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x80\xAD"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// RIGHT-TO-LEFT OVERRIDE // (use -&gt; &lt;bdo dir = "rtl"&gt;)</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8238</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x80\xAE"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// LEFT-TO-RIGHT ISOLATE // (use -&gt; dir = "ltr")</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8294</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x81\xA6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// RIGHT-TO-LEFT ISOLATE // (use -&gt; dir = "rtl")</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8295</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x81\xA7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// FIRST STRONG ISOLATE // (use -&gt; dir = "auto")</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8296</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x81\xA8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="191">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// POP DIRECTIONAL ISOLATE</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">    </token>
    <token name="T_LNUMBER">8297</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE2\x81\xA9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="193">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="194"/>
  <line no="195">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="196">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="197">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$commonCaseFold</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x17F;'</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'s'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCD\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3B9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3C2;'</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3C3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3B2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3B8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3C6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\x96"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3C0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\xB0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3BA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\xB1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3C1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xCF\xB5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3B5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE1\xBA\x9B"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE1\xB9\xA1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE1\xBE\xBE"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x3B9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="212"/>
  <line no="213">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="214">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="215">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x82\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EURO SIGN</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x82"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x83"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER F WITH HOOK</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x84"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x85"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// HORIZONTAL ELLIPSIS</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x86"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DAGGER</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x87"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE DAGGER</token>
  </line>
  <line no="224">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x88"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// MODIFIER LETTER CIRCUMFLEX ACCENT</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x89"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// PER MILLE SIGN</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x8a"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER S WITH CARON</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x8b"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LEFT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x8c"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LIGATURE OE</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x8e"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Z WITH CARON</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x91"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT SINGLE QUOTATION MARK</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x92"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT SINGLE QUOTATION MARK</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x93"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="233">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x94"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="234">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x95"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// BULLET</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x96"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EN DASH</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x97"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EM DASH</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x98"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SMALL TILDE</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x99"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x84\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// TRADE MARK SIGN</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x9a"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER S WITH CARON</token>
  </line>
  <line no="240">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x9b"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE RIGHT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="241">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x9c"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LIGATURE OE</token>
  </line>
  <line no="242">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x9e"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER Z WITH CARON</token>
  </line>
  <line no="243">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\x9f"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Y WITH DIAERESIS</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xBC;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA4;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB6;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2013;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x178;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3; '</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA1;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA2;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA3;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="253">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB9;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xBA;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="255">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xBB;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="256">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2122;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x161;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x203A;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x153;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB2;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB3;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB4;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="263">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA8;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="264">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA9;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xAA;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xAB;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x20AC;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2594;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x201A;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x192;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x201E;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2026;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC5;'</token>
  </line>
  <line no="273">
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2021;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="274">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2C6;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="275">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2030;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="276">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x160;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="277">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2039;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x152;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2594;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="280">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x17D;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="281">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2594;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2018;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2019;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x201C;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x201D;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2022;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2DC;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="288">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA5;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="289">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA6;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="290">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xA7;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="291">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xAC;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="292">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#x2594;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xED;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xAE;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xAF;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB0;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="296">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB1;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB5;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xB8;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="299">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xBD;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="300">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;&#xBF;'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE2;&#x201A;&#xAC;'</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x20AC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="302">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="303"/>
  <line no="304">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="305">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="306">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="307">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8ToWin1252</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="308">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x82\xac"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EURO SIGN</token>
  </line>
  <line no="309">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9a"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="310">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER F WITH HOOK</token>
  </line>
  <line no="311">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9e"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE LOW-9 QUOTATION MARK</token>
  </line>
  <line no="312">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa6"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// HORIZONTAL ELLIPSIS</token>
  </line>
  <line no="313">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DAGGER</token>
  </line>
  <line no="314">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa1"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// DOUBLE DAGGER</token>
  </line>
  <line no="315">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// MODIFIER LETTER CIRCUMFLEX ACCENT</token>
  </line>
  <line no="316">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// PER MILLE SIGN</token>
  </line>
  <line no="317">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER S WITH CARON</token>
  </line>
  <line no="318">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb9"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE LEFT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="319">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LIGATURE OE</token>
  </line>
  <line no="320">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Z WITH CARON</token>
  </line>
  <line no="321">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x98"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT SINGLE QUOTATION MARK</token>
  </line>
  <line no="322">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x99"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT SINGLE QUOTATION MARK</token>
  </line>
  <line no="323">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9c"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LEFT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="324">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9d"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// RIGHT DOUBLE QUOTATION MARK</token>
  </line>
  <line no="325">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa2"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// BULLET</token>
  </line>
  <line no="326">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x93"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EN DASH</token>
  </line>
  <line no="327">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x94"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// EM DASH</token>
  </line>
  <line no="328">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcb\x9c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SMALL TILDE</token>
  </line>
  <line no="329">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x84\xa2"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// TRADE MARK SIGN</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER S WITH CARON</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xba"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// SINGLE RIGHT-POINTING ANGLE QUOTE</token>
  </line>
  <line no="332">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LIGATURE OE</token>
  </line>
  <line no="333">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbe"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN SMALL LETTER Z WITH CARON</token>
  </line>
  <line no="334">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb8"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// LATIN CAPITAL LETTER Y WITH DIAERESIS</token>
  </line>
  <line no="335">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="336"/>
  <line no="337">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="338">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="339">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8MSWord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#xAB; (U+00AB) in UTF-8</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#xBB; (U+00BB) in UTF-8</token>
  </line>
  <line no="343">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x98"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2018; (U+2018) in UTF-8</token>
  </line>
  <line no="344">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x99"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2019; (U+2019) in UTF-8</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9a"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201A; (U+201A) in UTF-8</token>
  </line>
  <line no="346">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9b"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201B; (U+201B) in UTF-8</token>
  </line>
  <line no="347">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9c"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201C; (U+201C) in UTF-8</token>
  </line>
  <line no="348">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9d"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201D; (U+201D) in UTF-8</token>
  </line>
  <line no="349">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9e"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201E; (U+201E) in UTF-8</token>
  </line>
  <line no="350">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x9f"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x201F; (U+201F) in UTF-8</token>
  </line>
  <line no="351">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xb9"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2039; (U+2039) in UTF-8</token>
  </line>
  <line no="352">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xba"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x203A; (U+203A) in UTF-8</token>
  </line>
  <line no="353">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x93"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2013; (U+2013) in UTF-8</token>
  </line>
  <line no="354">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\x94"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2014; (U+2014) in UTF-8</token>
  </line>
  <line no="355">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x80\xa6"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'...'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// &#x2026; (U+2026) in UTF-8</token>
  </line>
  <line no="356">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="357"/>
  <line no="358">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$iconvEncoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="359">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ANSI_X3.4-1968'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="360">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ANSI_X3.4-1986'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="361">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP367'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM367'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="365">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO646-US'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="366">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_646.IRV:1991'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="367">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'US'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="368">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'US-ASCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="369">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSASCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="370">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="371">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-10646-UCS-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="372">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="373">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSUNICODE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="374">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="375">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UNICODE-1-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="376">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UNICODEBIG'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="377">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSUNICODE11'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="378">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="379">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UNICODELITTLE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="380">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-10646-UCS-4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="381">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="382">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSUCS4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="383">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-4BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="384">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-4LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="385">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="386">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="387">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="388">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="389">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="390">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="391">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UNICODE-1-1-UTF-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="392">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSUNICODE11UTF7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2-INTERNAL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2-SWAPPED'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="396">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-4-INTERNAL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="397">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-4-SWAPPED'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="398">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'C99'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="399">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JAVA'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="400">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP819'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="401">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM819'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="402">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="403">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-100'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="404">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="405">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-1:1987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="409">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="410">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="411">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-101'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="413">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="414">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-2:1987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="415">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="416">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="417">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="418">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="419">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-109'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="420">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="421">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="422">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-3:1988'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="423">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="424">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="425">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="426">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="427">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-110'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="428">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="429">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-4:1988'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="431">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="432">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="433">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="434">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CYRILLIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="435">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="436">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-144'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="437">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="438">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="439">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-5:1988'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATINCYRILLIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ARABIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASMO-708'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ECMA-114'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-127'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="446">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="447">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-6:1987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="449">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATINARABIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="450">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ECMA-118'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ELOT_928'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GREEK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="453">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GREEK8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="454">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="455">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-126'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="456">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="457">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="458">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-7:1987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="459">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-7:2003'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATINGREEK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="461">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HEBREW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="462">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="463">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-138'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="464">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="466">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-8:1988'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="467">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATINHEBREW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="468">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-9'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="469">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-148'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="470">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-9'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="471">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-9'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-9:1989'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="475">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="476">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-10'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-157'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="478">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-10'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="479">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-10'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="480">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-10:1992'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="481">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="482">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="483">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISOLATIN6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="484">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-11'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="485">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-11'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="486">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-11'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="487">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-13'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="488">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-179'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="489">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-13'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-13'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="491">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="492">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-14'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-CELTIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-199'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-14'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-14'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-14:1998'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="499">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="500">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="501">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-15'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="502">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-203'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="503">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-15'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="504">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-15'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="505">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-15:1998'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="506">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN-9'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-16'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="508">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-226'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="509">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859-16'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-16'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="511">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO_8859-16:2001'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="512">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L10'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="513">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN10'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="514">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KOI8-R'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="515">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSKOI8R'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="516">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KOI8-U'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="517">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KOI8-RU'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="518">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1250'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="519">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-EE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="520">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1250'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="521">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1251'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="522">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-CYRL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="523">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1251'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="524">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1252'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="525">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-ANSI'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="526">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1252'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="527">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1253'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="528">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-GREEK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1253'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="530">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1254'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="531">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-TURK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="532">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1254'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="533">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1255'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="534">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-HEBR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="535">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1255'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="536">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1256'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="537">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS-ARAB'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="538">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1256'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="539">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1257'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="540">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINBALTRIM'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="541">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1257'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="542">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1258'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="543">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1258'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="544">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'850'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="545">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP850'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="546">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM850'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="547">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPC850MULTILINGUAL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="548">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'862'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="549">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP862'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="550">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM862'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="551">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPC862LATINHEBREW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="552">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'866'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="553">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP866'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="554">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM866'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="555">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM866'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="556">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MAC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="557">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACINTOSH'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="558">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACROMAN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="559">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSMACINTOSH'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="560">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACCENTRALEUROPE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="561">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACICELAND'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="562">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACCROATIAN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="563">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACROMANIA'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="564">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACCYRILLIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="565">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACUKRAINE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="566">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACGREEK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="567">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACTURKISH'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="568">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACHEBREW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="569">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACARABIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="570">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MACTHAI'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="571">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HP-ROMAN8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="572">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'R8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="573">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ROMAN8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="574">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSHPROMAN8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="575">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'NEXTSTEP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="576">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ARMSCII-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="577">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GEORGIAN-ACADEMY'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="578">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GEORGIAN-PS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="579">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KOI8-T'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="580">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP154'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="581">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CYRILLIC-ASIAN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="582">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PT154'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="583">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PTCP154'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="584">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPTCP154'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="585">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KZ-1048'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="586">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RK1048'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="587">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'STRK1048-2002'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="588">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSKZ1048'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="589">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MULELAO-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="590">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1133'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="591">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM-CP1133'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="592">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-166'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="593">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS-620'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="594">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS620'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="595">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS620-0'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="596">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS620.2529-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="597">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS620.2533-0'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="598">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TIS620.2533-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="599">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP874'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="600">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-874'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="601">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'VISCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="602">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'VISCII1.1-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="603">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSVISCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="604">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TCVN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="605">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TCVN-5712'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="606">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TCVN5712-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="607">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TCVN5712-1:1993'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="608">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-14'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="609">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO646-JP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="610">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_C6220-1969-RO'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="611">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="612">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO14JISC6220RO'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="613">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JISX0201-1976'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="614">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0201'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="615">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X0201'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="616">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSHALFWIDTHKATAKANA'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="617">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-87'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="618">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS0208'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="619">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_C6226-1983'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="620">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0208'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="621">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0208-1983'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="622">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0208-1990'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="623">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X0208'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="624">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO87JISX0208'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="625">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-159'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="626">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0212'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="627">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0212-1990'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="628">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JIS_X0212.1990-0'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="629">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X0212'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="630">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO159JISX02121990'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="631">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="632">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GB_1988-80'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="633">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-57'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="634">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO646-CN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="635">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO57GB1988'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="636">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CHINESE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="637">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GB_2312-80'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="638">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-58'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="639">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO58GB231280'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="640">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CN-GB-ISOIR165'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="641">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-165'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="642">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-149'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="643">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KOREAN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="644">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KSC_5601'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="645">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KS_C_5601-1987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="646">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'KS_C_5601-1989'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="647">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSKSC56011987'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="648">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUC-JP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="649">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUCJP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="650">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EXTENDED_UNIX_CODE_PACKED_FORMAT_FOR_JAPANESE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="651">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSEUCPKDFMTJAPANESE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="652">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS_KANJI'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="653">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SHIFT-JIS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="654">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SHIFT_JIS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="655">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SJIS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="656">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSSHIFTJIS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="657">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP932'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="658">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-JP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="659">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO2022JP'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="660">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-JP-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="661">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-JP-2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="662">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO2022JP2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="663">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CN-GB'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="664">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUC-CN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="665">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUCCN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="666">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GB2312'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="667">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSGB2312'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="668">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GBK'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="669">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP936'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="670">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MS936'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="671">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-936'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="672">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GB18030'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="673">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-CN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="674">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO2022CN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="675">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-CN-EXT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="676">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HZ'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="677">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HZ-GB-2312'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="678">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUC-TW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="679">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUCTW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="680">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSEUCTW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="681">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG-5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="682">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG-FIVE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="683">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="684">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIGFIVE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="685">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CN-BIG5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="686">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSBIG5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="687">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP950'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="688">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5-HKSCS:1999'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="689">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5-HKSCS:2001'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="690">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5-HKSCS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="691">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5-HKSCS:2004'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="692">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5HKSCS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="693">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUC-KR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="694">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUCKR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="695">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSEUCKR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="696">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP949'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="697">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UHC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="698">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1361'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="699">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'JOHAB'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="700">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-KR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="701">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSISO2022KR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="702">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP856'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="703">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP922'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="704">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP943'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="705">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1046'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="706">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1124'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="707">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1129'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="708">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1161'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="709">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM-1161'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="710">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM1161'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="711">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM1161'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="712">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1162'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="713">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM-1162'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="714">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM1162'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="715">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM1162'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="716">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1163'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="717">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM-1163'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="718">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM1163'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="719">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM1163'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="720">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'DEC-KANJI'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="721">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'DEC-HANYU'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="722">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'437'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="723">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP437'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="724">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM437'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="725">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPC8CODEPAGE437'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="726">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP737'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="727">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP775'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="728">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM775'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="729">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPC775BALTIC'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="730">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'852'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="731">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP852'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="732">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM852'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="733">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSPCP852'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="734">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP853'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="735">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'855'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="736">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP855'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="737">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM855'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="738">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM855'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="739">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'857'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="740">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP857'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="741">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM857'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="742">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM857'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="743">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP858'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="744">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'860'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="745">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP860'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="746">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM860'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="747">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM860'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="748">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'861'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="749">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP-IS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="750">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP861'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="751">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM861'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="752">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM861'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="753">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'863'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="754">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP863'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="755">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM863'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="756">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM863'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="757">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP864'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="758">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM864'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="759">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM864'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="760">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'865'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="761">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP865'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="762">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM865'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="763">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM865'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="764">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'869'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="765">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP-GR'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="766">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP869'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="767">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'IBM869'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="768">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CSIBM869'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="769">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1125'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="770">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'EUC-JISX0213'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="771">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SHIFT_JISX0213'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="772">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-2022-JP-3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="773">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BIG5-2003'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="774">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-IR-230'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="775">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TDS565'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="776">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ATARI'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="777">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ATARIST'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="778">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RISCOS-LATIN1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="779">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="780"/>
  <line no="781">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="782">
    <token name="T_DOC_COMMENT">   * @var array</token>
  </line>
  <line no="783">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="784">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="785"/>
  <line no="786">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="787">
    <token name="T_DOC_COMMENT">   * __construct()</token>
  </line>
  <line no="788">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="789">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="790">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="791">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="792">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="793"/>
  <line no="794">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="795">
    <token name="T_DOC_COMMENT">   * Returns a single UTF-8 character from string.</token>
  </line>
  <line no="796">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="797">
    <token name="T_DOC_COMMENT">   * @param    string $str A UTF-8 string.</token>
  </line>
  <line no="798">
    <token name="T_DOC_COMMENT">   * @param    int    $pos The position of character to return.</token>
  </line>
  <line no="799">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="800">
    <token name="T_DOC_COMMENT">   * @return   string Single Multi-Byte character.</token>
  </line>
  <line no="801">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="802">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">access</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="803">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="804">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Return the character at the specified position: $str[1] like functionality.</token>
  </line>
  <line no="805"/>
  <line no="806">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="807">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="808"/>
  <line no="809">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="810">
    <token name="T_DOC_COMMENT">   * Prepends BOM character to the string and returns the whole string.</token>
  </line>
  <line no="811">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="812">
    <token name="T_DOC_COMMENT">   * INFO: If BOM already existed there, the Input string is returned.</token>
  </line>
  <line no="813">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="814">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string</token>
  </line>
  <line no="815">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="816">
    <token name="T_DOC_COMMENT">   * @return   string The output string that contains BOM</token>
  </line>
  <line no="817">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="818">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">add_bom_to_string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="819">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="820">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="821">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="822">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="823"/>
  <line no="824">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="825">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="826"/>
  <line no="827">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="828">
    <token name="T_DOC_COMMENT">   * Returns the Byte Order Mark Character.</token>
  </line>
  <line no="829">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="830">
    <token name="T_DOC_COMMENT">   * @return   string Byte Order Mark</token>
  </line>
  <line no="831">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="832">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="833">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="834">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xEF\xBB\xBF"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="835">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="836"/>
  <line no="837">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="838">
    <token name="T_DOC_COMMENT">   * @alias of UTF8::chr_map()</token>
  </line>
  <line no="839">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="840">
    <token name="T_DOC_COMMENT">   * @param $callback</token>
  </line>
  <line no="841">
    <token name="T_DOC_COMMENT">   * @param $str</token>
  </line>
  <line no="842">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="843">
    <token name="T_DOC_COMMENT">   * @return array</token>
  </line>
  <line no="844">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="845">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">callback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="846">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="847">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="848">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="849"/>
  <line no="850">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="851">
    <token name="T_DOC_COMMENT">   * Returns an array of all lower and upper case UTF-8 encoded characters.</token>
  </line>
  <line no="852">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="853">
    <token name="T_DOC_COMMENT">   * @return   string An array with lower case chars as keys and upper chars as values.</token>
  </line>
  <line no="854">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="855">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">case_table</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="856">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="857">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="858"/>
  <line no="859">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// lower =&gt; upper</token>
  </line>
  <line no="860">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8f"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="861">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8e"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="862">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8d"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="863">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8c"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="864">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8b"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="865">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x8a"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="866">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x89"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="867">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x88"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="868">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x87"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="869">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x86"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="870">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x85"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="871">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x84"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="872">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x83"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="873">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x82"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="874">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x81"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="875">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x91\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="876">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xbf"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="877">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xbe"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="878">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xbd"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="879">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xbc"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="880">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xbb"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="881">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xba"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="882">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb9"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="883">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb8"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="884">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb7"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="885">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb6"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="886">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb5"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="887">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb4"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="888">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb3"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="889">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb2"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="890">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb1"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="891">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xb0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="892">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xaf"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="893">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xae"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="894">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xad"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="895">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xac"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="896">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xab"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="897">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xaa"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="898">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa9"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="899">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\xa8"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0\x90\x90\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="900">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x9a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="901">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="902">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x98"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="903">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="904">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x96"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="905">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="906">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x94"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="907">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="908">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="909">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="910">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="911">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="912">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="913">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="914">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="915">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="916">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x8a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="917">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="918">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x88"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="919">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="920">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="921">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="922">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="923">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="924">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="925">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbd\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbc\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="926">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x8c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="927">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="928">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="929">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="930">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="931">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="932">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xbc"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="933">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xba"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="934">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="935">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="936">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="937">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="938">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="939">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="940">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="941">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="942">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="943">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="944">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="945">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="946">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="947">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="948">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="949">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="950">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="951">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="952">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="953">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="954">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="955">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="956">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="957">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="958">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="959">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="960">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="961">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="962">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="963">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="964">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="965">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="966">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="967">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="968">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="969">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="970">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="971">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9c\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="972">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="973">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="974">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="975">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="976">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="977">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="978">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="979">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="980">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="981">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="982">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="983">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9a\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="984">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="985">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="986">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="987">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="988">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="989">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="990">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="991">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="992">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="993">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="994">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="995">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="996">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="997">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="998">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="999">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1000">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1001">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1002">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1003">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1004">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1005">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x99\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1006">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1007">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1008">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1009">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1010">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1011">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x83\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1012">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1013">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1014">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1015">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1016">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1017">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x9a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1018">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1019">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x98"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1020">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1021">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x96"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1022">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1023">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x94"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1024">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1025">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1026">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1027">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1028">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1029">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1030">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1031">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1032">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1033">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x8a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1034">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1035">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x88"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1036">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1037">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1038">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1039">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1040">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1041">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1042">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1043">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb4\x80"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\x82\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1044">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xae"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1045">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xac"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1046">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1047">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1048">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1049">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1050">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1051">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1052">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1053">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1054">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1055">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1056">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1057">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1058">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1059">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1060">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1061">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1062">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1063">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb3\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1064">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1065">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1066">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1067">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1068">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1069">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1070">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1071">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1072">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1073">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1074">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1075">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1076">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1077">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1078">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1079">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1080">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1081">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1082">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1083">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1084">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1085">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1086">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1087">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1088">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1089">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1090">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1091">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1092">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1093">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1094">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1095">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb2\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1096">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xb6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xb5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1097">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1098">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xac"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1099">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xaa"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1100">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa8"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1101">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1102">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1103">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1104">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x9e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1105">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1106">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x9c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1107">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1108">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x9a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1109">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1110">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x98"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1111">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1112">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x96"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1113">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1114">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x94"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1115">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1116">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1117">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1118">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1119">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1120">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1121">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1122">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8c"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1123">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1124">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x8a"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1125">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1126">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x88"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1127">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1128">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1129">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1130">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1131">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1132">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1133">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1134">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\x80"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1135">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1136">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xbe"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1137">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1138">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xbc"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1139">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1140">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xba"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1141">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1142">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb8"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1143">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1144">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1145">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1146">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1147">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1148">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1149">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1150">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\xb0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb0\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1151">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x86\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x86\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1152">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x85\x8e"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\x84\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1153">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1154">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1155">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1156">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1157">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1158">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1159">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1160">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xbe"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1161">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1162">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1163">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xb0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1164">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1165">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1166">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1167">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1168">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1169">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1170">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1171">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1172">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1173">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x96"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1174">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1175">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x94"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1176">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1177">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1178">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1179">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1180">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1181">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1182">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1183">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1184">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1185">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1186">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1187">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x80"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1188">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1189">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xbc"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1190">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1191">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xba"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1192">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1193">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb8"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1194">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1195">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1196">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1197">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1198">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1199">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbf\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1200">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1201">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xb0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbe\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1202">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1203">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1204">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1205">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1206">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1207">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1208">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1209">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1210">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1211">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1212">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1213">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1214">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1215">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1216">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1217">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1218">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1219">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x80"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbd\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1220">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1221">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1222">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1223">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1224">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1225">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1226">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1227">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1228">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1229">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa6"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1230">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1231">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa4"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1232">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1233">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa2"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1234">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1235">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa0"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1236">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1237">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x94"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1238">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1239">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x92"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1240">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1241">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x90"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1242">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1243">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x86"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1244">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1245">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x84"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1246">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1247">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x82"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1248">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1249">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x80"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbc\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1250">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1251">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1252">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1253">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1254">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1255">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1256">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1257">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1258">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1259">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1260">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1261">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1262">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1263">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1264">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1265">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1266">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1267">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1268">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1269">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1270">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1271">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1272">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1273">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1274">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1275">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1276">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1277">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1278">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1279">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1280">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1281">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xbb\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1282">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1283">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1284">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1285">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1286">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1287">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1288">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1289">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1290">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1291">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1292">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1293">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1294">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1295">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1296">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1297">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1298">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1299">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1300">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1301">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1302">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1303">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1304">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1305">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1306">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1307">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1308">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1309">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xba\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1310">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1311">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1312">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1313">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1314">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1315">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1316">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1317">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1318">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1319">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1320">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1321">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1322">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1323">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1324">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1325">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1326">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1327">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1328">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1329">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1330">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1331">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1332">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1333">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1334">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1335">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1336">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1337">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1338">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1339">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1340">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1341">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb9\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1342">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xbf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1343">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1344">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xbb"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1345">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1346">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1347">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1348">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1349">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1350">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xaf"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1351">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xad"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1352">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xab"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1353">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1354">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa7"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1355">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa5"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1356">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa3"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1357">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa1"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1358">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1359">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1360">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1361">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x99"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1362">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x97"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1363">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x95"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1364">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x93"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1365">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x91"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1366">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8f"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1367">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8d"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1368">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8b"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1369">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x89"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1370">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x87"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1371">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x85"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1372">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x83"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1373">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x81"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb8\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1374">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb5\xbd"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1375">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe1\xb5\xb9"</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9d\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1376">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1377">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1378">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x84"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1379">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1380">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1381">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1382">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd6\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1383">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1384">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1385">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1386">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1387">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1388">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1389">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1390">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1391">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1392">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1393">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1394">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1395">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1396">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1397">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1398">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xb0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1399">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1400">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xae"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1401">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1402">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xac"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1403">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1404">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xaa"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1405">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1406">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1407">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1408">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1409">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1410">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1411">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1412">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1413">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd5\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xb1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1414">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1415">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1416">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1417">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1418">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1419">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1420">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1421">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1422">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1423">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1424">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1425">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1426">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1427">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1428">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1429">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1430">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1431">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1432">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd4\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1433">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1434">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1435">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1436">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1437">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1438">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1439">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1440">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1441">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1442">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1443">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1444">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1445">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1446">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1447">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1448">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1449">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1450">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1451">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1452">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1453">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1454">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1455">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1456">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1457">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1458">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1459">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1460">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x8a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1461">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1462">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1463">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x84"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1464">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd3\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1465">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1466">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1467">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1468">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1469">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1470">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1471">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1472">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1473">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1474">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1475">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1476">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1477">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1478">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1479">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1480">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1481">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1482">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1483">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1484">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1485">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1486">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1487">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1488">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1489">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1490">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1491">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1492">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd2\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1493">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1494">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1495">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1496">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1497">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1498">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1499">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1500">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1501">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1502">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1503">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1504">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1505">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1506">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1507">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1508">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1509">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1510">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1511">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1512">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1513">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1514">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x9a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1515">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1516">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x98"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1517">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1518">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x96"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1519">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1520">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x94"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1521">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1522">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x92"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1523">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1524">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x90"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1525">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1526">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1527">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1528">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1529">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1530">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x8a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1531">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1532">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1533">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1534">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1535">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1536">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x84"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1537">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1538">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1539">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1540">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd1\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1541">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1542">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1543">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1544">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1545">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1546">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1547">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1548">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1549">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1550">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1551">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1552">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1553">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1554">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1555">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1556">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\xb0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xd0\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1557">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1558">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1559">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1560">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1561">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1562">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xb0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1563">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1564">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1565">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1566">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1567">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1568">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1569">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1570">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1571">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1572">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1573">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1574">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1575">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1576">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x96"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1577">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1578">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1579">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x90"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1580">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1581">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1582">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1583">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xab"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1584">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x8a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1585">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1586">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1587">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1588">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1589">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1590">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x84"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1591">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1592">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1593">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1594">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1595">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1596">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1597">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1598">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1599">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1600">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1601">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1602">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1603">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1604">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1605">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1606">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1607">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1608">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1609">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1610">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1611">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xae"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1612">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1613">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\xac"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1614">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1615">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1616">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcf\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1617">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1618">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1619">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xcd\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1620">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x92"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1621">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1622">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1623">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x8a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb1"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1624">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1625">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1626">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1627">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xca\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1628">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1629">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x9f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1630">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1631">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1632">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1633">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1634">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1635">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xa8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1636">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xea\x9e\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1637">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1638">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\xa0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1639">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1640">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1641">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1642">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x96"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1643">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x94"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1644">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1645">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x92"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1646">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xad"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1647">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x90"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1648">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1649">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1650">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1651">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1652">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1653">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1654">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1655">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe2\xb1\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1656">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1657">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1658">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1659">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1660">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1661">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1662">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1663">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1664">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1665">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1666">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1667">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1668">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1669">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1670">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1671">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1672">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1673">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1674">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1675">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1676">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1677">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1678">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1679">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1680">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1681">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1682">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xbe"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1683">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1684">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xba"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1685">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1686">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1687">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1688">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1689">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1690">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1691">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1692">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1693">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1694">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1695">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1696">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1697">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1698">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1699">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x9a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1700">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x98"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x97"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1701">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x96"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1702">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x94"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1703">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x92"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1704">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x90"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1705">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x8e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1706">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1707">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1708">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1709">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1710">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xbc"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1711">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1712">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb5"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1713">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb3"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1714">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xb0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xaf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1715">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1716">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa7"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1717">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1718">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1719">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1720">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x9e"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1721">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x9a"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc8\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1722">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1723">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc7\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1724">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x92"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1725">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x8c"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1726">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1727">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1728">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1729">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc6\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc9\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1730">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x53"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1731">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1732">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1733">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1734">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1735">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1736">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1737">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1738">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1739">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1740">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1741">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1742">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1743">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1744">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1745">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1746">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1747">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1748">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1749">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1750">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1751">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1752">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1753">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1754">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1755">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1756">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1757">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x88"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1758">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x86"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1759">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x84"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1760">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x82"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1761">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\x80"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xbf"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1762">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xbd"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1763">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xbb"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1764">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb9"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1765">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1766">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1767">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1768">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x49"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1769">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xae"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1770">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xac"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1771">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xaa"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1772">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1773">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa6"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1774">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa4"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1775">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa2"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1776">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\xa0"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1777">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1778">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1779">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1780">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x99"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1781">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x97"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1782">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x95"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1783">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x93"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1784">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x91"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1785">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8f"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1786">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8d"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1787">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8b"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1788">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x89"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1789">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x87"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1790">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x85"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1791">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x83"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1792">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x81"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc4\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1793">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xbf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc5\xb8"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1794">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xbe"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x9e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1795">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xbd"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x9d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1796">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xbc"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1797">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xbb"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x9b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1798">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xba"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x9a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1799">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x99"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1800">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x98"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1801">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x96"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1802">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x95"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1803">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x94"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1804">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x93"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1805">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x92"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1806">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x91"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1807">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xb0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x90"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1808">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xaf"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1809">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xae"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1810">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xad"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1811">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xac"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1812">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xab"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1813">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xaa"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x8a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1814">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa9"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x89"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1815">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa8"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x88"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1816">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa7"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x87"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1817">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa6"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x86"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1818">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x85"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1819">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa4"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x84"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1820">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa3"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x83"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1821">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa2"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x82"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1822">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa1"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x81"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1823">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\xa0"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc3\x80"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1824">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc2\xb5"</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xce\x9c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1825">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x7a"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x5a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1826">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x79"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x59"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1827">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x78"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x58"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1828">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x77"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x57"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1829">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x76"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x56"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1830">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x75"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x55"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1831">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x74"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x54"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1832">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x73"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x53"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1833">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x72"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x52"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1834">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x71"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x51"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1835">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x70"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x50"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1836">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6f"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4f"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1837">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6e"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4e"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1838">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6d"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4d"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1839">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6c"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4c"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1840">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6b"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4b"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1841">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x6a"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x4a"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1842">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x69"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x49"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1843">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x68"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x48"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1844">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x67"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x47"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1845">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x66"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x46"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1846">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x65"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x45"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1847">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x64"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x44"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1848">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x63"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x43"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1849">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x62"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x42"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1850">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x61"</token>
    <token name="T_WHITESPACE">             </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x41"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1851"/>
  <line no="1852">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1853"/>
  <line no="1854">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$case</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1855">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1856"/>
  <line no="1857">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1858">
    <token name="T_DOC_COMMENT">   * check for UTF8-Support</token>
  </line>
  <line no="1859">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1860">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1861">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1862">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1863"/>
  <line no="1864">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">mbstring_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1865">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'iconv'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">iconv_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1866">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'intl'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">intl_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1867">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'pcre_utf8'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">pcre_utf8_support</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1868">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1869">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1870"/>
  <line no="1871">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1872">
    <token name="T_DOC_COMMENT">   * Generates a UTF-8 encoded character from the given code point.</token>
  </line>
  <line no="1873">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1874">
    <token name="T_DOC_COMMENT">   * @param    int $code_point The code point for which to generate a character.</token>
  </line>
  <line no="1875">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1876">
    <token name="T_DOC_COMMENT">   * @return   string Multi-Byte character, returns empty string on failure to encode.</token>
  </line>
  <line no="1877">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1878">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code_point</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1879">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1880">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1881"/>
  <line no="1882">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$code_point</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1883"/>
  <line no="1884">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$code_point</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1885">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">hex_to_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code_point</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1886">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1887"/>
  <line no="1888">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1889">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1890">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1891"/>
  <line no="1892">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">html_entity_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&amp;#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">;</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_QUOTES</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1893">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1894"/>
  <line no="1895">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1896">
    <token name="T_DOC_COMMENT">   * Applies callback to all characters of a string.</token>
  </line>
  <line no="1897">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1898">
    <token name="T_DOC_COMMENT">   * @param    string $callback The callback function.</token>
  </line>
  <line no="1899">
    <token name="T_DOC_COMMENT">   * @param    string $str      UTF-8 string to run callback on.</token>
  </line>
  <line no="1900">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1901">
    <token name="T_DOC_COMMENT">   * @return   array The outcome of callback.</token>
  </line>
  <line no="1902">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1903"/>
  <line no="1904">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chr_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1905">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1906">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1907"/>
  <line no="1908">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1909">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1910"/>
  <line no="1911">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1912">
    <token name="T_DOC_COMMENT">   * Generates an array of byte length of each character of a Unicode string.</token>
  </line>
  <line no="1913">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1914">
    <token name="T_DOC_COMMENT">   * 1 byte =&gt; U+0000  - U+007F</token>
  </line>
  <line no="1915">
    <token name="T_DOC_COMMENT">   * 2 byte =&gt; U+0080  - U+07FF</token>
  </line>
  <line no="1916">
    <token name="T_DOC_COMMENT">   * 3 byte =&gt; U+0800  - U+FFFF</token>
  </line>
  <line no="1917">
    <token name="T_DOC_COMMENT">   * 4 byte =&gt; U+10000 - U+10FFFF</token>
  </line>
  <line no="1918">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1919">
    <token name="T_DOC_COMMENT">   * @param    string $str The original Unicode string.</token>
  </line>
  <line no="1920">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1921">
    <token name="T_DOC_COMMENT">   * @return   array An array of byte lengths of each character.</token>
  </line>
  <line no="1922">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1923">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chr_size_list</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1924">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1925">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1926">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1927">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1928"/>
  <line no="1929">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strlen'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1930">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1931"/>
  <line no="1932">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1933">
    <token name="T_DOC_COMMENT">   * Get a decimal code representation of a specific character.</token>
  </line>
  <line no="1934">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1935">
    <token name="T_DOC_COMMENT">   * @param   string $chr The input character</token>
  </line>
  <line no="1936">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1937">
    <token name="T_DOC_COMMENT">   * @return  int</token>
  </line>
  <line no="1938">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1939">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chr_to_decimal</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1940">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1941">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1942">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1943">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1944"/>
  <line no="1945">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1946">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// 0xxxxxxx</token>
  </line>
  <line no="1947">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1948">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1949"/>
  <line no="1950">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xe0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xc0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1951">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// 110xxxxx</token>
  </line>
  <line no="1952">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1953">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AND_EQUAL">&amp;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_TILDE">~</token>
    <token name="T_LNUMBER">0xc0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1954">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xf0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xe0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1955">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// 1110xxxx</token>
  </line>
  <line no="1956">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1957">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AND_EQUAL">&amp;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_TILDE">~</token>
    <token name="T_LNUMBER">0xe0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1958">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xf8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xf0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1959">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// 11110xxx</token>
  </line>
  <line no="1960">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1961">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AND_EQUAL">&amp;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_TILDE">~</token>
    <token name="T_LNUMBER">0xf0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1962">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1963"/>
  <line no="1964">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1965">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// 10xxxxxx</token>
  </line>
  <line no="1966">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_TILDE">~</token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1967">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1968"/>
  <line no="1969">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1970">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1971"/>
  <line no="1972">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1973">
    <token name="T_DOC_COMMENT">   * Get hexadecimal code point (U+xxxx) of a UTF-8 encoded character.</token>
  </line>
  <line no="1974">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1975">
    <token name="T_DOC_COMMENT">   * @param    string $chr The input character</token>
  </line>
  <line no="1976">
    <token name="T_DOC_COMMENT">   * @param    string $pfix</token>
  </line>
  <line no="1977">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1978">
    <token name="T_DOC_COMMENT">   * @return   string The code point encoded as U+xxxx</token>
  </line>
  <line no="1979">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1980">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chr_to_hex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pfix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'U+'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1981">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1982">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">int_to_hex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pfix</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1983">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1984"/>
  <line no="1985">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1986">
    <token name="T_DOC_COMMENT">   * Splits a string into smaller chunks and multiple lines, using the specified</token>
  </line>
  <line no="1987">
    <token name="T_DOC_COMMENT">   * line ending character.</token>
  </line>
  <line no="1988">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1989">
    <token name="T_DOC_COMMENT">   * @param    string $body     The original string to be split.</token>
  </line>
  <line no="1990">
    <token name="T_DOC_COMMENT">   * @param    int    $chunklen The maximum character length of a chunk.</token>
  </line>
  <line no="1991">
    <token name="T_DOC_COMMENT">   * @param    string $end      The character(s) to be inserted at the end of each chunk.</token>
  </line>
  <line no="1992">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="1993">
    <token name="T_DOC_COMMENT">   * @return   string The chunked string</token>
  </line>
  <line no="1994">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="1995">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">chunk_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$body</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chunklen</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">76</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r\n"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1996">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1997">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$body</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chunklen</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1998">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1999"/>
  <line no="2000">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2001">
    <token name="T_DOC_COMMENT">   * accepts a string and removes all non-UTF-8 characters from it.</token>
  </line>
  <line no="2002">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2003">
    <token name="T_DOC_COMMENT">   * @param string $str                     The string to be sanitized.</token>
  </line>
  <line no="2004">
    <token name="T_DOC_COMMENT">   * @param bool   $remove_bom</token>
  </line>
  <line no="2005">
    <token name="T_DOC_COMMENT">   * @param bool   $normalize_whitespace</token>
  </line>
  <line no="2006">
    <token name="T_DOC_COMMENT">   * @param bool   $normalize_msword        e.g.: "&#x2026;" =&gt; "..."</token>
  </line>
  <line no="2007">
    <token name="T_DOC_COMMENT">   * @param bool   $keep_non_breaking_space set true, to keep non-breaking-spaces</token>
  </line>
  <line no="2008">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2009">
    <token name="T_DOC_COMMENT">   * @return string Clean UTF-8 encoded string</token>
  </line>
  <line no="2010">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2011">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$remove_bom</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalize_whitespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalize_msword</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$keep_non_breaking_space</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2012">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2013">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// http://stackoverflow.com/questions/1401317/remove-non-utf8-characters-from-string</token>
  </line>
  <line no="2014">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// caused connection reset problem on larger strings</token>
  </line>
  <line no="2015"/>
  <line no="2016">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$regx</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/</token>
  </line>
  <line no="2017">
    <token name="T_CONSTANT_ENCAPSED_STRING">      (</token>
  </line>
  <line no="2018">
    <token name="T_CONSTANT_ENCAPSED_STRING">        (?: [\x00-\x7F]               # single-byte sequences   0xxxxxxx</token>
  </line>
  <line no="2019">
    <token name="T_CONSTANT_ENCAPSED_STRING">        |   [\xC0-\xDF][\x80-\xBF]    # double-byte sequences   110xxxxx 10xxxxxx</token>
  </line>
  <line no="2020">
    <token name="T_CONSTANT_ENCAPSED_STRING">        |   [\xE0-\xEF][\x80-\xBF]{2} # triple-byte sequences   1110xxxx 10xxxxxx * 2</token>
  </line>
  <line no="2021">
    <token name="T_CONSTANT_ENCAPSED_STRING">        |   [\xF0-\xF7][\x80-\xBF]{3} # quadruple-byte sequence 11110xxx 10xxxxxx * 3</token>
  </line>
  <line no="2022">
    <token name="T_CONSTANT_ENCAPSED_STRING">        ){1,100}                      # ...one or more times</token>
  </line>
  <line no="2023">
    <token name="T_CONSTANT_ENCAPSED_STRING">      )</token>
  </line>
  <line no="2024">
    <token name="T_CONSTANT_ENCAPSED_STRING">    | ( [\x80-\xBF] )                 # invalid byte in range 10000000 - 10111111</token>
  </line>
  <line no="2025">
    <token name="T_CONSTANT_ENCAPSED_STRING">    | ( [\xC0-\xFF] )                 # invalid byte in range 11000000 - 11111111</token>
  </line>
  <line no="2026">
    <token name="T_CONSTANT_ENCAPSED_STRING">    /x'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2027">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regx</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'$1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2028"/>
  <line no="2029">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">replace_diamond_question_mark</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2030">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">remove_invisible_characters</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2031"/>
  <line no="2032">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$normalize_whitespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2033">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize_whitespace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$keep_non_breaking_space</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2034">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2035"/>
  <line no="2036">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$normalize_msword</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2037">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize_msword</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2038">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2039"/>
  <line no="2040">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$remove_bom</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2041">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">removeBOM</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2042">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2043"/>
  <line no="2044">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2045">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2046"/>
  <line no="2047">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2048">
    <token name="T_DOC_COMMENT">   * Clean-up a and show only printable UTF-8 chars at the end.</token>
  </line>
  <line no="2049">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2050">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="2051">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2052">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="2053">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2054">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">cleanup</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2055">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2056">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2057"/>
  <line no="2058">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2059">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2060">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2061"/>
  <line no="2062">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// fixed ISO &lt;-&gt; UTF-8 Errors</token>
  </line>
  <line no="2063">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fix_simple_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2064"/>
  <line no="2065">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// remove all none UTF-8 symbols</token>
  </line>
  <line no="2066">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// &amp;&amp; remove diamond question mark (&#xFFFD;)</token>
  </line>
  <line no="2067">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// &amp;&amp; remove remove invisible characters (e.g. "\0")</token>
  </line>
  <line no="2068">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// &amp;&amp; remove BOM</token>
  </line>
  <line no="2069">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// &amp;&amp; normalize whitespace chars (but keep non-breaking-spaces)</token>
  </line>
  <line no="2070">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2071"/>
  <line no="2072">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2073">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2074"/>
  <line no="2075">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2076">
    <token name="T_DOC_COMMENT">   * Accepts a string and returns an array of Unicode code points.</token>
  </line>
  <line no="2077">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2078">
    <token name="T_DOC_COMMENT">   * @param    mixed $arg     A UTF-8 encoded string or an array of such strings.</token>
  </line>
  <line no="2079">
    <token name="T_DOC_COMMENT">   * @param    bool  $u_style If True, will return code points in U+xxxx format,</token>
  </line>
  <line no="2080">
    <token name="T_DOC_COMMENT">   *                          default, code points will be returned as integers.</token>
  </line>
  <line no="2081">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2082">
    <token name="T_DOC_COMMENT">   * @return   array The array of code points</token>
  </line>
  <line no="2083">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2084">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">codepoints</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$u_style</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2085">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2086">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2087">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2088">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2089"/>
  <line no="2090">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2091">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2092">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2093">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ord'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2094">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2095">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$arg</token>
  </line>
  <line no="2096">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2097"/>
  <line no="2098">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$u_style</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2099">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2100">
    <token name="T_WHITESPACE">          </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2101">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2102">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'int_to_hex'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2103">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2104">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$arg</token>
  </line>
  <line no="2105">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2107"/>
  <line no="2108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2109">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2110"/>
  <line no="2111">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2112">
    <token name="T_DOC_COMMENT">   * Returns count of characters used in a string.</token>
  </line>
  <line no="2113">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2114">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string.</token>
  </line>
  <line no="2115">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2116">
    <token name="T_DOC_COMMENT">   * @return   array An associative array of Character as keys and</token>
  </line>
  <line no="2117">
    <token name="T_DOC_COMMENT">   *           their count as values.</token>
  </line>
  <line no="2118">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2119">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// there is no $mode parameters</token>
  </line>
  <line no="2120">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_count_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2122"/>
  <line no="2123">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">ksort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2124"/>
  <line no="2125">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2126">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2127"/>
  <line no="2128">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2129">
    <token name="T_DOC_COMMENT">   * Get a UTF-8 character from its decimal code representation.</token>
  </line>
  <line no="2130">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2131">
    <token name="T_DOC_COMMENT">   * @param   int $code Code.</token>
  </line>
  <line no="2132">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2133">
    <token name="T_DOC_COMMENT">   * @return  string</token>
  </line>
  <line no="2134">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2135">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">decimal_to_chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2136">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2138"/>
  <line no="2139">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2140">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;#x'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dechex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2142">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HTML-ENTITIES'</token>
  </line>
  <line no="2143">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2144">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2145"/>
  <line no="2146">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2147">
    <token name="T_DOC_COMMENT">   * encode a string</token>
  </line>
  <line no="2148">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2149">
    <token name="T_DOC_COMMENT">   * INFO:  The different to "UTF8::utf8_encode()" is that this function, try to fix also broken / double encoding,</token>
  </line>
  <line no="2150">
    <token name="T_DOC_COMMENT">   *        so you can call this function also on a UTF-8 String and you don't mess the string.</token>
  </line>
  <line no="2151">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2152">
    <token name="T_DOC_COMMENT">   * @param string $encoding e.g. 'UTF-8', 'ISO-8859-1', etc.</token>
  </line>
  <line no="2153">
    <token name="T_DOC_COMMENT">   * @param string $str      the string</token>
  </line>
  <line no="2154">
    <token name="T_DOC_COMMENT">   * @param bool   $force    force the new encoding (we try to fix broken / double encoding for UTF-8)&lt;br /&gt;</token>
  </line>
  <line no="2155">
    <token name="T_DOC_COMMENT">   *                         otherwise we auto-detect the current string-encoding</token>
  </line>
  <line no="2156">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2157">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="2158">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2159">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$force</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2160">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2161">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2162">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2163"/>
  <line no="2164">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2165">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2166">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2167"/>
  <line no="2168">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalizeEncoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2169">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">str_detect_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2170"/>
  <line no="2171">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2172">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$encodingDetected</token>
  </line>
  <line no="2173">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="2174">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2175">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$force</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="2176">
    <token name="T_WHITESPACE">            </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2177">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
  </line>
  <line no="2178">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2179">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2180">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2181"/>
  <line no="2182">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2183">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
  </line>
  <line no="2184">
    <token name="T_WHITESPACE">          </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="2185">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2186">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$force</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="2187">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
  </line>
  <line no="2188">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS-1252'</token>
  </line>
  <line no="2189">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
  </line>
  <line no="2190">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2191">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2192">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2193">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2194"/>
  <line no="2195">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2196">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
  </line>
  <line no="2197">
    <token name="T_WHITESPACE">          </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="2198">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2199">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$force</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="2200">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
  </line>
  <line no="2201">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingDetected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
  </line>
  <line no="2202">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2203">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2204">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_win1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2205">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2206"/>
  <line no="2207">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$strEncoded</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2208">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2209">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2210">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$encodingDetected</token>
  </line>
  <line no="2211">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2212"/>
  <line no="2213">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strEncoded</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2214">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strEncoded</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2215">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2216">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2217"/>
  <line no="2218">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2219">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2220"/>
  <line no="2221">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2222">
    <token name="T_DOC_COMMENT">   * Callback function for preg_replace_callback use.</token>
  </line>
  <line no="2223">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2224">
    <token name="T_DOC_COMMENT">   * @param  array $matches PREG matches</token>
  </line>
  <line no="2225">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2226">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="2227">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2228">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">entityCallback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2229">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2230">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2231"/>
  <line no="2232">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HTML-ENTITIES'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2233"/>
  <line no="2234">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2235">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;#x27;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2236">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2237"/>
  <line no="2238">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2239">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2240"/>
  <line no="2241">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2242">
    <token name="T_DOC_COMMENT">   * Reads entire file into a string.</token>
  </line>
  <line no="2243">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2244">
    <token name="T_DOC_COMMENT">   * WARNING: do not use UTF-8 Option fir binary-files (e.g.: images) !!!</token>
  </line>
  <line no="2245">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2246">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.file-get-contents.php</token>
  </line>
  <line no="2247">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2248">
    <token name="T_DOC_COMMENT">   * @param string   $filename      &lt;p&gt;</token>
  </line>
  <line no="2249">
    <token name="T_DOC_COMMENT">   *                                Name of the file to read.</token>
  </line>
  <line no="2250">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2251">
    <token name="T_DOC_COMMENT">   * @param int      $flags         [optional] &lt;p&gt;</token>
  </line>
  <line no="2252">
    <token name="T_DOC_COMMENT">   *                                Prior to PHP 6, this parameter is called</token>
  </line>
  <line no="2253">
    <token name="T_DOC_COMMENT">   *                                use_include_path and is a bool.</token>
  </line>
  <line no="2254">
    <token name="T_DOC_COMMENT">   *                                As of PHP 5 the FILE_USE_INCLUDE_PATH can be used</token>
  </line>
  <line no="2255">
    <token name="T_DOC_COMMENT">   *                                to trigger include path</token>
  </line>
  <line no="2256">
    <token name="T_DOC_COMMENT">   *                                search.</token>
  </line>
  <line no="2257">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2258">
    <token name="T_DOC_COMMENT">   *                                &lt;p&gt;</token>
  </line>
  <line no="2259">
    <token name="T_DOC_COMMENT">   *                                The value of flags can be any combination of</token>
  </line>
  <line no="2260">
    <token name="T_DOC_COMMENT">   *                                the following flags (with some restrictions), joined with the</token>
  </line>
  <line no="2261">
    <token name="T_DOC_COMMENT">   *                                binary OR (|)</token>
  </line>
  <line no="2262">
    <token name="T_DOC_COMMENT">   *                                operator.</token>
  </line>
  <line no="2263">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2264">
    <token name="T_DOC_COMMENT">   *                                &lt;p&gt;</token>
  </line>
  <line no="2265">
    <token name="T_DOC_COMMENT">   *                                &lt;table&gt;</token>
  </line>
  <line no="2266">
    <token name="T_DOC_COMMENT">   *                                Available flags</token>
  </line>
  <line no="2267">
    <token name="T_DOC_COMMENT">   *                                &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2268">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;Flag&lt;/td&gt;</token>
  </line>
  <line no="2269">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;Description&lt;/td&gt;</token>
  </line>
  <line no="2270">
    <token name="T_DOC_COMMENT">   *                                &lt;/tr&gt;</token>
  </line>
  <line no="2271">
    <token name="T_DOC_COMMENT">   *                                &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2272">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2273">
    <token name="T_DOC_COMMENT">   *                                FILE_USE_INCLUDE_PATH</token>
  </line>
  <line no="2274">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2275">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2276">
    <token name="T_DOC_COMMENT">   *                                Search for filename in the include directory.</token>
  </line>
  <line no="2277">
    <token name="T_DOC_COMMENT">   *                                See include_path for more</token>
  </line>
  <line no="2278">
    <token name="T_DOC_COMMENT">   *                                information.</token>
  </line>
  <line no="2279">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2280">
    <token name="T_DOC_COMMENT">   *                                &lt;/tr&gt;</token>
  </line>
  <line no="2281">
    <token name="T_DOC_COMMENT">   *                                &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2282">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2283">
    <token name="T_DOC_COMMENT">   *                                FILE_TEXT</token>
  </line>
  <line no="2284">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2285">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2286">
    <token name="T_DOC_COMMENT">   *                                As of PHP 6, the default encoding of the read</token>
  </line>
  <line no="2287">
    <token name="T_DOC_COMMENT">   *                                data is UTF-8. You can specify a different encoding by creating a</token>
  </line>
  <line no="2288">
    <token name="T_DOC_COMMENT">   *                                custom context or by changing the default using</token>
  </line>
  <line no="2289">
    <token name="T_DOC_COMMENT">   *                                stream_default_encoding. This flag cannot be</token>
  </line>
  <line no="2290">
    <token name="T_DOC_COMMENT">   *                                used with FILE_BINARY.</token>
  </line>
  <line no="2291">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2292">
    <token name="T_DOC_COMMENT">   *                                &lt;/tr&gt;</token>
  </line>
  <line no="2293">
    <token name="T_DOC_COMMENT">   *                                &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2294">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2295">
    <token name="T_DOC_COMMENT">   *                                FILE_BINARY</token>
  </line>
  <line no="2296">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2297">
    <token name="T_DOC_COMMENT">   *                                &lt;td&gt;</token>
  </line>
  <line no="2298">
    <token name="T_DOC_COMMENT">   *                                With this flag, the file is read in binary mode. This is the default</token>
  </line>
  <line no="2299">
    <token name="T_DOC_COMMENT">   *                                setting and cannot be used with FILE_TEXT.</token>
  </line>
  <line no="2300">
    <token name="T_DOC_COMMENT">   *                                &lt;/td&gt;</token>
  </line>
  <line no="2301">
    <token name="T_DOC_COMMENT">   *                                &lt;/tr&gt;</token>
  </line>
  <line no="2302">
    <token name="T_DOC_COMMENT">   *                                &lt;/table&gt;</token>
  </line>
  <line no="2303">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2304">
    <token name="T_DOC_COMMENT">   * @param resource $context       [optional] &lt;p&gt;</token>
  </line>
  <line no="2305">
    <token name="T_DOC_COMMENT">   *                                A valid context resource created with</token>
  </line>
  <line no="2306">
    <token name="T_DOC_COMMENT">   *                                stream_context_create. If you don't need to use a</token>
  </line>
  <line no="2307">
    <token name="T_DOC_COMMENT">   *                                custom context, you can skip this parameter by &amp;null;.</token>
  </line>
  <line no="2308">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2309">
    <token name="T_DOC_COMMENT">   * @param int      $offset        [optional] &lt;p&gt;</token>
  </line>
  <line no="2310">
    <token name="T_DOC_COMMENT">   *                                The offset where the reading starts.</token>
  </line>
  <line no="2311">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2312">
    <token name="T_DOC_COMMENT">   * @param int      $maxlen        [optional] &lt;p&gt;</token>
  </line>
  <line no="2313">
    <token name="T_DOC_COMMENT">   *                                Maximum length of data read. The default is to read until end</token>
  </line>
  <line no="2314">
    <token name="T_DOC_COMMENT">   *                                of file is reached.</token>
  </line>
  <line no="2315">
    <token name="T_DOC_COMMENT">   *                                &lt;/p&gt;</token>
  </line>
  <line no="2316">
    <token name="T_DOC_COMMENT">   * @param int      $timeout</token>
  </line>
  <line no="2317">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2318">
    <token name="T_DOC_COMMENT">   * @param boolean  $convertToUtf8 WARNING: maybe you can't use this option for images or pdf, because they used non</token>
  </line>
  <line no="2319">
    <token name="T_DOC_COMMENT">   *                                default utf-8 chars</token>
  </line>
  <line no="2320">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2321">
    <token name="T_DOC_COMMENT">   * @return string The function returns the read data or false on failure.</token>
  </line>
  <line no="2322">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2323">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maxlen</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">10</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$convertToUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2324">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2325">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="2326">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2327">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FILTER_SANITIZE_STRING</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2328"/>
  <line no="2329">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2330">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">stream_context_create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2331">
    <token name="T_WHITESPACE">          </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2332">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'http'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
  </line>
  <line no="2333">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2334">
    <token name="T_WHITESPACE">                      </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeout'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2335">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2336">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2337">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2338">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2339"/>
  <line no="2340">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maxlen</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2341">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maxlen</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2342">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2343">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2344">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2345"/>
  <line no="2346">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// return false on error</token>
  </line>
  <line no="2347">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2348">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2349">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2350"/>
  <line no="2351">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$convertToUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2352">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2353"/>
  <line no="2354">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2355">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">cleanup</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2356">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2357"/>
  <line no="2358">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// clean utf-8 string</token>
  </line>
  <line no="2359">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2360">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2361"/>
  <line no="2362">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2363">
    <token name="T_DOC_COMMENT">   * Checks if a file starts with BOM character.</token>
  </line>
  <line no="2364">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2365">
    <token name="T_DOC_COMMENT">   * @param    string $file_path Path to a valid file.</token>
  </line>
  <line no="2366">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2367">
    <token name="T_DOC_COMMENT">   * @return   bool True if the file has BOM at the start, False otherwise.</token>
  </line>
  <line no="2368">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2369">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_has_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file_path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2370">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2371">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file_path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2372">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2373"/>
  <line no="2374">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2375">
    <token name="T_DOC_COMMENT">   * Normalizes to UTF-8 NFC, converting from WINDOWS-1252 when needed.</token>
  </line>
  <line no="2376">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2377">
    <token name="T_DOC_COMMENT">   * @param mixed  $var</token>
  </line>
  <line no="2378">
    <token name="T_DOC_COMMENT">   * @param int    $normalization_form</token>
  </line>
  <line no="2379">
    <token name="T_DOC_COMMENT">   * @param string $leading_combining</token>
  </line>
  <line no="2380">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2381">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="2382">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2383">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalization_form</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$leading_combining</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x25CC;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2384">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2385">
    <token name="T_WHITESPACE">    </token>
    <token name="T_SWITCH">switch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">gettype</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2386">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'array'</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="2387">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2388">
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="2389">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalization_form</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$leading_combining</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2390">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2391">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2392">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'object'</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="2393">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2394">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalization_form</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$leading_combining</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2395">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2396">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2397">
    <token name="T_WHITESPACE">      </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="2398">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2399">
    <token name="T_WHITESPACE">          </token>
    <token name="T_COMMENT">// Workaround https://bugs.php.net/65732</token>
  </line>
  <line no="2400">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2401">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2402">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\x80-\xFF]/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2403">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isNormalized</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalization_form</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2404">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$n</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2405">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2406">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$n</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$normalization_form</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2407"/>
  <line no="2408">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$n</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2409">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$n</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2410">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2411">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2412">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2413"/>
  <line no="2414">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2415">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$n</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$leading_combining</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^\p{Mn}/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2416">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// Prevent leading combining chars</token>
  </line>
  <line no="2417">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// for NFC-safe concatenations.</token>
  </line>
  <line no="2418">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$leading_combining</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2419">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2420">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2421">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2422">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2423"/>
  <line no="2424">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2425">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2426"/>
  <line no="2427">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2428">
    <token name="T_DOC_COMMENT">   * "filter_input()"-wrapper with normalizes to UTF-8 NFC, converting from WINDOWS-1252 when needed.</token>
  </line>
  <line no="2429">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2430">
    <token name="T_DOC_COMMENT">   * @param int    $type</token>
  </line>
  <line no="2431">
    <token name="T_DOC_COMMENT">   * @param string $var</token>
  </line>
  <line no="2432">
    <token name="T_DOC_COMMENT">   * @param int    $filter</token>
  </line>
  <line no="2433">
    <token name="T_DOC_COMMENT">   * @param mixed  $option</token>
  </line>
  <line no="2434">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2435">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="2436">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2437">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FILTER_DEFAULT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$option</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2438">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2439">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">func_num_args</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2440">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2441">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2442">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$option</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2443">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2444"/>
  <line no="2445">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2446">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2447"/>
  <line no="2448">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2449">
    <token name="T_DOC_COMMENT">   * "filter_input_array()"-wrapper with normalizes to UTF-8 NFC, converting from WINDOWS-1252 when needed.</token>
  </line>
  <line no="2450">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2451">
    <token name="T_DOC_COMMENT">   * @param int   $type</token>
  </line>
  <line no="2452">
    <token name="T_DOC_COMMENT">   * @param mixed $definition</token>
  </line>
  <line no="2453">
    <token name="T_DOC_COMMENT">   * @param bool  $add_empty</token>
  </line>
  <line no="2454">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2455">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="2456">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2457">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$definition</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$add_empty</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2458">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2459">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">func_num_args</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2460">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2461">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2462">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_input_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$definition</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$add_empty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2463">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2464"/>
  <line no="2465">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2466">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2467"/>
  <line no="2468">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2469">
    <token name="T_DOC_COMMENT">   * "filter_var()"-wrapper with normalizes to UTF-8 NFC, converting from WINDOWS-1252 when needed.</token>
  </line>
  <line no="2470">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2471">
    <token name="T_DOC_COMMENT">   * @param mixed $var</token>
  </line>
  <line no="2472">
    <token name="T_DOC_COMMENT">   * @param int   $filter</token>
  </line>
  <line no="2473">
    <token name="T_DOC_COMMENT">   * @param mixed $option</token>
  </line>
  <line no="2474">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2475">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="2476">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2477">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FILTER_DEFAULT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$option</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2478">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2479">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">func_num_args</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2480">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2481">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2482">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filter</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$option</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2483">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2484"/>
  <line no="2485">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2486">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2487"/>
  <line no="2488">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2489">
    <token name="T_DOC_COMMENT">   * "filter_var_array()"-wrapper with normalizes to UTF-8 NFC, converting from WINDOWS-1252 when needed.</token>
  </line>
  <line no="2490">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2491">
    <token name="T_DOC_COMMENT">   * @param array $data</token>
  </line>
  <line no="2492">
    <token name="T_DOC_COMMENT">   * @param mixed $definition</token>
  </line>
  <line no="2493">
    <token name="T_DOC_COMMENT">   * @param bool  $add_empty</token>
  </line>
  <line no="2494">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2495">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="2496">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2497">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$definition</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$add_empty</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2498">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2499">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">func_num_args</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2500">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2501">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2502">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">filter_var_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$definition</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$add_empty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2503">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2504"/>
  <line no="2505">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2506">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2507"/>
  <line no="2508">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2509">
    <token name="T_DOC_COMMENT">   * Checks if the number of Unicode characters in a string are not</token>
  </line>
  <line no="2510">
    <token name="T_DOC_COMMENT">   * more than the specified integer.</token>
  </line>
  <line no="2511">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2512">
    <token name="T_DOC_COMMENT">   * @param    string $str      The original string to be checked.</token>
  </line>
  <line no="2513">
    <token name="T_DOC_COMMENT">   * @param    int    $box_size The size in number of chars to be checked against string.</token>
  </line>
  <line no="2514">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2515">
    <token name="T_DOC_COMMENT">   * @return   bool true if string is less than or equal to $box_size, false otherwise.</token>
  </line>
  <line no="2516">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2517">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fits_inside</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$box_size</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2518">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2519">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$box_size</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2520">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2521"/>
  <line no="2522">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2523">
    <token name="T_DOC_COMMENT">   * Fixing a broken UTF-8 string.</token>
  </line>
  <line no="2524">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2525">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="2526">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2527">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="2528">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2529">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fix_simple_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2530">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2531">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2532">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2533"/>
  <line no="2534">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2535"/>
  <line no="2536">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2537">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2538">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2539"/>
  <line no="2540">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2541">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2542">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2543">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2544"/>
  <line no="2545">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Keys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$brokenUtf8ToUtf8Values</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2546">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2547"/>
  <line no="2548">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2549">
    <token name="T_DOC_COMMENT">   * Fix a double (or multiple) encoded UTF8 string.</token>
  </line>
  <line no="2550">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2551">
    <token name="T_DOC_COMMENT">   * @param array|string $str</token>
  </line>
  <line no="2552">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2553">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="2554">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2555">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fix_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2556">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2557">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2558"/>
  <line no="2559">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2560">
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="2561">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fix_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2562">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2563"/>
  <line no="2564">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2565">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2566"/>
  <line no="2567">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$last</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2568">
    <token name="T_WHITESPACE">    </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$last</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2569">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$last</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2570">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">utf8_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2571">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2572"/>
  <line no="2573">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2574">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2575"/>
  <line no="2576">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2577">
    <token name="T_DOC_COMMENT">   * Get character of a specific character.</token>
  </line>
  <line no="2578">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2579">
    <token name="T_DOC_COMMENT">   * @param   string $chr Character.</token>
  </line>
  <line no="2580">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2581">
    <token name="T_DOC_COMMENT">   * @return  string 'RTL' or 'LTR'</token>
  </line>
  <line no="2582">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2583">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCharDirection</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2584">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2585">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr_to_decimal</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2586"/>
  <line no="2587">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x5be</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10b7f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2588">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LTR'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2589">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2590"/>
  <line no="2591">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x85e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2592"/>
  <line no="2593">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x5be</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2594">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x5c0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2595">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x5c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2596">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x5c6</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2597">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x5d0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x5ea</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2598">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x5f0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x5f4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2599">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x608</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2600">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x60b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2601">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x60d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2602">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x61b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2603">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x61e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x64a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2604">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x66d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x66f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2605">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x671</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x6d5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2606">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x6e5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x6e6</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2607">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x6ee</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x6ef</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2608">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x6fa</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x70d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2609">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x710</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2610">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x712</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x72f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2611">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x74d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x7a5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2612">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x7b1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2613">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x7c0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x7ea</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2614">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x7f4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x7f5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2615">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x7fa</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2616">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x800</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x815</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2617">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x81a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2618">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x824</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2619">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x828</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2620">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x830</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x83e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2621">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x840</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x858</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2622">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x85e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
  </line>
  <line no="2623">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2624">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RTL'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2625">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2626"/>
  <line no="2627">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x200f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2628"/>
  <line no="2629">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RTL'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2630"/>
  <line no="2631">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb1d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2632"/>
  <line no="2633">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb1d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2634">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb1f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfb28</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2635">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb2a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfb36</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2636">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb38</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfb3c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2637">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0xfb3e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2638">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb40</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfb41</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2639">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb43</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfb44</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2640">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfb46</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfbc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2641">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfbd3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfd3d</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2642">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfd50</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfd8f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2643">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfd92</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfdc7</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2644">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfdf0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfdfc</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2645">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfe70</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfe74</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2646">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xfe76</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xfefc</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2647">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10800</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10805</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2648">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x10808</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2649">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x1080a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10835</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2650">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10837</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10838</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2651">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x1083c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2652">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x1083f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10855</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2653">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10857</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x1085f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2654">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10900</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x1091b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2655">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10920</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10939</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2656">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x1093f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2657">
    <token name="T_WHITESPACE">          </token>
    <token name="T_LNUMBER">0x10a00</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2658">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a10</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a13</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2659">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a15</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a17</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2660">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a19</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a33</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2661">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a40</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a47</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2662">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a50</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a58</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2663">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10a60</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10a7f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2664">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10b00</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10b35</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2665">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10b40</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10b55</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2666">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10b58</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10b72</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="2667">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x10b78</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10b7f</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2668">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2669">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RTL'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2670">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2671">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2672"/>
  <line no="2673">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LTR'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2674">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2675"/>
  <line no="2676">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2677">
    <token name="T_DOC_COMMENT">   * get data from "/data/*.ser"</token>
  </line>
  <line no="2678">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2679">
    <token name="T_DOC_COMMENT">   * @param string $file</token>
  </line>
  <line no="2680">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2681">
    <token name="T_DOC_COMMENT">   * @return bool|string|array|int false on error</token>
  </line>
  <line no="2682">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2683">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getData</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2684">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2685">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DIR">__DIR__</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/data/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2686">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2687">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection PhpIncludeInspection */</token>
  </line>
  <line no="2688">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_REQUIRE">require</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2689">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2690">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2691">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2692">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2693"/>
  <line no="2694">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2695">
    <token name="T_DOC_COMMENT">   * Creates a random string of UTF-8 characters.</token>
  </line>
  <line no="2696">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2697">
    <token name="T_DOC_COMMENT">   * @param    int $len The length of string in characters.</token>
  </line>
  <line no="2698">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2699">
    <token name="T_DOC_COMMENT">   * @return   string String consisting of random characters.</token>
  </line>
  <line no="2700">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2701">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">hash</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2702">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2703">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2704">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars_len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2705"/>
  <line no="2706">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2707">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2708">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2709"/>
  <line no="2710">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="2711">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2712"/>
  <line no="2713">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2714">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'pcre_utf8'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2715">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2716">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2717">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2718">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'chr'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2719">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2720">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">48</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">79</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2721">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2722"/>
  <line no="2723">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[^\p{N}\p{Lu}\p{Ll}]/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2724"/>
  <line no="2725">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">array_filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2726">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2727">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_merge</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'0'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'9'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'A'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Z'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'a'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'z'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2728">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2729"/>
  <line no="2730">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$chars_len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2731">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2732"/>
  <line no="2733">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$hash</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2734"/>
  <line no="2735">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DEC">--</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2736">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$hash</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">mt_rand</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PERCENT">%</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars_len</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2737">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2738"/>
  <line no="2739">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$hash</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2740">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2741"/>
  <line no="2742">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2743">
    <token name="T_DOC_COMMENT">   * Converts hexadecimal U+xxxx code point representation to Integer.</token>
  </line>
  <line no="2744">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2745">
    <token name="T_DOC_COMMENT">   * INFO: opposite to UTF8::int_to_hex( )</token>
  </line>
  <line no="2746">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2747">
    <token name="T_DOC_COMMENT">   * @param    string $str The hexadecimal code point representation.</token>
  </line>
  <line no="2748">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2749">
    <token name="T_DOC_COMMENT">   * @return   int The code point, or 0 on failure.</token>
  </line>
  <line no="2750">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2751">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">hex_to_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2752">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2753">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(?:\\\u|U\+|)([a-z0-9]{4,6})$/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2754">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">intval</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2755">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2756"/>
  <line no="2757">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2758">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2759"/>
  <line no="2760">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2761">
    <token name="T_DOC_COMMENT">   * Converts a UTF-8 string to a series of HTML numbered entities.</token>
  </line>
  <line no="2762">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2763">
    <token name="T_DOC_COMMENT">   * e.g.: &amp;#123;&amp;#39;&amp;#1740;</token>
  </line>
  <line no="2764">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2765">
    <token name="T_DOC_COMMENT">   * @param  string $str The Unicode string to be encoded as numbered entities.</token>
  </line>
  <line no="2766">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2767">
    <token name="T_DOC_COMMENT">   * @return string HTML numbered entities.</token>
  </line>
  <line no="2768">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2769">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">html_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2770">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2771">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2772">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2773">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2774">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2775">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'single_chr_html_encode'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2776">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2777">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2778">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2779">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2780">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2781"/>
  <line no="2782">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2783">
    <token name="T_DOC_COMMENT">   * UTF-8 version of html_entity_decode()</token>
  </line>
  <line no="2784">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2785">
    <token name="T_DOC_COMMENT">   * The reason we are not using html_entity_decode() by itself is because</token>
  </line>
  <line no="2786">
    <token name="T_DOC_COMMENT">   * while it is not technically correct to leave out the semicolon</token>
  </line>
  <line no="2787">
    <token name="T_DOC_COMMENT">   * at the end of an entity most browsers will still interpret the entity</token>
  </line>
  <line no="2788">
    <token name="T_DOC_COMMENT">   * correctly. html_entity_decode() does not convert entities without</token>
  </line>
  <line no="2789">
    <token name="T_DOC_COMMENT">   * semicolons, so we are left with our own little solution here. Bummer.</token>
  </line>
  <line no="2790">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2791">
    <token name="T_DOC_COMMENT">   * Convert all HTML entities to their applicable characters</token>
  </line>
  <line no="2792">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2793">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.html-entity-decode.php</token>
  </line>
  <line no="2794">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2795">
    <token name="T_DOC_COMMENT">   * @param string $str      &lt;p&gt;</token>
  </line>
  <line no="2796">
    <token name="T_DOC_COMMENT">   *                         The input string.</token>
  </line>
  <line no="2797">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="2798">
    <token name="T_DOC_COMMENT">   * @param int    $flags    [optional] &lt;p&gt;</token>
  </line>
  <line no="2799">
    <token name="T_DOC_COMMENT">   *                         A bitmask of one or more of the following flags, which specify how to handle quotes and</token>
  </line>
  <line no="2800">
    <token name="T_DOC_COMMENT">   *                         which document type to use. The default is ENT_COMPAT | ENT_HTML401.</token>
  </line>
  <line no="2801">
    <token name="T_DOC_COMMENT">   *                         &lt;table&gt;</token>
  </line>
  <line no="2802">
    <token name="T_DOC_COMMENT">   *                         Available &lt;i&gt;flags&lt;/i&gt; constants</token>
  </line>
  <line no="2803">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2804">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;Constant Name&lt;/td&gt;</token>
  </line>
  <line no="2805">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;Description&lt;/td&gt;</token>
  </line>
  <line no="2806">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2807">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2808">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_COMPAT&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2809">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;Will convert double-quotes and leave single-quotes alone.&lt;/td&gt;</token>
  </line>
  <line no="2810">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2811">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2812">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_QUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2813">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;Will convert both double and single quotes.&lt;/td&gt;</token>
  </line>
  <line no="2814">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2815">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2816">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_NOQUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2817">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;Will leave both double and single quotes unconverted.&lt;/td&gt;</token>
  </line>
  <line no="2818">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2819">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2820">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_HTML401&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2821">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;</token>
  </line>
  <line no="2822">
    <token name="T_DOC_COMMENT">   *                         Handle code as HTML 4.01.</token>
  </line>
  <line no="2823">
    <token name="T_DOC_COMMENT">   *                         &lt;/td&gt;</token>
  </line>
  <line no="2824">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2825">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2826">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_XML1&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2827">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;</token>
  </line>
  <line no="2828">
    <token name="T_DOC_COMMENT">   *                         Handle code as XML 1.</token>
  </line>
  <line no="2829">
    <token name="T_DOC_COMMENT">   *                         &lt;/td&gt;</token>
  </line>
  <line no="2830">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2831">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2832">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_XHTML&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2833">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;</token>
  </line>
  <line no="2834">
    <token name="T_DOC_COMMENT">   *                         Handle code as XHTML.</token>
  </line>
  <line no="2835">
    <token name="T_DOC_COMMENT">   *                         &lt;/td&gt;</token>
  </line>
  <line no="2836">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2837">
    <token name="T_DOC_COMMENT">   *                         &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2838">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;&lt;b&gt;ENT_HTML5&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2839">
    <token name="T_DOC_COMMENT">   *                         &lt;td&gt;</token>
  </line>
  <line no="2840">
    <token name="T_DOC_COMMENT">   *                         Handle code as HTML 5.</token>
  </line>
  <line no="2841">
    <token name="T_DOC_COMMENT">   *                         &lt;/td&gt;</token>
  </line>
  <line no="2842">
    <token name="T_DOC_COMMENT">   *                         &lt;/tr&gt;</token>
  </line>
  <line no="2843">
    <token name="T_DOC_COMMENT">   *                         &lt;/table&gt;</token>
  </line>
  <line no="2844">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="2845">
    <token name="T_DOC_COMMENT">   * @param string $encoding [optional] &lt;p&gt;</token>
  </line>
  <line no="2846">
    <token name="T_DOC_COMMENT">   *                         Encoding to use.</token>
  </line>
  <line no="2847">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="2848">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2849">
    <token name="T_DOC_COMMENT">   * @return string the decoded string.</token>
  </line>
  <line no="2850">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2851">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">html_entity_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2852">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2853">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2854"/>
  <line no="2855">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2856">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2857">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2858"/>
  <line no="2859">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2860">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2861">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2862"/>
  <line no="2863">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2864">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Bootup</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_php</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5.4'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2865">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_HTML5</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2866">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2867">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2868">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2869">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2870"/>
  <line no="2871">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DO">do</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2872">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str_compare</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2873"/>
  <line no="2874">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace_callback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/&amp;#\d{2,5};/"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\voku\helper\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'entityCallback'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2875"/>
  <line no="2876">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// decode numeric &amp; UTF16 two byte entities</token>
  </line>
  <line no="2877">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">html_entity_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="2878">
    <token name="T_WHITESPACE">          </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/(&amp;#(?:x0*[0-9a-f]{2,5}(?![0-9a-f;])|(?:0*\d{2,4}(?![0-9;]))))/iS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'$1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2879">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="2880">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$encoding</token>
  </line>
  <line no="2881">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2882"/>
  <line no="2883">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str_compare</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2884"/>
  <line no="2885">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2886">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2887"/>
  <line no="2888">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2889">
    <token name="T_DOC_COMMENT">   * Convert all applicable characters to HTML entities: UTF-8 version of htmlentities()</token>
  </line>
  <line no="2890">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2891">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.htmlentities.php</token>
  </line>
  <line no="2892">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2893">
    <token name="T_DOC_COMMENT">   * @param string $str           &lt;p&gt;</token>
  </line>
  <line no="2894">
    <token name="T_DOC_COMMENT">   *                              The input string.</token>
  </line>
  <line no="2895">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="2896">
    <token name="T_DOC_COMMENT">   * @param int    $flags         [optional] &lt;p&gt;</token>
  </line>
  <line no="2897">
    <token name="T_DOC_COMMENT">   *                              A bitmask of one or more of the following flags, which specify how to handle quotes,</token>
  </line>
  <line no="2898">
    <token name="T_DOC_COMMENT">   *                              invalid code unit sequences and the used document type. The default is</token>
  </line>
  <line no="2899">
    <token name="T_DOC_COMMENT">   *                              ENT_COMPAT | ENT_HTML401.</token>
  </line>
  <line no="2900">
    <token name="T_DOC_COMMENT">   *                              &lt;table&gt;</token>
  </line>
  <line no="2901">
    <token name="T_DOC_COMMENT">   *                              Available &lt;i&gt;flags&lt;/i&gt; constants</token>
  </line>
  <line no="2902">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2903">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Constant Name&lt;/td&gt;</token>
  </line>
  <line no="2904">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Description&lt;/td&gt;</token>
  </line>
  <line no="2905">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2906">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2907">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_COMPAT&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2908">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will convert double-quotes and leave single-quotes alone.&lt;/td&gt;</token>
  </line>
  <line no="2909">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2910">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2911">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_QUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2912">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will convert both double and single quotes.&lt;/td&gt;</token>
  </line>
  <line no="2913">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2914">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2915">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_NOQUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2916">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will leave both double and single quotes unconverted.&lt;/td&gt;</token>
  </line>
  <line no="2917">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2918">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2919">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_IGNORE&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2920">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2921">
    <token name="T_DOC_COMMENT">   *                              Silently discard invalid code unit sequences instead of returning</token>
  </line>
  <line no="2922">
    <token name="T_DOC_COMMENT">   *                              an empty string. Using this flag is discouraged as it</token>
  </line>
  <line no="2923">
    <token name="T_DOC_COMMENT">   *                              may have security implications.</token>
  </line>
  <line no="2924">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2925">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2926">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2927">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_SUBSTITUTE&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2928">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2929">
    <token name="T_DOC_COMMENT">   *                              Replace invalid code unit sequences with a Unicode Replacement Character</token>
  </line>
  <line no="2930">
    <token name="T_DOC_COMMENT">   *                              U+FFFD (UTF-8) or &amp;#38;#38;#FFFD; (otherwise) instead of returning an empty string.</token>
  </line>
  <line no="2931">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2932">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2933">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2934">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_DISALLOWED&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2935">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2936">
    <token name="T_DOC_COMMENT">   *                              Replace invalid code points for the given document type with a</token>
  </line>
  <line no="2937">
    <token name="T_DOC_COMMENT">   *                              Unicode Replacement Character U+FFFD (UTF-8) or &amp;#38;#38;#FFFD;</token>
  </line>
  <line no="2938">
    <token name="T_DOC_COMMENT">   *                              (otherwise) instead of leaving them as is. This may be useful, for</token>
  </line>
  <line no="2939">
    <token name="T_DOC_COMMENT">   *                              instance, to ensure the well-formedness of XML documents with</token>
  </line>
  <line no="2940">
    <token name="T_DOC_COMMENT">   *                              embedded external content.</token>
  </line>
  <line no="2941">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2942">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2943">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2944">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_HTML401&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2945">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2946">
    <token name="T_DOC_COMMENT">   *                              Handle code as HTML 4.01.</token>
  </line>
  <line no="2947">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2948">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2949">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2950">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_XML1&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2951">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2952">
    <token name="T_DOC_COMMENT">   *                              Handle code as XML 1.</token>
  </line>
  <line no="2953">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2954">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2955">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2956">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_XHTML&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2957">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2958">
    <token name="T_DOC_COMMENT">   *                              Handle code as XHTML.</token>
  </line>
  <line no="2959">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2960">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2961">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="2962">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_HTML5&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="2963">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="2964">
    <token name="T_DOC_COMMENT">   *                              Handle code as HTML 5.</token>
  </line>
  <line no="2965">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="2966">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="2967">
    <token name="T_DOC_COMMENT">   *                              &lt;/table&gt;</token>
  </line>
  <line no="2968">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="2969">
    <token name="T_DOC_COMMENT">   * @param string $encoding      [optional] &lt;p&gt;</token>
  </line>
  <line no="2970">
    <token name="T_DOC_COMMENT">   *                              Like &lt;b&gt;htmlspecialchars&lt;/b&gt;,</token>
  </line>
  <line no="2971">
    <token name="T_DOC_COMMENT">   *                              &lt;b&gt;htmlentities&lt;/b&gt; takes an optional third argument</token>
  </line>
  <line no="2972">
    <token name="T_DOC_COMMENT">   *                              &lt;i&gt;encoding&lt;/i&gt; which defines encoding used in</token>
  </line>
  <line no="2973">
    <token name="T_DOC_COMMENT">   *                              conversion.</token>
  </line>
  <line no="2974">
    <token name="T_DOC_COMMENT">   *                              Although this argument is technically optional, you are highly</token>
  </line>
  <line no="2975">
    <token name="T_DOC_COMMENT">   *                              encouraged to specify the correct value for your code.</token>
  </line>
  <line no="2976">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="2977">
    <token name="T_DOC_COMMENT">   * @param bool   $double_encode [optional] &lt;p&gt;</token>
  </line>
  <line no="2978">
    <token name="T_DOC_COMMENT">   *                              When &lt;i&gt;double_encode&lt;/i&gt; is turned off PHP will not</token>
  </line>
  <line no="2979">
    <token name="T_DOC_COMMENT">   *                              encode existing html entities. The default is to convert everything.</token>
  </line>
  <line no="2980">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="2981">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2982">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2983">
    <token name="T_DOC_COMMENT">   * @return string the encoded string.</token>
  </line>
  <line no="2984">
    <token name="T_DOC_COMMENT">   * &lt;/p&gt;</token>
  </line>
  <line no="2985">
    <token name="T_DOC_COMMENT">   * &lt;p&gt;</token>
  </line>
  <line no="2986">
    <token name="T_DOC_COMMENT">   * If the input &lt;i&gt;string&lt;/i&gt; contains an invalid code unit</token>
  </line>
  <line no="2987">
    <token name="T_DOC_COMMENT">   * sequence within the given &lt;i&gt;encoding&lt;/i&gt; an empty string</token>
  </line>
  <line no="2988">
    <token name="T_DOC_COMMENT">   * will be returned, unless either the &lt;b&gt;ENT_IGNORE&lt;/b&gt; or</token>
  </line>
  <line no="2989">
    <token name="T_DOC_COMMENT">   * &lt;b&gt;ENT_SUBSTITUTE&lt;/b&gt; flags are set.</token>
  </line>
  <line no="2990">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="2991">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlentities</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$double_encode</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="2992">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="2993">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlentities</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$double_encode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2994">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="2995"/>
  <line no="2996">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="2997">
    <token name="T_DOC_COMMENT">   * Convert special characters to HTML entities: UTF-8 version of htmlspecialchars()</token>
  </line>
  <line no="2998">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="2999">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.htmlspecialchars.php</token>
  </line>
  <line no="3000">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3001">
    <token name="T_DOC_COMMENT">   * @param string $str           &lt;p&gt;</token>
  </line>
  <line no="3002">
    <token name="T_DOC_COMMENT">   *                              The string being converted.</token>
  </line>
  <line no="3003">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="3004">
    <token name="T_DOC_COMMENT">   * @param int    $flags         [optional] &lt;p&gt;</token>
  </line>
  <line no="3005">
    <token name="T_DOC_COMMENT">   *                              A bitmask of one or more of the following flags, which specify how to handle quotes,</token>
  </line>
  <line no="3006">
    <token name="T_DOC_COMMENT">   *                              invalid code unit sequences and the used document type. The default is</token>
  </line>
  <line no="3007">
    <token name="T_DOC_COMMENT">   *                              ENT_COMPAT | ENT_HTML401.</token>
  </line>
  <line no="3008">
    <token name="T_DOC_COMMENT">   *                              &lt;table&gt;</token>
  </line>
  <line no="3009">
    <token name="T_DOC_COMMENT">   *                              Available &lt;i&gt;flags&lt;/i&gt; constants</token>
  </line>
  <line no="3010">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3011">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Constant Name&lt;/td&gt;</token>
  </line>
  <line no="3012">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Description&lt;/td&gt;</token>
  </line>
  <line no="3013">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3014">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3015">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_COMPAT&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3016">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will convert double-quotes and leave single-quotes alone.&lt;/td&gt;</token>
  </line>
  <line no="3017">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3018">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3019">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_QUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3020">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will convert both double and single quotes.&lt;/td&gt;</token>
  </line>
  <line no="3021">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3022">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3023">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_NOQUOTES&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3024">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;Will leave both double and single quotes unconverted.&lt;/td&gt;</token>
  </line>
  <line no="3025">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3026">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3027">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_IGNORE&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3028">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3029">
    <token name="T_DOC_COMMENT">   *                              Silently discard invalid code unit sequences instead of returning</token>
  </line>
  <line no="3030">
    <token name="T_DOC_COMMENT">   *                              an empty string. Using this flag is discouraged as it</token>
  </line>
  <line no="3031">
    <token name="T_DOC_COMMENT">   *                              may have security implications.</token>
  </line>
  <line no="3032">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3033">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3034">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3035">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_SUBSTITUTE&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3036">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3037">
    <token name="T_DOC_COMMENT">   *                              Replace invalid code unit sequences with a Unicode Replacement Character</token>
  </line>
  <line no="3038">
    <token name="T_DOC_COMMENT">   *                              U+FFFD (UTF-8) or &amp;#38;#38;#FFFD; (otherwise) instead of returning an empty string.</token>
  </line>
  <line no="3039">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3040">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3041">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3042">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_DISALLOWED&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3043">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3044">
    <token name="T_DOC_COMMENT">   *                              Replace invalid code points for the given document type with a</token>
  </line>
  <line no="3045">
    <token name="T_DOC_COMMENT">   *                              Unicode Replacement Character U+FFFD (UTF-8) or &amp;#38;#38;#FFFD;</token>
  </line>
  <line no="3046">
    <token name="T_DOC_COMMENT">   *                              (otherwise) instead of leaving them as is. This may be useful, for</token>
  </line>
  <line no="3047">
    <token name="T_DOC_COMMENT">   *                              instance, to ensure the well-formedness of XML documents with</token>
  </line>
  <line no="3048">
    <token name="T_DOC_COMMENT">   *                              embedded external content.</token>
  </line>
  <line no="3049">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3050">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3051">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3052">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_HTML401&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3053">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3054">
    <token name="T_DOC_COMMENT">   *                              Handle code as HTML 4.01.</token>
  </line>
  <line no="3055">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3056">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3057">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3058">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_XML1&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3059">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3060">
    <token name="T_DOC_COMMENT">   *                              Handle code as XML 1.</token>
  </line>
  <line no="3061">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3062">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3063">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3064">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_XHTML&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3065">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3066">
    <token name="T_DOC_COMMENT">   *                              Handle code as XHTML.</token>
  </line>
  <line no="3067">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3068">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3069">
    <token name="T_DOC_COMMENT">   *                              &lt;tr valign="top"&gt;</token>
  </line>
  <line no="3070">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;&lt;b&gt;ENT_HTML5&lt;/b&gt;&lt;/td&gt;</token>
  </line>
  <line no="3071">
    <token name="T_DOC_COMMENT">   *                              &lt;td&gt;</token>
  </line>
  <line no="3072">
    <token name="T_DOC_COMMENT">   *                              Handle code as HTML 5.</token>
  </line>
  <line no="3073">
    <token name="T_DOC_COMMENT">   *                              &lt;/td&gt;</token>
  </line>
  <line no="3074">
    <token name="T_DOC_COMMENT">   *                              &lt;/tr&gt;</token>
  </line>
  <line no="3075">
    <token name="T_DOC_COMMENT">   *                              &lt;/table&gt;</token>
  </line>
  <line no="3076">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="3077">
    <token name="T_DOC_COMMENT">   * @param string $encoding      [optional] &lt;p&gt;</token>
  </line>
  <line no="3078">
    <token name="T_DOC_COMMENT">   *                              Defines encoding used in conversion.</token>
  </line>
  <line no="3079">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="3080">
    <token name="T_DOC_COMMENT">   *                              &lt;p&gt;</token>
  </line>
  <line no="3081">
    <token name="T_DOC_COMMENT">   *                              For the purposes of this function, the encodings</token>
  </line>
  <line no="3082">
    <token name="T_DOC_COMMENT">   *                              ISO-8859-1, ISO-8859-15,</token>
  </line>
  <line no="3083">
    <token name="T_DOC_COMMENT">   *                              UTF-8, cp866,</token>
  </line>
  <line no="3084">
    <token name="T_DOC_COMMENT">   *                              cp1251, cp1252, and</token>
  </line>
  <line no="3085">
    <token name="T_DOC_COMMENT">   *                              KOI8-R are effectively equivalent, provided the</token>
  </line>
  <line no="3086">
    <token name="T_DOC_COMMENT">   *                              &lt;i&gt;string&lt;/i&gt; itself is valid for the encoding, as</token>
  </line>
  <line no="3087">
    <token name="T_DOC_COMMENT">   *                              the characters affected by &lt;b&gt;htmlspecialchars&lt;/b&gt; occupy</token>
  </line>
  <line no="3088">
    <token name="T_DOC_COMMENT">   *                              the same positions in all of these encodings.</token>
  </line>
  <line no="3089">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="3090">
    <token name="T_DOC_COMMENT">   * @param bool   $double_encode [optional] &lt;p&gt;</token>
  </line>
  <line no="3091">
    <token name="T_DOC_COMMENT">   *                              When &lt;i&gt;double_encode&lt;/i&gt; is turned off PHP will not</token>
  </line>
  <line no="3092">
    <token name="T_DOC_COMMENT">   *                              encode existing html entities, the default is to convert everything.</token>
  </line>
  <line no="3093">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="3094">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3095">
    <token name="T_DOC_COMMENT">   * @return string The converted string.</token>
  </line>
  <line no="3096">
    <token name="T_DOC_COMMENT">   * &lt;/p&gt;</token>
  </line>
  <line no="3097">
    <token name="T_DOC_COMMENT">   * &lt;p&gt;</token>
  </line>
  <line no="3098">
    <token name="T_DOC_COMMENT">   * If the input &lt;i&gt;string&lt;/i&gt; contains an invalid code unit</token>
  </line>
  <line no="3099">
    <token name="T_DOC_COMMENT">   * sequence within the given &lt;i&gt;encoding&lt;/i&gt; an empty string</token>
  </line>
  <line no="3100">
    <token name="T_DOC_COMMENT">   * will be returned, unless either the &lt;b&gt;ENT_IGNORE&lt;/b&gt; or</token>
  </line>
  <line no="3101">
    <token name="T_DOC_COMMENT">   * &lt;b&gt;ENT_SUBSTITUTE&lt;/b&gt; flags are set.</token>
  </line>
  <line no="3102">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3103">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlspecialchars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$double_encode</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3104">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlspecialchars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$double_encode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3106">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3107"/>
  <line no="3108">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3109">
    <token name="T_DOC_COMMENT">   * checks whether iconv is available on the server</token>
  </line>
  <line no="3110">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3111">
    <token name="T_DOC_COMMENT">   * @return   bool True if available, False otherwise</token>
  </line>
  <line no="3112">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3113">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">iconv_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3114">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3115">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">extension_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'iconv'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3116">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3117"/>
  <line no="3118">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3119">
    <token name="T_DOC_COMMENT">   * Converts Integer to hexadecimal U+xxxx code point representation.</token>
  </line>
  <line no="3120">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3121">
    <token name="T_DOC_COMMENT">   * @param    int    $int The integer to be converted to hexadecimal code point.</token>
  </line>
  <line no="3122">
    <token name="T_DOC_COMMENT">   * @param    string $pfix</token>
  </line>
  <line no="3123">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3124">
    <token name="T_DOC_COMMENT">   * @return   string The code point, or empty string on failure.</token>
  </line>
  <line no="3125">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3126">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int_to_hex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$int</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pfix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'U+'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3127">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3128">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ctype_digit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$int</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3129">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dechex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$int</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3130"/>
  <line no="3131">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'0000'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3132"/>
  <line no="3133">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pfix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$hex</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3134">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3135"/>
  <line no="3136">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3137">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3138"/>
  <line no="3139">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3140">
    <token name="T_DOC_COMMENT">   * checks whether intl is available on the server</token>
  </line>
  <line no="3141">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3142">
    <token name="T_DOC_COMMENT">   * @return   bool True if available, False otherwise</token>
  </line>
  <line no="3143">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3144">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">intl_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3145">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3146">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">extension_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'intl'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3147">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3148"/>
  <line no="3149">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3150">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::is_ascii()"</token>
  </line>
  <line no="3151">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3152">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3153">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3154">
    <token name="T_DOC_COMMENT">   * @return boolean</token>
  </line>
  <line no="3155">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3156">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isAscii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3157">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3158">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ascii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3159">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3160"/>
  <line no="3161">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3162">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::is_base64"</token>
  </line>
  <line no="3163">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3164">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3165">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3166">
    <token name="T_DOC_COMMENT">   * @return bool</token>
  </line>
  <line no="3167">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3168">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isBase64</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3169">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3170">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_base64</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3171">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3172"/>
  <line no="3173">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3174">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::is_bom"</token>
  </line>
  <line no="3175">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3176">
    <token name="T_DOC_COMMENT">   * @param string $utf8_chr</token>
  </line>
  <line no="3177">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3178">
    <token name="T_DOC_COMMENT">   * @return boolean</token>
  </line>
  <line no="3179">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3180">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isBom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8_chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3181">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3182">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8_chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3183">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3184"/>
  <line no="3185">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3186">
    <token name="T_DOC_COMMENT">   * Try to check if a string is a json-string...</token>
  </line>
  <line no="3187">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3188">
    <token name="T_DOC_COMMENT">   * @param $str</token>
  </line>
  <line no="3189">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3190">
    <token name="T_DOC_COMMENT">   * @return bool</token>
  </line>
  <line no="3191">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3192">
    <token name="T_DOC_COMMENT">   * @deprecated</token>
  </line>
  <line no="3193">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3194">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isJson</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3195">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3196">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3197"/>
  <line no="3198">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3199">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3200">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3201"/>
  <line no="3202">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3203">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">is_object</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">json_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3204">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="3205">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">json_last_error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">JSON_ERROR_NONE</token>
  </line>
  <line no="3206">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3207">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3208">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3209">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3210">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3211">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3212"/>
  <line no="3213">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3214">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::is_utf8"</token>
  </line>
  <line no="3215">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3216">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3217">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3218">
    <token name="T_DOC_COMMENT">   * @return bool</token>
  </line>
  <line no="3219">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3220">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isUtf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3221">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3222">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3223">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3224"/>
  <line no="3225">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3226">
    <token name="T_DOC_COMMENT">   * Checks if a string is 7 bit ASCII.</token>
  </line>
  <line no="3227">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3228">
    <token name="T_DOC_COMMENT">   * @param    string $str The string to check.</token>
  </line>
  <line no="3229">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3230">
    <token name="T_DOC_COMMENT">   * @return   bool &lt;strong&gt;true&lt;/strong&gt; if it is ASCII&lt;br /&gt;</token>
  </line>
  <line no="3231">
    <token name="T_DOC_COMMENT">   *                &lt;strong&gt;false&lt;/strong&gt; otherwise</token>
  </line>
  <line no="3232">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3233">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_ascii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3234">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3235">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOL_CAST">(bool)</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\x80-\xFF]/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3236">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3237"/>
  <line no="3238">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3239">
    <token name="T_DOC_COMMENT">   * Returns true if the string is base64 encoded, false otherwise.</token>
  </line>
  <line no="3240">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3241">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3242">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3243">
    <token name="T_DOC_COMMENT">   * @return bool Whether or not $str is base64 encoded</token>
  </line>
  <line no="3244">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3245">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_base64</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3246">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3248"/>
  <line no="3249">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3250">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3251">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3252"/>
  <line no="3253">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">base64_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">base64_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3254">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3255">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3256">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3257">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3258">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3259"/>
  <line no="3260">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3261">
    <token name="T_DOC_COMMENT">   * Check if the input is binary... (is look like a hack)</token>
  </line>
  <line no="3262">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3263">
    <token name="T_DOC_COMMENT">   * @param string $input</token>
  </line>
  <line no="3264">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3265">
    <token name="T_DOC_COMMENT">   * @return bool</token>
  </line>
  <line no="3266">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3267">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3268">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3269"/>
  <line no="3270">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$testLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3271"/>
  <line no="3272">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3273">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'~^[01]+$~'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3274">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3275">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">substr_count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
  </line>
  <line no="3276">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3277">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr_count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'^ -~'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DNUMBER">0.3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3278">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3279">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3280">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3281">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3282">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3283">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3284"/>
  <line no="3285">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3286">
    <token name="T_DOC_COMMENT">   * Check if the file is binary.</token>
  </line>
  <line no="3287">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3288">
    <token name="T_DOC_COMMENT">   * @param string $file</token>
  </line>
  <line no="3289">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3290">
    <token name="T_DOC_COMMENT">   * @return boolean</token>
  </line>
  <line no="3291">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3292">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_binary_file</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3293">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3294">
    <token name="T_WHITESPACE">    </token>
    <token name="T_TRY">try</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3295">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$fp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fopen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'r'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3296">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$block</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fread</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">512</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3297">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">fclose</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fp</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CATCH">catch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3299">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$block</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3300">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3301"/>
  <line no="3302">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$block</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3303">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3304"/>
  <line no="3305">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3306">
    <token name="T_DOC_COMMENT">   * Checks if the given string is exactly "UTF8 - Byte Order Mark".</token>
  </line>
  <line no="3307">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3308">
    <token name="T_DOC_COMMENT">   * WARNING: Use "UTF8::string_has_bom()" if you will check BOM in a string.</token>
  </line>
  <line no="3309">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3310">
    <token name="T_DOC_COMMENT">   * @param    string $utf8_chr The input string.</token>
  </line>
  <line no="3311">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3312">
    <token name="T_DOC_COMMENT">   * @return   bool True if the $utf8_chr is Byte Order Mark, False otherwise.</token>
  </line>
  <line no="3313">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3314">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8_chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3315">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3316">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8_chr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3317">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3318"/>
  <line no="3319">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3320">
    <token name="T_DOC_COMMENT">   * Check if the string is UTF-16.</token>
  </line>
  <line no="3321">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3322">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3323">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3324">
    <token name="T_DOC_COMMENT">   * @return int|false false if is't not UTF16, 1 for UTF-16LE, 2 for UTF-16BE.</token>
  </line>
  <line no="3325">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3326">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_utf16</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3327">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3328">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3329">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3330"/>
  <line no="3331">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$maybeUTF16LE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3332">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16LE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3333">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3334">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3335">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16LE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3336">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3337">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3338">
    <token name="T_WHITESPACE">          </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3charEmpty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3339">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3340">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$maybeUTF16LE</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3341">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3342">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3343">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3344">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3345"/>
  <line no="3346">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$maybeUTF16BE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3347">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16BE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3348">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3349">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3350">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16BE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3351">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3352">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3353">
    <token name="T_WHITESPACE">          </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3charEmpty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3354">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3355">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$maybeUTF16BE</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3356">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3357">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3358">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3359">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3360"/>
  <line no="3361">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maybeUTF16BE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maybeUTF16LE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3362">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maybeUTF16LE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maybeUTF16BE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3363">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3364">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3365">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3366">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3367">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3368"/>
  <line no="3369">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3370"/>
  <line no="3371">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3372">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3373"/>
  <line no="3374">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3375">
    <token name="T_DOC_COMMENT">   * Check if the string is UTF-32.</token>
  </line>
  <line no="3376">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3377">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="3378">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3379">
    <token name="T_DOC_COMMENT">   * @return int|false false if is't not UTF16, 1 for UTF-32LE, 2 for UTF-32BE.</token>
  </line>
  <line no="3380">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3381">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_utf32</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3382">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3383">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3384">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3385"/>
  <line no="3386">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$maybeUTF32LE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3387">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32LE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3388">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3389">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32LE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3390">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32LE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3391">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3392">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3393">
    <token name="T_WHITESPACE">          </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3charEmpty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3394">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3395">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$maybeUTF32LE</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3396">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3397">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3398">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3399">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3400"/>
  <line no="3401">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$maybeUTF32BE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3402">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32BE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3403">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3404">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32BE'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3405">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32BE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3406">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3407">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3408">
    <token name="T_WHITESPACE">          </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">count_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$test3charEmpty</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3409">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3char</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strChars</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3410">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$maybeUTF32BE</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3411">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3412">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3413">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3414">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3415"/>
  <line no="3416">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maybeUTF32BE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maybeUTF32LE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3417">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$maybeUTF32LE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$maybeUTF32BE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3418">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3419">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3420">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3421">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3422">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3423"/>
  <line no="3424">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3425"/>
  <line no="3426">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3427">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3428"/>
  <line no="3429">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3430">
    <token name="T_DOC_COMMENT">   * Checks whether the passed string contains only byte sequences that appear valid UTF-8 characters.</token>
  </line>
  <line no="3431">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3432">
    <token name="T_DOC_COMMENT">   * @see    http://hsivonen.iki.fi/php-utf8/</token>
  </line>
  <line no="3433">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3434">
    <token name="T_DOC_COMMENT">   * @param    string $str The string to be checked.</token>
  </line>
  <line no="3435">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3436">
    <token name="T_DOC_COMMENT">   * @return   bool</token>
  </line>
  <line no="3437">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3438">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3439">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3440">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3441"/>
  <line no="3442">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3443">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3444">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3445"/>
  <line no="3446">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">pcre_utf8_support</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3447"/>
  <line no="3448">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// If even just the first character can be matched, when the /u</token>
  </line>
  <line no="3449">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// modifier is used, then it's valid UTF-8. If the UTF-8 is somehow</token>
  </line>
  <line no="3450">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// invalid, nothing at all will match, even if the string contains</token>
  </line>
  <line no="3451">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// some valid sequences</token>
  </line>
  <line no="3452">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^.{1}/us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ar</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3453"/>
  <line no="3454">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3455"/>
  <line no="3456">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// cached expected number of octets after the current octet</token>
  </line>
  <line no="3457">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// until the beginning of the next UTF8 character sequence</token>
  </line>
  <line no="3458">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// cached Unicode character</token>
  </line>
  <line no="3459">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// cached expected number of octets in the current sequence</token>
  </line>
  <line no="3460">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3461"/>
  <line no="3462">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection ForeachInvariantsInspection */</token>
  </line>
  <line no="3463">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3464">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3465">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3466">
    <token name="T_WHITESPACE">          </token>
    <token name="T_COMMENT">// When mState is zero we expect either a US-ASCII character or a</token>
  </line>
  <line no="3467">
    <token name="T_WHITESPACE">          </token>
    <token name="T_COMMENT">// multi-octet sequence.</token>
  </line>
  <line no="3468">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3469">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// US-ASCII, pass straight through.</token>
  </line>
  <line no="3470">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3471">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xE0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3472">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// First octet of 2 octet sequence.</token>
  </line>
  <line no="3473">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3474">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x1F</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3475">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3476">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3477">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xE0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xF0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3478">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// First octet of 3 octet sequence.</token>
  </line>
  <line no="3479">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3480">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x0F</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">12</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3481">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3482">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3483">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xF0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xF8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3484">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// First octet of 4 octet sequence.</token>
  </line>
  <line no="3485">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3486">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x07</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">18</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3487">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3488">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3489">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xF8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xFC</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3490">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">/* First octet of 5 octet sequence.</token>
  </line>
  <line no="3491">
    <token name="T_COMMENT">            *</token>
  </line>
  <line no="3492">
    <token name="T_COMMENT">            * This is illegal because the encoded codepoint must be either</token>
  </line>
  <line no="3493">
    <token name="T_COMMENT">            * (a) not the shortest form or</token>
  </line>
  <line no="3494">
    <token name="T_COMMENT">            * (b) outside the Unicode range of 0-0x10FFFF.</token>
  </line>
  <line no="3495">
    <token name="T_COMMENT">            * Rather than trying to resynchronize, we will carry on until the end</token>
  </line>
  <line no="3496">
    <token name="T_COMMENT">            * of the sequence and let the later error handling code catch it.</token>
  </line>
  <line no="3497">
    <token name="T_COMMENT">            */</token>
  </line>
  <line no="3498">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3499">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x03</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">24</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3500">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3501">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">5</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3502">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xFC</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xFE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3503">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// First octet of 6 octet sequence, see comments for 5 octet sequence.</token>
  </line>
  <line no="3504">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3505">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">30</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3506">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">5</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3507">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3508">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3509">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">/* Current octet is neither in the US-ASCII range nor a legal first</token>
  </line>
  <line no="3510">
    <token name="T_COMMENT">             * octet of a multi-octet sequence.</token>
  </line>
  <line no="3511">
    <token name="T_COMMENT">             */</token>
  </line>
  <line no="3512">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3513">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3514">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3515">
    <token name="T_WHITESPACE">          </token>
    <token name="T_COMMENT">// When mState is non-zero, we expect a continuation of the multi-octet</token>
  </line>
  <line no="3516">
    <token name="T_WHITESPACE">          </token>
    <token name="T_COMMENT">// sequence</token>
  </line>
  <line no="3517">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3518">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// Legal continuation.</token>
  </line>
  <line no="3519">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$shift</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3520">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$in</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3521">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x0000003F</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$shift</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3522">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_OR_EQUAL">|=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3523">
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3524">
    <token name="T_DOC_COMMENT">             * End of the multi-octet sequence. mUcs4 now contains the final</token>
  </line>
  <line no="3525">
    <token name="T_DOC_COMMENT">             * Unicode code point to be output</token>
  </line>
  <line no="3526">
    <token name="T_DOC_COMMENT">             */</token>
  </line>
  <line no="3527">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DEC">--</token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3528">
    <token name="T_WHITESPACE">              </token>
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="3529">
    <token name="T_COMMENT">              * Check for illegal sequences and code points.</token>
  </line>
  <line no="3530">
    <token name="T_COMMENT">              */</token>
  </line>
  <line no="3531">
    <token name="T_WHITESPACE">              </token>
    <token name="T_COMMENT">// From Unicode 3.1, non-shortest form is illegal</token>
  </line>
  <line no="3532">
    <token name="T_WHITESPACE">              </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3533">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x0080</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3534">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x0800</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3535">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10000</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3536">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3537">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_COMMENT">// From Unicode 3.2, surrogate characters are illegal.</token>
  </line>
  <line no="3538">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xFFFFF800</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xD800</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="3539">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_COMMENT">// Code points outside the Unicode range are illegal.</token>
  </line>
  <line no="3540">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x10FFFF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3541">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3542">
    <token name="T_WHITESPACE">                </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3543">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3544">
    <token name="T_WHITESPACE">              </token>
    <token name="T_COMMENT">// initialize UTF8 cache</token>
  </line>
  <line no="3545">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$mState</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3546">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$mUcs4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3547">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$mBytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3548">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3549">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3550">
    <token name="T_WHITESPACE">            </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3551">
    <token name="T_DOC_COMMENT">             *((0xC0 &amp; (*in) != 0x80) &amp;&amp; (mState != 0))</token>
  </line>
  <line no="3552">
    <token name="T_DOC_COMMENT">             * Incomplete multi-octet sequence.</token>
  </line>
  <line no="3553">
    <token name="T_DOC_COMMENT">             */</token>
  </line>
  <line no="3554">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3555">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3556">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3557">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3558"/>
  <line no="3559">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3560">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3561">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3562"/>
  <line no="3563">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3564">
    <token name="T_DOC_COMMENT">   * (PHP 5 &amp;gt;= 5.2.0, PECL json &amp;gt;= 1.2.0)&lt;br/&gt;</token>
  </line>
  <line no="3565">
    <token name="T_DOC_COMMENT">   * Decodes a JSON string</token>
  </line>
  <line no="3566">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3567">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.json-decode.php</token>
  </line>
  <line no="3568">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3569">
    <token name="T_DOC_COMMENT">   * @param string $json    &lt;p&gt;</token>
  </line>
  <line no="3570">
    <token name="T_DOC_COMMENT">   *                        The &lt;i&gt;json&lt;/i&gt; string being decoded.</token>
  </line>
  <line no="3571">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3572">
    <token name="T_DOC_COMMENT">   *                        &lt;p&gt;</token>
  </line>
  <line no="3573">
    <token name="T_DOC_COMMENT">   *                        This function only works with UTF-8 encoded strings.</token>
  </line>
  <line no="3574">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3575">
    <token name="T_DOC_COMMENT">   *                        &lt;p&gt;PHP implements a superset of</token>
  </line>
  <line no="3576">
    <token name="T_DOC_COMMENT">   *                        JSON - it will also encode and decode scalar types and &lt;b&gt;NULL&lt;/b&gt;. The JSON standard</token>
  </line>
  <line no="3577">
    <token name="T_DOC_COMMENT">   *                        only supports these values when they are nested inside an array or an object.</token>
  </line>
  <line no="3578">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3579">
    <token name="T_DOC_COMMENT">   * @param bool   $assoc   [optional] &lt;p&gt;</token>
  </line>
  <line no="3580">
    <token name="T_DOC_COMMENT">   *                        When &lt;b&gt;TRUE&lt;/b&gt;, returned objects will be converted into</token>
  </line>
  <line no="3581">
    <token name="T_DOC_COMMENT">   *                        associative arrays.</token>
  </line>
  <line no="3582">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3583">
    <token name="T_DOC_COMMENT">   * @param int    $depth   [optional] &lt;p&gt;</token>
  </line>
  <line no="3584">
    <token name="T_DOC_COMMENT">   *                        User specified recursion depth.</token>
  </line>
  <line no="3585">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3586">
    <token name="T_DOC_COMMENT">   * @param int    $options [optional] &lt;p&gt;</token>
  </line>
  <line no="3587">
    <token name="T_DOC_COMMENT">   *                        Bitmask of JSON decode options. Currently only</token>
  </line>
  <line no="3588">
    <token name="T_DOC_COMMENT">   *                        &lt;b&gt;JSON_BIGINT_AS_STRING&lt;/b&gt;</token>
  </line>
  <line no="3589">
    <token name="T_DOC_COMMENT">   *                        is supported (default is to cast large integers as floats)</token>
  </line>
  <line no="3590">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3591">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3592">
    <token name="T_DOC_COMMENT">   * @return mixed the value encoded in &lt;i&gt;json&lt;/i&gt; in appropriate</token>
  </line>
  <line no="3593">
    <token name="T_DOC_COMMENT">   * PHP type. Values true, false and</token>
  </line>
  <line no="3594">
    <token name="T_DOC_COMMENT">   * null (case-insensitive) are returned as &lt;b&gt;TRUE&lt;/b&gt;, &lt;b&gt;FALSE&lt;/b&gt;</token>
  </line>
  <line no="3595">
    <token name="T_DOC_COMMENT">   * and &lt;b&gt;NULL&lt;/b&gt; respectively. &lt;b&gt;NULL&lt;/b&gt; is returned if the</token>
  </line>
  <line no="3596">
    <token name="T_DOC_COMMENT">   * &lt;i&gt;json&lt;/i&gt; cannot be decoded or if the encoded</token>
  </line>
  <line no="3597">
    <token name="T_DOC_COMMENT">   * data is deeper than the recursion limit.</token>
  </line>
  <line no="3598">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3599">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$assoc</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$depth</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">512</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$options</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3600">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3601">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3602"/>
  <line no="3603">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Bootup</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_php</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5.4'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3604">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$assoc</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$depth</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$options</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3605">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3606">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$assoc</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$depth</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3607">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3608"/>
  <line no="3609">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3610">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3611"/>
  <line no="3612">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3613">
    <token name="T_DOC_COMMENT">   * (PHP 5 &amp;gt;= 5.2.0, PECL json &amp;gt;= 1.2.0)&lt;br/&gt;</token>
  </line>
  <line no="3614">
    <token name="T_DOC_COMMENT">   * Returns the JSON representation of a value</token>
  </line>
  <line no="3615">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3616">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.json-encode.php</token>
  </line>
  <line no="3617">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3618">
    <token name="T_DOC_COMMENT">   * @param mixed $value   &lt;p&gt;</token>
  </line>
  <line no="3619">
    <token name="T_DOC_COMMENT">   *                       The &lt;i&gt;value&lt;/i&gt; being encoded. Can be any type except</token>
  </line>
  <line no="3620">
    <token name="T_DOC_COMMENT">   *                       a resource.</token>
  </line>
  <line no="3621">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="3622">
    <token name="T_DOC_COMMENT">   *                       &lt;p&gt;</token>
  </line>
  <line no="3623">
    <token name="T_DOC_COMMENT">   *                       All string data must be UTF-8 encoded.</token>
  </line>
  <line no="3624">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="3625">
    <token name="T_DOC_COMMENT">   *                       &lt;p&gt;PHP implements a superset of</token>
  </line>
  <line no="3626">
    <token name="T_DOC_COMMENT">   *                       JSON - it will also encode and decode scalar types and &lt;b&gt;NULL&lt;/b&gt;. The JSON standard</token>
  </line>
  <line no="3627">
    <token name="T_DOC_COMMENT">   *                       only supports these values when they are nested inside an array or an object.</token>
  </line>
  <line no="3628">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="3629">
    <token name="T_DOC_COMMENT">   * @param int   $options [optional] &lt;p&gt;</token>
  </line>
  <line no="3630">
    <token name="T_DOC_COMMENT">   *                       Bitmask consisting of &lt;b&gt;JSON_HEX_QUOT&lt;/b&gt;,</token>
  </line>
  <line no="3631">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_HEX_TAG&lt;/b&gt;,</token>
  </line>
  <line no="3632">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_HEX_AMP&lt;/b&gt;,</token>
  </line>
  <line no="3633">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_HEX_APOS&lt;/b&gt;,</token>
  </line>
  <line no="3634">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_NUMERIC_CHECK&lt;/b&gt;,</token>
  </line>
  <line no="3635">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_PRETTY_PRINT&lt;/b&gt;,</token>
  </line>
  <line no="3636">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_UNESCAPED_SLASHES&lt;/b&gt;,</token>
  </line>
  <line no="3637">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_FORCE_OBJECT&lt;/b&gt;,</token>
  </line>
  <line no="3638">
    <token name="T_DOC_COMMENT">   *                       &lt;b&gt;JSON_UNESCAPED_UNICODE&lt;/b&gt;. The behaviour of these</token>
  </line>
  <line no="3639">
    <token name="T_DOC_COMMENT">   *                       constants is described on</token>
  </line>
  <line no="3640">
    <token name="T_DOC_COMMENT">   *                       the JSON constants page.</token>
  </line>
  <line no="3641">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="3642">
    <token name="T_DOC_COMMENT">   * @param int   $depth   [optional] &lt;p&gt;</token>
  </line>
  <line no="3643">
    <token name="T_DOC_COMMENT">   *                       Set the maximum depth. Must be greater than zero.</token>
  </line>
  <line no="3644">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="3645">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3646">
    <token name="T_DOC_COMMENT">   * @return string a JSON encoded string on success or &lt;b&gt;FALSE&lt;/b&gt; on failure.</token>
  </line>
  <line no="3647">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3648">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$options</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$depth</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">512</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3649">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3650">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3651"/>
  <line no="3652">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Bootup</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_php</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5.5'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3653">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$options</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$depth</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3654">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3655">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">json_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$options</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3656">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3657"/>
  <line no="3658">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$json</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3659">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3660"/>
  <line no="3661">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3662">
    <token name="T_DOC_COMMENT">   * Makes string's first char lowercase.</token>
  </line>
  <line no="3663">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3664">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string</token>
  </line>
  <line no="3665">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3666">
    <token name="T_DOC_COMMENT">   * @return   string The resulting string</token>
  </line>
  <line no="3667">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3668">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">lcfirst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3669">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3670">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3671">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3672"/>
  <line no="3673">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3674">
    <token name="T_DOC_COMMENT">   * Strip whitespace or other characters from beginning of a UTF-8 string.</token>
  </line>
  <line no="3675">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3676">
    <token name="T_DOC_COMMENT">   * WARNING: This is much slower then "ltrim()" !!!!</token>
  </line>
  <line no="3677">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3678">
    <token name="T_DOC_COMMENT">   * @param    string $str   The string to be trimmed</token>
  </line>
  <line no="3679">
    <token name="T_DOC_COMMENT">   * @param    string $chars Optional characters to be stripped</token>
  </line>
  <line no="3680">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3681">
    <token name="T_DOC_COMMENT">   * @return   string The string with unwanted characters stripped from the left</token>
  </line>
  <line no="3682">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3683">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ltrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3684">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3685">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3686"/>
  <line no="3687">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3688">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3689">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3690"/>
  <line no="3691">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\s'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3692"/>
  <line no="3693">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/^</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">+/u</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3694">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3695"/>
  <line no="3696">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3697">
    <token name="T_DOC_COMMENT">   * Returns the UTF-8 character with the maximum code point in the given data.</token>
  </line>
  <line no="3698">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3699">
    <token name="T_DOC_COMMENT">   * @param    mixed $arg A UTF-8 encoded string or an array of such strings.</token>
  </line>
  <line no="3700">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3701">
    <token name="T_DOC_COMMENT">   * @return   string The character with the highest code point than others.</token>
  </line>
  <line no="3702">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3703">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3704">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3705">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3706">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3707">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3708"/>
  <line no="3709">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">codepoints</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3710">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3711"/>
  <line no="3712">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3713">
    <token name="T_DOC_COMMENT">   * Calculates and returns the maximum number of bytes taken by any</token>
  </line>
  <line no="3714">
    <token name="T_DOC_COMMENT">   * UTF-8 encoded character in the given string.</token>
  </line>
  <line no="3715">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3716">
    <token name="T_DOC_COMMENT">   * @param    string $str The original Unicode string.</token>
  </line>
  <line no="3717">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3718">
    <token name="T_DOC_COMMENT">   * @return   int An array of byte lengths of each character.</token>
  </line>
  <line no="3719">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3720">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">max_chr_width</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3721">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3722">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr_size_list</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3723">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3724">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">max</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bytes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3725">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3726">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3727">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3728">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3729"/>
  <line no="3730">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3731">
    <token name="T_DOC_COMMENT">   * checks whether mbstring is available on the server</token>
  </line>
  <line no="3732">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3733">
    <token name="T_DOC_COMMENT">   * @return   bool True if available, False otherwise</token>
  </line>
  <line no="3734">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3735">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">mbstring_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3736">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3737">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">extension_loaded</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3738"/>
  <line no="3739">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3740">
    <token name="T_WHITESPACE">      </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_internal_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3741">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3742"/>
  <line no="3743">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3744">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3745"/>
  <line no="3746">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3747">
    <token name="T_DOC_COMMENT">   * Returns the UTF-8 character with the minimum code point in the given data.</token>
  </line>
  <line no="3748">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3749">
    <token name="T_DOC_COMMENT">   * @param    mixed $arg A UTF-8 encoded string or an array of such strings.</token>
  </line>
  <line no="3750">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3751">
    <token name="T_DOC_COMMENT">   * @return   string The character with the lowest code point than others.</token>
  </line>
  <line no="3752">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3753">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">min</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3754">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3755">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3756">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3757">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3758"/>
  <line no="3759">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">min</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">codepoints</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$arg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3760">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3761"/>
  <line no="3762">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3763">
    <token name="T_DOC_COMMENT">   * Normalize the encoding-name input.</token>
  </line>
  <line no="3764">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3765">
    <token name="T_DOC_COMMENT">   * @param string $encoding e.g.: ISO, UTF8, WINDOWS-1251 etc.</token>
  </line>
  <line no="3766">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3767">
    <token name="T_DOC_COMMENT">   * @return string e.g.: ISO-8859-1, UTF-8, ISO-8859-5 etc.</token>
  </line>
  <line no="3768">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3769">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">normalizeEncoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3770">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3771">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$staticNormalizeEncodingCache</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3772"/>
  <line no="3773">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$staticNormalizeEncodingCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3774">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$staticNormalizeEncodingCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3775">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3776"/>
  <line no="3777">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3778">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3779">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3780">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$encodingOrig</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3781">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3782"/>
  <line no="3783">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3784">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3785">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3786">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3787"/>
  <line no="3788">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3789"/>
  <line no="3790">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encodingUpperHelper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[^a-zA-Z0-9\s]/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3791"/>
  <line no="3792">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$equivalences</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3793">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO88591'</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3794">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO8859'</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3795">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3796">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN1'</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3797">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LATIN'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3798">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF16'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3799">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF32'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3800">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF8'</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3801">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3802">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF7'</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3803">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WIN1252'</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3804">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS1252'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3805">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'WINDOWS1251'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3806">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3807"/>
  <line no="3808">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$equivalences</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$encodingUpperHelper</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3809">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$equivalences</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$encodingUpperHelper</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3810">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3811"/>
  <line no="3812">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$staticNormalizeEncodingCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$encodingOrig</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3813"/>
  <line no="3814">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3815">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3816"/>
  <line no="3817">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3818">
    <token name="T_DOC_COMMENT">   * Normalize MS Word special characters.</token>
  </line>
  <line no="3819">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3820">
    <token name="T_DOC_COMMENT">   * @param string $str The string to be normalized.</token>
  </line>
  <line no="3821">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3822">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="3823">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3824">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">normalize_msword</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3825">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3826">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8MSWordKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3827">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8MSWordValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3828"/>
  <line no="3829">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8MSWordKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3830">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$utf8MSWordKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$utf8MSWord</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3831">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$utf8MSWordValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$utf8MSWord</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3832">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3833"/>
  <line no="3834">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8MSWordKeys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8MSWordValues</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3835">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3836"/>
  <line no="3837">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3838">
    <token name="T_DOC_COMMENT">   * Normalize the whitespace.</token>
  </line>
  <line no="3839">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3840">
    <token name="T_DOC_COMMENT">   * @param string $str                     The string to be normalized.</token>
  </line>
  <line no="3841">
    <token name="T_DOC_COMMENT">   * @param bool   $keepNonBreakingSpace    Set to true, to keep non-breaking-spaces.</token>
  </line>
  <line no="3842">
    <token name="T_DOC_COMMENT">   * @param bool   $keepBidiUnicodeControls Set to true, to keep non-printable (for the web) bidirectional text chars.</token>
  </line>
  <line no="3843">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3844">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="3845">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3846">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">normalize_whitespace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$keepNonBreakingSpace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$keepBidiUnicodeControls</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3847">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3848">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3849">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bidiUniCodeControls</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3850"/>
  <line no="3851">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$keepNonBreakingSpace</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3852"/>
  <line no="3853">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3854"/>
  <line no="3855">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$whitespaceTable</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3856"/>
  <line no="3857">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$keepNonBreakingSpace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3858">
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOC_COMMENT">/** @noinspection OffsetOperationsInspection */</token>
  </line>
  <line no="3859">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'NO-BREAK SPACE'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3860">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3861"/>
  <line no="3862">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3863">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3864"/>
  <line no="3865">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$keepBidiUnicodeControls</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3866">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bidiUniCodeControls</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3867">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$bidiUniCodeControls</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$bidiUniCodeControlsTable</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3868">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3869"/>
  <line no="3870">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bidiUniCodeControls</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3871">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3872"/>
  <line no="3873">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$whitespaces</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3874">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3875"/>
  <line no="3876">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3877">
    <token name="T_DOC_COMMENT">   * Format a number with grouped thousands.</token>
  </line>
  <line no="3878">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3879">
    <token name="T_DOC_COMMENT">   * @param float  $number</token>
  </line>
  <line no="3880">
    <token name="T_DOC_COMMENT">   * @param int    $decimals</token>
  </line>
  <line no="3881">
    <token name="T_DOC_COMMENT">   * @param string $dec_point</token>
  </line>
  <line no="3882">
    <token name="T_DOC_COMMENT">   * @param string $thousands_sep</token>
  </line>
  <line no="3883">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3884">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="3885">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3886">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">number_format</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$decimals</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3887">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3888">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3889">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3890"/>
  <line no="3891">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3892">
    <token name="T_WHITESPACE">      </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3893">
    <token name="T_WHITESPACE">      </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="3894">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">Bootup</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_php</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5.4'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="3895">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3896">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3897">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3898">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3899">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3900">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3901">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="3902">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3903">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3904">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="3905">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">number_format</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$decimals</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3906">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3907">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3908"/>
  <line no="3909">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">number_format</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$number</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$decimals</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dec_point</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$thousands_sep</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3910">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3911"/>
  <line no="3912">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3913">
    <token name="T_DOC_COMMENT">   * Calculates Unicode code point of the given UTF-8 encoded character.</token>
  </line>
  <line no="3914">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3915">
    <token name="T_DOC_COMMENT">   * @param    string $s The character of which to calculate code point.</token>
  </line>
  <line no="3916">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3917">
    <token name="T_DOC_COMMENT">   * @return   int Unicode code point of the given character,&lt;br /&gt;</token>
  </line>
  <line no="3918">
    <token name="T_DOC_COMMENT">   *           0 on invalid UTF-8 byte sequence.</token>
  </line>
  <line no="3919">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3920">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3921">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3922">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'0'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3923">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3924">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3925"/>
  <line no="3926">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">unpack</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'C*'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3927">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3928"/>
  <line no="3929">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xF0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3930">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xF0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">18</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">12</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3931">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3932"/>
  <line no="3933">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xE0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3934">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xE0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">12</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3935">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3936"/>
  <line no="3937">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0xC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3938">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0xC0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SL">&lt;&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0x80</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3939">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3940"/>
  <line no="3941">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3942">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3943"/>
  <line no="3944">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3945">
    <token name="T_DOC_COMMENT">   * Parses the string into variables.</token>
  </line>
  <line no="3946">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3947">
    <token name="T_DOC_COMMENT">   * WARNING: This differs from parse_str() by returning the results</token>
  </line>
  <line no="3948">
    <token name="T_DOC_COMMENT">   *    instead of placing them in the local scope!</token>
  </line>
  <line no="3949">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3950">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.parse-str.php</token>
  </line>
  <line no="3951">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3952">
    <token name="T_DOC_COMMENT">   * @param string $str     &lt;p&gt;</token>
  </line>
  <line no="3953">
    <token name="T_DOC_COMMENT">   *                        The input string.</token>
  </line>
  <line no="3954">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3955">
    <token name="T_DOC_COMMENT">   * @param array  $result  &lt;p&gt;</token>
  </line>
  <line no="3956">
    <token name="T_DOC_COMMENT">   *                        If the second parameter arr is present,</token>
  </line>
  <line no="3957">
    <token name="T_DOC_COMMENT">   *                        variables are stored in this variable as array elements instead.</token>
  </line>
  <line no="3958">
    <token name="T_DOC_COMMENT">   *                        &lt;/p&gt;</token>
  </line>
  <line no="3959">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3960">
    <token name="T_DOC_COMMENT">   * @return void</token>
  </line>
  <line no="3961">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3962">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">parse_str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3963">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3964">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="3965">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3966"/>
  <line no="3967">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3968"/>
  <line no="3969">
    <token name="T_WHITESPACE">    </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_parse_str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3970">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3971"/>
  <line no="3972">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3973">
    <token name="T_DOC_COMMENT">   * checks if \u modifier is available that enables Unicode support in PCRE.</token>
  </line>
  <line no="3974">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3975">
    <token name="T_DOC_COMMENT">   * @return   bool True if support is available, false otherwise</token>
  </line>
  <line no="3976">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3977">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">pcre_utf8_support</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3978">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3979">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection PhpUsageOfSilenceOperatorInspection */</token>
  </line>
  <line no="3980">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOL_CAST">(bool)</token>
    <token name="T_PHPDOX_AT">@</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'//u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3981">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3982"/>
  <line no="3983">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3984">
    <token name="T_DOC_COMMENT">   * Create an array containing a range of UTF-8 characters.</token>
  </line>
  <line no="3985">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3986">
    <token name="T_DOC_COMMENT">   * @param    mixed $var1 Numeric or hexadecimal code points, or a UTF-8 character to start from.</token>
  </line>
  <line no="3987">
    <token name="T_DOC_COMMENT">   * @param    mixed $var2 Numeric or hexadecimal code points, or a UTF-8 character to end at.</token>
  </line>
  <line no="3988">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="3989">
    <token name="T_DOC_COMMENT">   * @return   array</token>
  </line>
  <line no="3990">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="3991">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="3992">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3993">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3994">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3995">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="3996"/>
  <line no="3997">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ctype_digit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="3998">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3999">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ctype_xdigit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4000">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">hex_to_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4001">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4002">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4003">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4004"/>
  <line no="4005">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4006">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4007">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4008"/>
  <line no="4009">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ctype_digit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4010">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4011">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ctype_xdigit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4012">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">hex_to_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4013">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4014">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4015">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4016"/>
  <line no="4017">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4018">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4019">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4020"/>
  <line no="4021">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4022">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4023">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4024">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'chr'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4025">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4026">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">range</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$end</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4027">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4028">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4029"/>
  <line no="4030">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4031">
    <token name="T_DOC_COMMENT">   * Remove the BOM from UTF-8 / UTF-16 / UTF-32 strings.</token>
  </line>
  <line no="4032">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4033">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="4034">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4035">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="4036">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4037">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">removeBOM</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4038">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4039">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// INFO: https://en.wikipedia.org/wiki/Byte_order_mark</token>
  </line>
  <line no="4040"/>
  <line no="4041">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef\xbb\xbf"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-8 BOM</token>
  </line>
  <line no="4042">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4043">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEF;&#xBB;&#xBF;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-8 BOM as "WINDOWS-1252"</token>
  </line>
  <line no="4044">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">6</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// INFO: one char has (maybe) more then one byte ...</token>
  </line>
  <line no="4045">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00\x00\xfe\xff"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-32 (BE) BOM</token>
  </line>
  <line no="4046">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4047">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xff\xfe\x00\x00"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-32 (LE) BOM</token>
  </line>
  <line no="4048">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4049">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xfe\xff"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-16 (BE) BOM</token>
  </line>
  <line no="4050">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4051">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFE;&#xFF;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-16 (BE) BOM as "WINDOWS-1252"</token>
  </line>
  <line no="4052">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4053">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xff\xfe"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-16 (LE) BOM</token>
  </line>
  <line no="4054">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4055">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFF;&#xFE;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// UTF-16 (LE) BOM as "WINDOWS-1252"</token>
  </line>
  <line no="4056">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4057">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4058"/>
  <line no="4059">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4060">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4061"/>
  <line no="4062">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4063">
    <token name="T_DOC_COMMENT">   * Removes duplicate occurrences of a string in another string.</token>
  </line>
  <line no="4064">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4065">
    <token name="T_DOC_COMMENT">   * @param    string       $str  The base string</token>
  </line>
  <line no="4066">
    <token name="T_DOC_COMMENT">   * @param    string|array $what String to search for in the base string</token>
  </line>
  <line no="4067">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4068">
    <token name="T_DOC_COMMENT">   * @return   string The result string with removed duplicates</token>
  </line>
  <line no="4069">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4070">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">remove_duplicates</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4071">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4072">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4073">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4074">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4075"/>
  <line no="4076">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4077">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$what</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$item</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4078">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/('</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_quote</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$item</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')+/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$item</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4079">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4080">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4081"/>
  <line no="4082">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4083">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4084"/>
  <line no="4085">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4086">
    <token name="T_DOC_COMMENT">   * Remove Invisible Characters</token>
  </line>
  <line no="4087">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4088">
    <token name="T_DOC_COMMENT">   * This prevents sandwiching null characters</token>
  </line>
  <line no="4089">
    <token name="T_DOC_COMMENT">   * between ascii characters, like Java\0script.</token>
  </line>
  <line no="4090">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4091">
    <token name="T_DOC_COMMENT">   * copy&amp;past from https://github.com/bcit-ci/CodeIgniter/blob/develop/system/core/Common.php</token>
  </line>
  <line no="4092">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4093">
    <token name="T_DOC_COMMENT">   * @param  string $str</token>
  </line>
  <line no="4094">
    <token name="T_DOC_COMMENT">   * @param  bool   $url_encoded</token>
  </line>
  <line no="4095">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4096">
    <token name="T_DOC_COMMENT">   * @return  string</token>
  </line>
  <line no="4097">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4098">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">remove_invisible_characters</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$url_encoded</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4099">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4100">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="4101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$non_displayables</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4102"/>
  <line no="4103">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// every control character except newline (dec 10),</token>
  </line>
  <line no="4104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// carriage return (dec 13) and horizontal tab (dec 09)</token>
  </line>
  <line no="4105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$url_encoded</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4106">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$non_displayables</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/%0[0-8bcef]/'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// url encoded 00-08, 11, 12, 14, 15</token>
  </line>
  <line no="4107">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$non_displayables</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/%1[0-9a-f]/'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// url encoded 16-31</token>
  </line>
  <line no="4108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4109"/>
  <line no="4110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$non_displayables</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]+/S'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// 00-08, 11, 12, 14-31, 127</token>
  </line>
  <line no="4111"/>
  <line no="4112">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DO">do</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4113">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$non_displayables</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4114">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4115"/>
  <line no="4116">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4117">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4118"/>
  <line no="4119">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4120">
    <token name="T_DOC_COMMENT">   * replace diamond question mark (&#xFFFD;)</token>
  </line>
  <line no="4121">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4122">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="4123">
    <token name="T_DOC_COMMENT">   * @param string $unknown</token>
  </line>
  <line no="4124">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4125">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="4126">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4127">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">replace_diamond_question_mark</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4128">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4129">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4130">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4131">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xEF\xBF\xBD"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4132">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFFFD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4133">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4134">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4135">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4136">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4137">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
  </line>
  <line no="4139">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4140">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4141"/>
  <line no="4142">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4143">
    <token name="T_DOC_COMMENT">   * Strip whitespace or other characters from end of a UTF-8 string.</token>
  </line>
  <line no="4144">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4145">
    <token name="T_DOC_COMMENT">   * WARNING: This is much slower then "rtrim()" !!!!</token>
  </line>
  <line no="4146">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4147">
    <token name="T_DOC_COMMENT">   * @param    string $str   The string to be trimmed</token>
  </line>
  <line no="4148">
    <token name="T_DOC_COMMENT">   * @param    string $chars Optional characters to be stripped</token>
  </line>
  <line no="4149">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4150">
    <token name="T_DOC_COMMENT">   * @return   string The string with unwanted characters stripped from the right</token>
  </line>
  <line no="4151">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4152">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">rtrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4153">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4154">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4155"/>
  <line no="4156">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4157">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4158">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4159"/>
  <line no="4160">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\s'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4161"/>
  <line no="4162">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">+$/u</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4163">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4164"/>
  <line no="4165">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4166">
    <token name="T_DOC_COMMENT">   * rxClass</token>
  </line>
  <line no="4167">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4168">
    <token name="T_DOC_COMMENT">   * @param string $s</token>
  </line>
  <line no="4169">
    <token name="T_DOC_COMMENT">   * @param string $class</token>
  </line>
  <line no="4170">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4171">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="4172">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4173">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4174">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4175">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rxClassCache</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4176"/>
  <line no="4177">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4178"/>
  <line no="4179">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$rxClassCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4180">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rxClassCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4181">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4182"/>
  <line no="4183">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4184"/>
  <line no="4185">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection SuspiciousLoopInspection */</token>
  </line>
  <line no="4186">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">str_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4187">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4188">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4189">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4190">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_quote</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4191">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4192">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4193">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4194">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4195">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4196">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4197"/>
  <line no="4198">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4199"/>
  <line no="4200">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4201">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4202">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4203">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'(?:'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'|'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4204">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4205"/>
  <line no="4206">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$rxClassCache</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$cacheKey</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4207"/>
  <line no="4208">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4209">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4210"/>
  <line no="4211">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4212">
    <token name="T_DOC_COMMENT">   * Echo native UTF8-Support libs, e.g. for debugging.</token>
  </line>
  <line no="4213">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4214">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">showSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4215">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4216">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8Support</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4217">
    <token name="T_WHITESPACE">      </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8Support</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n&lt;br&gt;"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4218">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4219">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4220"/>
  <line no="4221">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4222">
    <token name="T_DOC_COMMENT">   * Converts a UTF-8 character to HTML Numbered Entity like "&amp;#123;".</token>
  </line>
  <line no="4223">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4224">
    <token name="T_DOC_COMMENT">   * @param    string $chr The Unicode character to be encoded as numbered entity.</token>
  </line>
  <line no="4225">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4226">
    <token name="T_DOC_COMMENT">   * @return   string The HTML numbered entity.</token>
  </line>
  <line no="4227">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4228">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">single_chr_html_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4229">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4230">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4231">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4232">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4233"/>
  <line no="4234">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;#'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4235">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4236"/>
  <line no="4237">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4238">
    <token name="T_DOC_COMMENT">   * Convert a string to an array of Unicode characters.</token>
  </line>
  <line no="4239">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4240">
    <token name="T_DOC_COMMENT">   * @param    string  $str       The string to split into array.</token>
  </line>
  <line no="4241">
    <token name="T_DOC_COMMENT">   * @param    int     $length    Max character length of each array element.</token>
  </line>
  <line no="4242">
    <token name="T_DOC_COMMENT">   * @param    boolean $cleanUtf8 Clean non UTF-8 chars from the string.</token>
  </line>
  <line no="4243">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4244">
    <token name="T_DOC_COMMENT">   * @return   array An array containing chunks of the string.</token>
  </line>
  <line no="4245">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4246">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4247">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4248">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4249"/>
  <line no="4250">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4251">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4252">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4253"/>
  <line no="4254">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="4255">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4256">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4257">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4258"/>
  <line no="4259">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'pcre_utf8'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4260"/>
  <line no="4261">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4262">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4263">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4264"/>
  <line no="4265">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/./us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$retArray</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4266">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$retArray</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4267">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$retArray</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4268">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4269">
    <token name="T_WHITESPACE">      </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$retArray</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4270"/>
  <line no="4271">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4272"/>
  <line no="4273">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// fallback</token>
  </line>
  <line no="4274"/>
  <line no="4275">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4276"/>
  <line no="4277">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection ForeachInvariantsInspection */</token>
  </line>
  <line no="4278">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4279">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4280">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4281">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4282">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4283">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4284"/>
  <line no="4285">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4286">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4287">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xF0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xE0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4288">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4289">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4290"/>
  <line no="4291">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4292">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4293">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xF8"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xF0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4294">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4295">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4296"/>
  <line no="4297">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4298">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4299">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4300">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4301">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4302"/>
  <line no="4303">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4304">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_chunk</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4305"/>
  <line no="4306">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'implode'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4307">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4308"/>
  <line no="4309">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4310">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4311">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4312"/>
  <line no="4313">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ret</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4314">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4315"/>
  <line no="4316">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4317">
    <token name="T_DOC_COMMENT">   * Optimized "\mb_detect_encoding()"-function -&gt; with support for UTF-16 and UTF-32.</token>
  </line>
  <line no="4318">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4319">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="4320">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4321">
    <token name="T_DOC_COMMENT">   * @return false|string The detected string-encoding e.g. UTF-8 or UTF-16BE,&lt;br /&gt;</token>
  </line>
  <line no="4322">
    <token name="T_DOC_COMMENT">   *                      otherwise it will return false.</token>
  </line>
  <line no="4323">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4324">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_detect_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4325">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4326"/>
  <line no="4327">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4328">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// 1.) check binary strings (010001001...) like UTF-16 / UTF-32</token>
  </line>
  <line no="4329">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4330"/>
  <line no="4331">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4332">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf16</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4333">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16LE'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4334">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf16</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4335">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-16BE'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4336">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf32</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4337">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32LE'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4338">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf32</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4339">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-32BE'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4340">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4341">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4342"/>
  <line no="4343">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4344">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// 2.) simple check for ASCII chars</token>
  </line>
  <line no="4345">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4346"/>
  <line no="4347">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ascii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4348">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASCII'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4349">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4350"/>
  <line no="4351">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4352">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// 3.) simple check for UTF-8 chars</token>
  </line>
  <line no="4353">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4354"/>
  <line no="4355">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4356">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4357">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4358"/>
  <line no="4359">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4360">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// 4.) check via "\mb_detect_encoding()"</token>
  </line>
  <line no="4361">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4362">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// INFO: UTF-16, UTF-32, UCS2 and UCS4, encoding detection will fail always with "\mb_detect_encoding()"</token>
  </line>
  <line no="4363"/>
  <line no="4364">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$detectOrder</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4365">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'windows-1251'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4366">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ISO-8859-1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4367">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASCII'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4368">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4369">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4370"/>
  <line no="4371">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4372"/>
  <line no="4373">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_detect_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$detectOrder</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4374">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4375">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4376">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4377"/>
  <line no="4378">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4379">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// 5.) check via "iconv()"</token>
  </line>
  <line no="4380">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//</token>
  </line>
  <line no="4381"/>
  <line no="4382">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$md5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">md5</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4383">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$iconvEncoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingTmp</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4384">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT"># INFO: //IGNORE and //TRANSLIT still throw notice</token>
  </line>
  <line no="4385">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection PhpUsageOfSilenceOperatorInspection */</token>
  </line>
  <line no="4386">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">md5</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AT">@</token>
    <token name="T_STRING">iconv</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encodingTmp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingTmp</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$md5</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4387">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encodingTmp</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4388">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4389">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4390"/>
  <line no="4391">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4392">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4393"/>
  <line no="4394">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4395">
    <token name="T_DOC_COMMENT">   * Case-insensitive and UTF-8 safe version of &lt;function&gt;str_replace&lt;/function&gt;.</token>
  </line>
  <line no="4396">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4397">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.str-ireplace.php</token>
  </line>
  <line no="4398">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4399">
    <token name="T_DOC_COMMENT">   * @param mixed $search  &lt;p&gt;</token>
  </line>
  <line no="4400">
    <token name="T_DOC_COMMENT">   *                       Every replacement with search array is</token>
  </line>
  <line no="4401">
    <token name="T_DOC_COMMENT">   *                       performed on the result of previous replacement.</token>
  </line>
  <line no="4402">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4403">
    <token name="T_DOC_COMMENT">   * @param mixed $replace &lt;p&gt;</token>
  </line>
  <line no="4404">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4405">
    <token name="T_DOC_COMMENT">   * @param mixed $subject &lt;p&gt;</token>
  </line>
  <line no="4406">
    <token name="T_DOC_COMMENT">   *                       If subject is an array, then the search and</token>
  </line>
  <line no="4407">
    <token name="T_DOC_COMMENT">   *                       replace is performed with every entry of</token>
  </line>
  <line no="4408">
    <token name="T_DOC_COMMENT">   *                       subject, and the return value is an array as</token>
  </line>
  <line no="4409">
    <token name="T_DOC_COMMENT">   *                       well.</token>
  </line>
  <line no="4410">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4411">
    <token name="T_DOC_COMMENT">   * @param int   $count   [optional] &lt;p&gt;</token>
  </line>
  <line no="4412">
    <token name="T_DOC_COMMENT">   *                       The number of matched and replaced needles will</token>
  </line>
  <line no="4413">
    <token name="T_DOC_COMMENT">   *                       be returned in count which is passed by</token>
  </line>
  <line no="4414">
    <token name="T_DOC_COMMENT">   *                       reference.</token>
  </line>
  <line no="4415">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4416">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4417">
    <token name="T_DOC_COMMENT">   * @return mixed a string or an array of replacements.</token>
  </line>
  <line no="4418">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="4419">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4420">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_ireplace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4421">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4422">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4423"/>
  <line no="4424">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="4425">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4426">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4427">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(?&lt;=.)$/'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4428">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4429">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_quote</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/ui'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4430">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4431">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4432"/>
  <line no="4433">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4434">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4435"/>
  <line no="4436">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4437">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4438"/>
  <line no="4439">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4440">
    <token name="T_DOC_COMMENT">   * Limit the number of characters in a string, but also after the next word.</token>
  </line>
  <line no="4441">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4442">
    <token name="T_DOC_COMMENT">   * @param  string $str</token>
  </line>
  <line no="4443">
    <token name="T_DOC_COMMENT">   * @param  int    $length</token>
  </line>
  <line no="4444">
    <token name="T_DOC_COMMENT">   * @param  string $strAddOn</token>
  </line>
  <line no="4445">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4446">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="4447">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4448">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_limit_after_word</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">100</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'...'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4449">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4450">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4451"/>
  <line no="4452">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4453">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4454">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4455"/>
  <line no="4456">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4457"/>
  <line no="4458">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4459">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4460">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4461"/>
  <line no="4462">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4463">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4464">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4465"/>
  <line no="4466">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4467">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">explode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4468">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">array_pop</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4469">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$new_str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4470"/>
  <line no="4471">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$new_str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4472">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4473">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4474">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$new_str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4475">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4476"/>
  <line no="4477">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4478">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4479"/>
  <line no="4480">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4481">
    <token name="T_DOC_COMMENT">   * Pad a UTF-8 string to given length with another string.</token>
  </line>
  <line no="4482">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4483">
    <token name="T_DOC_COMMENT">   * @param    string $input      The input string</token>
  </line>
  <line no="4484">
    <token name="T_DOC_COMMENT">   * @param    int    $pad_length The length of return string</token>
  </line>
  <line no="4485">
    <token name="T_DOC_COMMENT">   * @param    string $pad_string String to use for padding the input string</token>
  </line>
  <line no="4486">
    <token name="T_DOC_COMMENT">   * @param    int    $pad_type   can be STR_PAD_RIGHT, STR_PAD_LEFT or STR_PAD_BOTH</token>
  </line>
  <line no="4487">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4488">
    <token name="T_DOC_COMMENT">   * @return   string Returns the padded string</token>
  </line>
  <line no="4489">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4490">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_pad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pad_length</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pad_type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STR_PAD_RIGHT</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4491">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4492">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$input_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4493"/>
  <line no="4494">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_int</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$input_length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4495">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$ps_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4496"/>
  <line no="4497">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pad_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$input_length</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4498"/>
  <line no="4499">
    <token name="T_WHITESPACE">      </token>
    <token name="T_SWITCH">switch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_type</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4500">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STR_PAD_LEFT</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="4501">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">ceil</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ps_length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4502">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4503">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4504">
    <token name="T_WHITESPACE">          </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4505"/>
  <line no="4506">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STR_PAD_BOTH</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="4507">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">ceil</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ps_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4508">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4509">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">ceil</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ps_length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4510">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">ceil</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4511">
    <token name="T_WHITESPACE">          </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4512"/>
  <line no="4513">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">STR_PAD_RIGHT</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="4514">
    <token name="T_WHITESPACE">        </token>
    <token name="T_DEFAULT">default</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="4515">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pad_string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">ceil</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ps_length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4516">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$diff</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4517">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4518">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4519"/>
  <line no="4520">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$post</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4521">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4522"/>
  <line no="4523">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4524">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4525"/>
  <line no="4526">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4527">
    <token name="T_DOC_COMMENT">   * Repeat a string.</token>
  </line>
  <line no="4528">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4529">
    <token name="T_DOC_COMMENT">   * @param string $input      &lt;p&gt;</token>
  </line>
  <line no="4530">
    <token name="T_DOC_COMMENT">   *                           The string to be repeated.</token>
  </line>
  <line no="4531">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4532">
    <token name="T_DOC_COMMENT">   * @param int    $multiplier &lt;p&gt;</token>
  </line>
  <line no="4533">
    <token name="T_DOC_COMMENT">   *                           Number of time the input string should be</token>
  </line>
  <line no="4534">
    <token name="T_DOC_COMMENT">   *                           repeated.</token>
  </line>
  <line no="4535">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4536">
    <token name="T_DOC_COMMENT">   *                           &lt;p&gt;</token>
  </line>
  <line no="4537">
    <token name="T_DOC_COMMENT">   *                           multiplier has to be greater than or equal to 0.</token>
  </line>
  <line no="4538">
    <token name="T_DOC_COMMENT">   *                           If the multiplier is set to 0, the function</token>
  </line>
  <line no="4539">
    <token name="T_DOC_COMMENT">   *                           will return an empty string.</token>
  </line>
  <line no="4540">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4541">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4542">
    <token name="T_DOC_COMMENT">   * @return string the repeated string.</token>
  </line>
  <line no="4543">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4544">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$multiplier</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4545">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4546">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4547"/>
  <line no="4548">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_repeat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$input</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$multiplier</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4549">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4550"/>
  <line no="4551">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4552">
    <token name="T_DOC_COMMENT">   * INFO: this is only a wrapper for "str_replace()"  -&gt; the original functions is already UTF-8 safe</token>
  </line>
  <line no="4553">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4554">
    <token name="T_DOC_COMMENT">   * (PHP 4, PHP 5)&lt;br/&gt;</token>
  </line>
  <line no="4555">
    <token name="T_DOC_COMMENT">   * Replace all occurrences of the search string with the replacement string</token>
  </line>
  <line no="4556">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4557">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.str-replace.php</token>
  </line>
  <line no="4558">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4559">
    <token name="T_DOC_COMMENT">   * @param mixed $search  &lt;p&gt;</token>
  </line>
  <line no="4560">
    <token name="T_DOC_COMMENT">   *                       The value being searched for, otherwise known as the needle.</token>
  </line>
  <line no="4561">
    <token name="T_DOC_COMMENT">   *                       An array may be used to designate multiple needles.</token>
  </line>
  <line no="4562">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4563">
    <token name="T_DOC_COMMENT">   * @param mixed $replace &lt;p&gt;</token>
  </line>
  <line no="4564">
    <token name="T_DOC_COMMENT">   *                       The replacement value that replaces found search</token>
  </line>
  <line no="4565">
    <token name="T_DOC_COMMENT">   *                       values. An array may be used to designate multiple replacements.</token>
  </line>
  <line no="4566">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4567">
    <token name="T_DOC_COMMENT">   * @param mixed $subject &lt;p&gt;</token>
  </line>
  <line no="4568">
    <token name="T_DOC_COMMENT">   *                       The string or array being searched and replaced on,</token>
  </line>
  <line no="4569">
    <token name="T_DOC_COMMENT">   *                       otherwise known as the haystack.</token>
  </line>
  <line no="4570">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4571">
    <token name="T_DOC_COMMENT">   *                       &lt;p&gt;</token>
  </line>
  <line no="4572">
    <token name="T_DOC_COMMENT">   *                       If subject is an array, then the search and</token>
  </line>
  <line no="4573">
    <token name="T_DOC_COMMENT">   *                       replace is performed with every entry of</token>
  </line>
  <line no="4574">
    <token name="T_DOC_COMMENT">   *                       subject, and the return value is an array as</token>
  </line>
  <line no="4575">
    <token name="T_DOC_COMMENT">   *                       well.</token>
  </line>
  <line no="4576">
    <token name="T_DOC_COMMENT">   *                       &lt;/p&gt;</token>
  </line>
  <line no="4577">
    <token name="T_DOC_COMMENT">   * @param int   $count   [optional] If passed, this will hold the number of matched and replaced needles.</token>
  </line>
  <line no="4578">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4579">
    <token name="T_DOC_COMMENT">   * @return mixed This function returns a string or an array with the replaced values.</token>
  </line>
  <line no="4580">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4581">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4582">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4583">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$search</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subject</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4584">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4585"/>
  <line no="4586">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4587">
    <token name="T_DOC_COMMENT">   * Shuffles all the characters in the string.</token>
  </line>
  <line no="4588">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4589">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string</token>
  </line>
  <line no="4590">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4591">
    <token name="T_DOC_COMMENT">   * @return   string The shuffled string.</token>
  </line>
  <line no="4592">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4593">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_shuffle</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4594">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4595">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4596"/>
  <line no="4597">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">shuffle</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4598"/>
  <line no="4599">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4600">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4601"/>
  <line no="4602">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4603">
    <token name="T_DOC_COMMENT">   * Sort all characters according to code points.</token>
  </line>
  <line no="4604">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4605">
    <token name="T_DOC_COMMENT">   * @param    string $str    A UTF-8 string.</token>
  </line>
  <line no="4606">
    <token name="T_DOC_COMMENT">   * @param    bool   $unique Sort unique. If true, repeated characters are ignored.</token>
  </line>
  <line no="4607">
    <token name="T_DOC_COMMENT">   * @param    bool   $desc   If true, will sort characters in reverse code point order.</token>
  </line>
  <line no="4608">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4609">
    <token name="T_DOC_COMMENT">   * @return   string String of sorted characters</token>
  </line>
  <line no="4610">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4611">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_sort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unique</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$desc</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4612">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4613">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">codepoints</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4614"/>
  <line no="4615">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$unique</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4616">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_flip</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">array_flip</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4617">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4618"/>
  <line no="4619">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$desc</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4620">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">arsort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4621">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4622">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">asort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4623">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4624"/>
  <line no="4625">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4626">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4627"/>
  <line no="4628">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4629">
    <token name="T_DOC_COMMENT">   * Convert a string to an array.</token>
  </line>
  <line no="4630">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4631">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="4632">
    <token name="T_DOC_COMMENT">   * @param int    $len</token>
  </line>
  <line no="4633">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4634">
    <token name="T_DOC_COMMENT">   * @return array</token>
  </line>
  <line no="4635">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4636">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4637">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4638">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="4639">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4640">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4641"/>
  <line no="4642">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4643">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4644">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4645"/>
  <line no="4646">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'intl'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4647">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4648">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4649">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$l</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4650">
    <token name="T_WHITESPACE">      </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$l</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4651">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">grapheme_extract</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">GRAPHEME_EXTR_COUNT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4652">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4653">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4654">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Grapheme</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">GRAPHEME_CLUSTER_RX</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4655">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4656">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4657"/>
  <line no="4658">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4659">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4660">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4661"/>
  <line no="4662">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$arrayOutput</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4663">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4664"/>
  <line no="4665">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection PhpForeachArrayIsUsedAsValueInspection */</token>
  </line>
  <line no="4666">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$l</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4667">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$l</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PERCENT">%</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4668">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$arrayOutput</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4669">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4670">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$arrayOutput</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_INC">++</token>
    <token name="T_VARIABLE">$p</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4671">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4672">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4673"/>
  <line no="4674">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arrayOutput</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4675">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4676"/>
  <line no="4677">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4678">
    <token name="T_DOC_COMMENT">   * Get a binary representation of a specific character.</token>
  </line>
  <line no="4679">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4680">
    <token name="T_DOC_COMMENT">   * @param   string $str The input character.</token>
  </line>
  <line no="4681">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4682">
    <token name="T_DOC_COMMENT">   * @return  string</token>
  </line>
  <line no="4683">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4684">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_to_binary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4685">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4686">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4687"/>
  <line no="4688">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4689">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4690">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4691"/>
  <line no="4692">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="4693">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4694">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4695"/>
  <line no="4696">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection ForeachInvariantsInspection */</token>
  </line>
  <line no="4697">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INC">++</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4698">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">vsprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%08b'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4699">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4700"/>
  <line no="4701">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4702">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4703"/>
  <line no="4704">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4705">
    <token name="T_DOC_COMMENT">   * US-ASCII transliterations of Unicode text.</token>
  </line>
  <line no="4706">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4707">
    <token name="T_DOC_COMMENT">   * Ported Sean M. Burke's Text::Unidecode Perl module (He did all the hard work!)</token>
  </line>
  <line no="4708">
    <token name="T_DOC_COMMENT">   * Warning: you should only pass this well formed UTF-8!</token>
  </line>
  <line no="4709">
    <token name="T_DOC_COMMENT">   * Be aware it works by making a copy of the input string which it appends transliterated</token>
  </line>
  <line no="4710">
    <token name="T_DOC_COMMENT">   * characters to - it uses a PHP output buffer to do this - it means, memory use will increase,</token>
  </line>
  <line no="4711">
    <token name="T_DOC_COMMENT">   * requiring up to the same amount again as the input string</token>
  </line>
  <line no="4712">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4713">
    <token name="T_DOC_COMMENT">   * @see    http://search.cpan.org/~sburke/Text-Unidecode-0.04/lib/Text/Unidecode.pm</token>
  </line>
  <line no="4714">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4715">
    <token name="T_DOC_COMMENT">   * @author &lt;hsivonen@iki.fi&gt;</token>
  </line>
  <line no="4716">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4717">
    <token name="T_DOC_COMMENT">   * @param string $str     UTF-8 string to convert</token>
  </line>
  <line no="4718">
    <token name="T_DOC_COMMENT">   * @param string $unknown Character use if character unknown. (default is ?)</token>
  </line>
  <line no="4719">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4720">
    <token name="T_DOC_COMMENT">   * @return string US-ASCII string</token>
  </line>
  <line no="4721">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4722">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_transliterate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4723">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4724">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$UTF8_TO_ASCII</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4725"/>
  <line no="4726">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4727"/>
  <line no="4728">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4729">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4730">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4731"/>
  <line no="4732">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4733"/>
  <line no="4734">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/.{1}|[^\x00]{1,1}$/us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ar</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4735">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ar</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4736">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4737"/>
  <line no="4738">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4739"/>
  <line no="4740">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">127</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4741">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4742">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4743"/>
  <line no="4744">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4745"/>
  <line no="4746">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// ASCII - next please</token>
  </line>
  <line no="4747">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">192</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">223</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4748">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">192</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4749">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4750"/>
  <line no="4751">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">224</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4752">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$ordC2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4753"/>
  <line no="4754">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">239</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4755">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">224</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4096</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4756">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4757"/>
  <line no="4758">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">240</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4759">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$ordC3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4760"/>
  <line no="4761">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">247</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4762">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">240</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">262144</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4096</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4763">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4764"/>
  <line no="4765">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">248</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4766">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$ordC4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">4</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4767"/>
  <line no="4768">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">251</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4769">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">248</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16777216</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">262144</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4096</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4770">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4771"/>
  <line no="4772">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">252</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4773">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$ordC5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">5</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4774"/>
  <line no="4775">
    <token name="T_WHITESPACE">              </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">253</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4776">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">252</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1073741824</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16777216</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">262144</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4096</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">128</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4777">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4778">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4779">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4780">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4781">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4782"/>
  <line no="4783">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">254</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ordC0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">255</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4784">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4785">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4786">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4787"/>
  <line no="4788">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4789">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4790">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4791">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4792"/>
  <line no="4793">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_SR">&gt;&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">8</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4794">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">array_key_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_VARIABLE">$UTF8_TO_ASCII</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4795">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$bankfile</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DIR">__DIR__</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/data/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'x%02x'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4796">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bankfile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4797">
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOC_COMMENT">/** @noinspection PhpIncludeInspection */</token>
  </line>
  <line no="4798">
    <token name="T_WHITESPACE">          </token>
    <token name="T_REQUIRE">require</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bankfile</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4799">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4800">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$UTF8_TO_ASCII</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4801">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4802">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4803"/>
  <line no="4804">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$newchar</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ord</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">255</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4805">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">array_key_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$newchar</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$UTF8_TO_ASCII</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4806">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$UTF8_TO_ASCII</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$bank</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$newchar</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4807">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4808">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$unknown</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4809">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4810">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4811"/>
  <line no="4812">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4813">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4814"/>
  <line no="4815">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4816">
    <token name="T_DOC_COMMENT">   * Counts number of words in the UTF-8 string.</token>
  </line>
  <line no="4817">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4818">
    <token name="T_DOC_COMMENT">   * @param string $str The input string.</token>
  </line>
  <line no="4819">
    <token name="T_DOC_COMMENT">   * @param int $format &lt;strong&gt;0&lt;/strong&gt; =&gt; return a number of words&lt;br /&gt;</token>
  </line>
  <line no="4820">
    <token name="T_DOC_COMMENT">   *                    &lt;strong&gt;1&lt;/strong&gt; =&gt; return an array of words</token>
  </line>
  <line no="4821">
    <token name="T_DOC_COMMENT">   *                    &lt;strong&gt;2&lt;/strong&gt; =&gt; return an array of words with word-offset as key</token>
  </line>
  <line no="4822">
    <token name="T_DOC_COMMENT">   * @param string $charlist</token>
  </line>
  <line no="4823">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4824">
    <token name="T_DOC_COMMENT">   * @return array|float The number of words in the string</token>
  </line>
  <line no="4825">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4826">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_word_count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$format</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$charlist</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4827">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4828">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$charlist</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$charlist</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\pL'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4829">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">preg_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/(</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$charlist</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">+(?:[\p{Pd}&#x2019;']</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$charlist</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">+)*)/u</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PREG_SPLIT_DELIM_CAPTURE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4830"/>
  <line no="4831">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4832"/>
  <line no="4833">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$format</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4834"/>
  <line no="4835">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4836">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4837">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4838">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4839"/>
  <line no="4840">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$format</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4841"/>
  <line no="4842">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4843"/>
  <line no="4844">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4845">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4846">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4847">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4848">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strParts</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4849">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4850"/>
  <line no="4851">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4852"/>
  <line no="4853">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4854"/>
  <line no="4855">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4856"/>
  <line no="4857">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$numberOfWords</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4858">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4859"/>
  <line no="4860">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4861">
    <token name="T_DOC_COMMENT">   * Case-insensitive string comparison.</token>
  </line>
  <line no="4862">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4863">
    <token name="T_DOC_COMMENT">   * @param string $str1</token>
  </line>
  <line no="4864">
    <token name="T_DOC_COMMENT">   * @param string $str2</token>
  </line>
  <line no="4865">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4866">
    <token name="T_DOC_COMMENT">   * @return int Returns &lt; 0 if str1 is less than str2; &gt; 0 if str1 is greater than str2, and 0 if they are equal.</token>
  </line>
  <line no="4867">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4868">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strcasecmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4869">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4870">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4871">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4872"/>
  <line no="4873">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4874">
    <token name="T_DOC_COMMENT">   * String comparison.</token>
  </line>
  <line no="4875">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4876">
    <token name="T_DOC_COMMENT">   * @param string $str1</token>
  </line>
  <line no="4877">
    <token name="T_DOC_COMMENT">   * @param string $str2</token>
  </line>
  <line no="4878">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4879">
    <token name="T_DOC_COMMENT">   * @return int  &lt;strong&gt;&lt; 0&lt;/strong&gt; if str1 is less than str2&lt;br /&gt;</token>
  </line>
  <line no="4880">
    <token name="T_DOC_COMMENT">   *              &lt;strong&gt;&gt; 0&lt;/strong&gt; if str1 is greater than str2&lt;br /&gt;</token>
  </line>
  <line no="4881">
    <token name="T_DOC_COMMENT">   *              &lt;strong&gt;0&lt;/strong&gt; if they are equal.</token>
  </line>
  <line no="4882">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4883">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4884">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4885">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4886">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NFD</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4887">
    <token name="T_WHITESPACE">        </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NFD</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4888">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4889">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4890"/>
  <line no="4891">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4892">
    <token name="T_DOC_COMMENT">   * Find length of initial segment not matching mask.</token>
  </line>
  <line no="4893">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4894">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="4895">
    <token name="T_DOC_COMMENT">   * @param string $charList</token>
  </line>
  <line no="4896">
    <token name="T_DOC_COMMENT">   * @param int    $offset</token>
  </line>
  <line no="4897">
    <token name="T_DOC_COMMENT">   * @param int    $length</token>
  </line>
  <line no="4898">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4899">
    <token name="T_DOC_COMMENT">   * @return int|null</token>
  </line>
  <line no="4900">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4901">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strcspn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$charList</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2147483647</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4902">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4903">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$charList</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4904">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4905">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4906"/>
  <line no="4907">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2147483647</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4908">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4909">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4910">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4911">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4912"/>
  <line no="4913">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(.*?)'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$charList</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4914">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection OffsetOperationsInspection */</token>
  </line>
  <line no="4915">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4916">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4917">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4918">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4919">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4920"/>
  <line no="4921">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4922">
    <token name="T_DOC_COMMENT">   * Makes a UTF-8 string from code points.</token>
  </line>
  <line no="4923">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4924">
    <token name="T_DOC_COMMENT">   * @param    array $array Integer or Hexadecimal codepoints</token>
  </line>
  <line no="4925">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4926">
    <token name="T_DOC_COMMENT">   * @return   string UTF-8 encoded string</token>
  </line>
  <line no="4927">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4928">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4929">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4930">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4931">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4932">
    <token name="T_WHITESPACE">            </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="4933">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\voku\\helper\\UTF8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4934">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'chr'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4935">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="4936">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$array</token>
  </line>
  <line no="4937">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4938">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4939">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4940"/>
  <line no="4941">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4942">
    <token name="T_DOC_COMMENT">   * Checks if string starts with "UTF-8 BOM" character.</token>
  </line>
  <line no="4943">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4944">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string.</token>
  </line>
  <line no="4945">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4946">
    <token name="T_DOC_COMMENT">   * @return   bool True if the string has BOM at the start, False otherwise.</token>
  </line>
  <line no="4947">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4948">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string_has_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4949">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4950">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_bom</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4951">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4952"/>
  <line no="4953">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4954">
    <token name="T_DOC_COMMENT">   * Strip HTML and PHP tags from a string.</token>
  </line>
  <line no="4955">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4956">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.strip-tags.php</token>
  </line>
  <line no="4957">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4958">
    <token name="T_DOC_COMMENT">   * @param string $str            &lt;p&gt;</token>
  </line>
  <line no="4959">
    <token name="T_DOC_COMMENT">   *                               The input string.</token>
  </line>
  <line no="4960">
    <token name="T_DOC_COMMENT">   *                               &lt;/p&gt;</token>
  </line>
  <line no="4961">
    <token name="T_DOC_COMMENT">   * @param string $allowable_tags [optional] &lt;p&gt;</token>
  </line>
  <line no="4962">
    <token name="T_DOC_COMMENT">   *                               You can use the optional second parameter to specify tags which should</token>
  </line>
  <line no="4963">
    <token name="T_DOC_COMMENT">   *                               not be stripped.</token>
  </line>
  <line no="4964">
    <token name="T_DOC_COMMENT">   *                               &lt;/p&gt;</token>
  </line>
  <line no="4965">
    <token name="T_DOC_COMMENT">   *                               &lt;p&gt;</token>
  </line>
  <line no="4966">
    <token name="T_DOC_COMMENT">   *                               HTML comments and PHP tags are also stripped. This is hardcoded and</token>
  </line>
  <line no="4967">
    <token name="T_DOC_COMMENT">   *                               can not be changed with allowable_tags.</token>
  </line>
  <line no="4968">
    <token name="T_DOC_COMMENT">   *                               &lt;/p&gt;</token>
  </line>
  <line no="4969">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4970">
    <token name="T_DOC_COMMENT">   * @return string the stripped string.</token>
  </line>
  <line no="4971">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="4972">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strip_tags</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$allowable_tags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="4973">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="4974">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//clean broken utf8</token>
  </line>
  <line no="4975">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4976"/>
  <line no="4977">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strip_tags</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$allowable_tags</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4978">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="4979"/>
  <line no="4980">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4981">
    <token name="T_DOC_COMMENT">   * Finds position of first occurrence of a string within another, case insensitive.</token>
  </line>
  <line no="4982">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4983">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-stripos.php</token>
  </line>
  <line no="4984">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4985">
    <token name="T_DOC_COMMENT">   * @param string  $haystack  &lt;p&gt;</token>
  </line>
  <line no="4986">
    <token name="T_DOC_COMMENT">   *                           The string from which to get the position of the first occurrence</token>
  </line>
  <line no="4987">
    <token name="T_DOC_COMMENT">   *                           of needle</token>
  </line>
  <line no="4988">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4989">
    <token name="T_DOC_COMMENT">   * @param string  $needle    &lt;p&gt;</token>
  </line>
  <line no="4990">
    <token name="T_DOC_COMMENT">   *                           The string to find in haystack</token>
  </line>
  <line no="4991">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4992">
    <token name="T_DOC_COMMENT">   * @param int     $offset    [optional] &lt;p&gt;</token>
  </line>
  <line no="4993">
    <token name="T_DOC_COMMENT">   *                           The position in haystack</token>
  </line>
  <line no="4994">
    <token name="T_DOC_COMMENT">   *                           to start searching</token>
  </line>
  <line no="4995">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="4996">
    <token name="T_DOC_COMMENT">   * @param string  $encoding</token>
  </line>
  <line no="4997">
    <token name="T_DOC_COMMENT">   * @param boolean $cleanUtf8 Clean non UTF-8 chars from the string</token>
  </line>
  <line no="4998">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="4999">
    <token name="T_DOC_COMMENT">   * @return int Return the numeric position of the first occurrence of</token>
  </line>
  <line no="5000">
    <token name="T_DOC_COMMENT">   * needle in the haystack</token>
  </line>
  <line no="5001">
    <token name="T_DOC_COMMENT">   * string, or false if needle is not found.</token>
  </line>
  <line no="5002">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5003">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">stripos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5004">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5005">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5006">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5007"/>
  <line no="5008">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5009">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5010">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5011"/>
  <line no="5012">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5013">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5014"/>
  <line no="5015">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5016">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5017">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5018">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5019"/>
  <line no="5020">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// INFO: this is only a fallback for old versions</token>
  </line>
  <line no="5021">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5022">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5023">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5024"/>
  <line no="5025">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_stripos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5026">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5027"/>
  <line no="5028">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5029">
    <token name="T_DOC_COMMENT">   * Returns all of haystack starting from and including the first occurrence of needle to the end.</token>
  </line>
  <line no="5030">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5031">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="5032">
    <token name="T_DOC_COMMENT">   * @param string $needle</token>
  </line>
  <line no="5033">
    <token name="T_DOC_COMMENT">   * @param bool   $before_needle</token>
  </line>
  <line no="5034">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5035">
    <token name="T_DOC_COMMENT">   * @return false|string</token>
  </line>
  <line no="5036">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5037">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">stristr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$before_needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5038">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5039">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5040">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5041">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5042"/>
  <line no="5043">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5044">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5045"/>
  <line no="5046">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_stristr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$before_needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5047">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5048"/>
  <line no="5049">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5050">
    <token name="T_DOC_COMMENT">   * Get the string length, not the byte-length!</token>
  </line>
  <line no="5051">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5052">
    <token name="T_DOC_COMMENT">   * @link     http://php.net/manual/en/function.mb-strlen.php</token>
  </line>
  <line no="5053">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5054">
    <token name="T_DOC_COMMENT">   * @param string  $str       The string being checked for length.</token>
  </line>
  <line no="5055">
    <token name="T_DOC_COMMENT">   * @param string  $encoding  Set the charset for e.g. "\mb_" function</token>
  </line>
  <line no="5056">
    <token name="T_DOC_COMMENT">   * @param boolean $cleanUtf8 Clean non UTF-8 chars from the string</token>
  </line>
  <line no="5057">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5058">
    <token name="T_DOC_COMMENT">   * @return int the number of characters in</token>
  </line>
  <line no="5059">
    <token name="T_DOC_COMMENT">   *           string str having character encoding</token>
  </line>
  <line no="5060">
    <token name="T_DOC_COMMENT">   *           encoding. A multi-byte character is</token>
  </line>
  <line no="5061">
    <token name="T_DOC_COMMENT">   *           counted as 1.</token>
  </line>
  <line no="5062">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5063">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5064">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5065">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5066"/>
  <line no="5067">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5068">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5069">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5070"/>
  <line no="5071">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5072">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5073"/>
  <line no="5074">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// INFO: this is only a fallback for old versions</token>
  </line>
  <line no="5075">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5076">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5077">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5078"/>
  <line no="5079">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5080">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5081">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5082"/>
  <line no="5083">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5084">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5085"/>
  <line no="5086">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5087">
    <token name="T_DOC_COMMENT">   * Case insensitive string comparisons using a "natural order" algorithm.</token>
  </line>
  <line no="5088">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5089">
    <token name="T_DOC_COMMENT">   * @param string $str1</token>
  </line>
  <line no="5090">
    <token name="T_DOC_COMMENT">   * @param string $str2</token>
  </line>
  <line no="5091">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5092">
    <token name="T_DOC_COMMENT">   * @return int &lt;strong&gt;&lt; 0&lt;/strong&gt; if str1 is less than str2&lt;br /&gt;</token>
  </line>
  <line no="5093">
    <token name="T_DOC_COMMENT">   *             &lt;strong&gt;&gt; 0&lt;/strong&gt; if str1 is greater than str2&lt;br /&gt;</token>
  </line>
  <line no="5094">
    <token name="T_DOC_COMMENT">   *             &lt;strong&gt;0&lt;/strong&gt; if they are equal</token>
  </line>
  <line no="5095">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5096">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strnatcasecmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5097">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5098">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strnatcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5099">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5100"/>
  <line no="5101">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5102">
    <token name="T_DOC_COMMENT">   * String comparisons using a "natural order" algorithm</token>
  </line>
  <line no="5103">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5104">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.strnatcmp.php</token>
  </line>
  <line no="5105">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5106">
    <token name="T_DOC_COMMENT">   * @param string $str1 &lt;p&gt;</token>
  </line>
  <line no="5107">
    <token name="T_DOC_COMMENT">   *                     The first string.</token>
  </line>
  <line no="5108">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5109">
    <token name="T_DOC_COMMENT">   * @param string $str2 &lt;p&gt;</token>
  </line>
  <line no="5110">
    <token name="T_DOC_COMMENT">   *                     The second string.</token>
  </line>
  <line no="5111">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5112">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5113">
    <token name="T_DOC_COMMENT">   * @return int Similar to other string comparison functions, this one returns &amp;lt; 0 if</token>
  </line>
  <line no="5114">
    <token name="T_DOC_COMMENT">   * str1 is less than str2; &amp;gt;</token>
  </line>
  <line no="5115">
    <token name="T_DOC_COMMENT">   * 0 if str1 is greater than</token>
  </line>
  <line no="5116">
    <token name="T_DOC_COMMENT">   * str2, and 0 if they are equal.</token>
  </line>
  <line no="5117">
    <token name="T_DOC_COMMENT">   * @since 4.0</token>
  </line>
  <line no="5118">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5119">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5120">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strnatcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5121">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5122">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strnatcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtonatfold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtonatfold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5123">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5124"/>
  <line no="5125">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5126">
    <token name="T_DOC_COMMENT">   * Binary safe case-insensitive string comparison of the first n characters</token>
  </line>
  <line no="5127">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5128">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.strncasecmp.php</token>
  </line>
  <line no="5129">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5130">
    <token name="T_DOC_COMMENT">   * @param string $str1 &lt;p&gt;</token>
  </line>
  <line no="5131">
    <token name="T_DOC_COMMENT">   *                     The first string.</token>
  </line>
  <line no="5132">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5133">
    <token name="T_DOC_COMMENT">   * @param string $str2 &lt;p&gt;</token>
  </line>
  <line no="5134">
    <token name="T_DOC_COMMENT">   *                     The second string.</token>
  </line>
  <line no="5135">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5136">
    <token name="T_DOC_COMMENT">   * @param int    $len  &lt;p&gt;</token>
  </line>
  <line no="5137">
    <token name="T_DOC_COMMENT">   *                     The length of strings to be used in the comparison.</token>
  </line>
  <line no="5138">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5139">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5140">
    <token name="T_DOC_COMMENT">   * @return int &amp;lt; 0 if &lt;i&gt;str1&lt;/i&gt; is less than</token>
  </line>
  <line no="5141">
    <token name="T_DOC_COMMENT">   * &lt;i&gt;str2&lt;/i&gt;; &amp;gt; 0 if &lt;i&gt;str1&lt;/i&gt; is</token>
  </line>
  <line no="5142">
    <token name="T_DOC_COMMENT">   * greater than &lt;i&gt;str2&lt;/i&gt;, and 0 if they are equal.</token>
  </line>
  <line no="5143">
    <token name="T_DOC_COMMENT">   * @since 4.0.4</token>
  </line>
  <line no="5144">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5145">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5146">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strncasecmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5147">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5148">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strncmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5149">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5150"/>
  <line no="5151">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5152">
    <token name="T_DOC_COMMENT">   * Binary safe string comparison of the first n characters</token>
  </line>
  <line no="5153">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5154">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.strncmp.php</token>
  </line>
  <line no="5155">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5156">
    <token name="T_DOC_COMMENT">   * @param string $str1 &lt;p&gt;</token>
  </line>
  <line no="5157">
    <token name="T_DOC_COMMENT">   *                     The first string.</token>
  </line>
  <line no="5158">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5159">
    <token name="T_DOC_COMMENT">   * @param string $str2 &lt;p&gt;</token>
  </line>
  <line no="5160">
    <token name="T_DOC_COMMENT">   *                     The second string.</token>
  </line>
  <line no="5161">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5162">
    <token name="T_DOC_COMMENT">   * @param int    $len  &lt;p&gt;</token>
  </line>
  <line no="5163">
    <token name="T_DOC_COMMENT">   *                     Number of characters to use in the comparison.</token>
  </line>
  <line no="5164">
    <token name="T_DOC_COMMENT">   *                     &lt;/p&gt;</token>
  </line>
  <line no="5165">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5166">
    <token name="T_DOC_COMMENT">   * @return int &amp;lt; 0 if &lt;i&gt;str1&lt;/i&gt; is less than</token>
  </line>
  <line no="5167">
    <token name="T_DOC_COMMENT">   * &lt;i&gt;str2&lt;/i&gt;; &amp;gt; 0 if &lt;i&gt;str1&lt;/i&gt;</token>
  </line>
  <line no="5168">
    <token name="T_DOC_COMMENT">   * is greater than &lt;i&gt;str2&lt;/i&gt;, and 0 if they are</token>
  </line>
  <line no="5169">
    <token name="T_DOC_COMMENT">   * equal.</token>
  </line>
  <line no="5170">
    <token name="T_DOC_COMMENT">   * @since 4.0</token>
  </line>
  <line no="5171">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5172">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5173">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strncmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5174">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5175">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$len</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5176">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5177"/>
  <line no="5178">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5179">
    <token name="T_DOC_COMMENT">   * Search a string for any of a set of characters</token>
  </line>
  <line no="5180">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5181">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.strpbrk.php</token>
  </line>
  <line no="5182">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5183">
    <token name="T_DOC_COMMENT">   * @param string $haystack  &lt;p&gt;</token>
  </line>
  <line no="5184">
    <token name="T_DOC_COMMENT">   *                          The string where char_list is looked for.</token>
  </line>
  <line no="5185">
    <token name="T_DOC_COMMENT">   *                          &lt;/p&gt;</token>
  </line>
  <line no="5186">
    <token name="T_DOC_COMMENT">   * @param string $char_list &lt;p&gt;</token>
  </line>
  <line no="5187">
    <token name="T_DOC_COMMENT">   *                          This parameter is case sensitive.</token>
  </line>
  <line no="5188">
    <token name="T_DOC_COMMENT">   *                          &lt;/p&gt;</token>
  </line>
  <line no="5189">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5190">
    <token name="T_DOC_COMMENT">   * @return string a string starting from the character found, or false if it is</token>
  </line>
  <line no="5191">
    <token name="T_DOC_COMMENT">   * not found.</token>
  </line>
  <line no="5192">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5193">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5194">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpbrk</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$char_list</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5195">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5196">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5197">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$char_list</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$char_list</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5198"/>
  <line no="5199">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$char_list</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5200">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5201">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5202"/>
  <line no="5203">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$char_list</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$m</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5204">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$m</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5205">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5206">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5207">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5208">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5209"/>
  <line no="5210">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5211">
    <token name="T_DOC_COMMENT">   * Find position of first occurrence of string in a string.</token>
  </line>
  <line no="5212">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5213">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strpos.php</token>
  </line>
  <line no="5214">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5215">
    <token name="T_DOC_COMMENT">   * @param string  $haystack     &lt;p&gt;</token>
  </line>
  <line no="5216">
    <token name="T_DOC_COMMENT">   *                              The string being checked.</token>
  </line>
  <line no="5217">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5218">
    <token name="T_DOC_COMMENT">   * @param string  $needle       &lt;p&gt;</token>
  </line>
  <line no="5219">
    <token name="T_DOC_COMMENT">   *                              The position counted from the beginning of haystack.</token>
  </line>
  <line no="5220">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5221">
    <token name="T_DOC_COMMENT">   * @param int     $offset       [optional] &lt;p&gt;</token>
  </line>
  <line no="5222">
    <token name="T_DOC_COMMENT">   *                              The search offset. If it is not specified, 0 is used.</token>
  </line>
  <line no="5223">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5224">
    <token name="T_DOC_COMMENT">   * @param string  $encoding</token>
  </line>
  <line no="5225">
    <token name="T_DOC_COMMENT">   * @param boolean $cleanUtf8    Clean non UTF-8 chars from the string.</token>
  </line>
  <line no="5226">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5227">
    <token name="T_DOC_COMMENT">   * @return int The numeric position of the first occurrence of needle in the haystack string.&lt;br /&gt;</token>
  </line>
  <line no="5228">
    <token name="T_DOC_COMMENT">   *             If needle is not found it returns false.</token>
  </line>
  <line no="5229">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5230">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5231">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5232">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5233">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5234"/>
  <line no="5235">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5236">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5237">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5238"/>
  <line no="5239">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5240">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5241">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5242"/>
  <line no="5243">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// iconv and mbstring do not support integer $needle</token>
  </line>
  <line no="5244"/>
  <line no="5245">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5246">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5248"/>
  <line no="5249">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5250">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// \mb_strpos returns wrong position if invalid characters are found in $haystack before $needle</token>
  </line>
  <line no="5251">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// iconv_strpos is not tolerant to invalid characters</token>
  </line>
  <line no="5252"/>
  <line no="5253">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5254">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5255">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5256"/>
  <line no="5257">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5258"/>
  <line no="5259">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// INFO: this is only a fallback for old versions</token>
  </line>
  <line no="5260">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5261">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5262">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5263"/>
  <line no="5264">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5265">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5266"/>
  <line no="5267">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'iconv'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5268">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// ignore invalid negative offset to keep compatility</token>
  </line>
  <line no="5269">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// with php &lt; 5.5.35, &lt; 5.6.21, &lt; 7.0.6</token>
  </line>
  <line no="5270">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">grapheme_strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5271">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5272"/>
  <line no="5273">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5274">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5275">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5276"/>
  <line no="5277">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5278">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$left</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5279"/>
  <line no="5280">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// negative offset not supported in PHP strpos(), ignoring</token>
  </line>
  <line no="5281">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$left</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5282">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5283"/>
  <line no="5284">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5285">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5286"/>
  <line no="5287">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5288">
    <token name="T_DOC_COMMENT">   * Finds the last occurrence of a character in a string within another.</token>
  </line>
  <line no="5289">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5290">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strrchr.php</token>
  </line>
  <line no="5291">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5292">
    <token name="T_DOC_COMMENT">   * @param string $haystack &lt;p&gt;</token>
  </line>
  <line no="5293">
    <token name="T_DOC_COMMENT">   *                         The string from which to get the last occurrence</token>
  </line>
  <line no="5294">
    <token name="T_DOC_COMMENT">   *                         of needle</token>
  </line>
  <line no="5295">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5296">
    <token name="T_DOC_COMMENT">   * @param string $needle   &lt;p&gt;</token>
  </line>
  <line no="5297">
    <token name="T_DOC_COMMENT">   *                         The string to find in haystack</token>
  </line>
  <line no="5298">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5299">
    <token name="T_DOC_COMMENT">   * @param bool   $part     [optional] &lt;p&gt;</token>
  </line>
  <line no="5300">
    <token name="T_DOC_COMMENT">   *                         Determines which portion of haystack</token>
  </line>
  <line no="5301">
    <token name="T_DOC_COMMENT">   *                         this function returns.</token>
  </line>
  <line no="5302">
    <token name="T_DOC_COMMENT">   *                         If set to true, it returns all of haystack</token>
  </line>
  <line no="5303">
    <token name="T_DOC_COMMENT">   *                         from the beginning to the last occurrence of needle.</token>
  </line>
  <line no="5304">
    <token name="T_DOC_COMMENT">   *                         If set to false, it returns all of haystack</token>
  </line>
  <line no="5305">
    <token name="T_DOC_COMMENT">   *                         from the last occurrence of needle to the end,</token>
  </line>
  <line no="5306">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5307">
    <token name="T_DOC_COMMENT">   * @param string $encoding [optional] &lt;p&gt;</token>
  </line>
  <line no="5308">
    <token name="T_DOC_COMMENT">   *                         Character encoding name to use.</token>
  </line>
  <line no="5309">
    <token name="T_DOC_COMMENT">   *                         If it is omitted, internal character encoding is used.</token>
  </line>
  <line no="5310">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5311">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5312">
    <token name="T_DOC_COMMENT">   * @return string the portion of haystack.</token>
  </line>
  <line no="5313">
    <token name="T_DOC_COMMENT">   * or false if needle is not found.</token>
  </line>
  <line no="5314">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5315">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strrchr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$part</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5316">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5317">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5318"/>
  <line no="5319">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strrchr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$part</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5320">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5321"/>
  <line no="5322">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5323">
    <token name="T_DOC_COMMENT">   * Reverses characters order in the string.</token>
  </line>
  <line no="5324">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5325">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string</token>
  </line>
  <line no="5326">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5327">
    <token name="T_DOC_COMMENT">   * @return   string The string with characters in the reverse sequence</token>
  </line>
  <line no="5328">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5329">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strrev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5330">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5331">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">array_reverse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5332">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5333"/>
  <line no="5334">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5335">
    <token name="T_DOC_COMMENT">   * Finds the last occurrence of a character in a string within another, case insensitive.</token>
  </line>
  <line no="5336">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5337">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strrichr.php</token>
  </line>
  <line no="5338">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5339">
    <token name="T_DOC_COMMENT">   * @param string $haystack &lt;p&gt;</token>
  </line>
  <line no="5340">
    <token name="T_DOC_COMMENT">   *                         The string from which to get the last occurrence</token>
  </line>
  <line no="5341">
    <token name="T_DOC_COMMENT">   *                         of needle</token>
  </line>
  <line no="5342">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5343">
    <token name="T_DOC_COMMENT">   * @param string $needle   &lt;p&gt;</token>
  </line>
  <line no="5344">
    <token name="T_DOC_COMMENT">   *                         The string to find in haystack</token>
  </line>
  <line no="5345">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5346">
    <token name="T_DOC_COMMENT">   * @param bool   $part     [optional] &lt;p&gt;</token>
  </line>
  <line no="5347">
    <token name="T_DOC_COMMENT">   *                         Determines which portion of haystack</token>
  </line>
  <line no="5348">
    <token name="T_DOC_COMMENT">   *                         this function returns.</token>
  </line>
  <line no="5349">
    <token name="T_DOC_COMMENT">   *                         If set to true, it returns all of haystack</token>
  </line>
  <line no="5350">
    <token name="T_DOC_COMMENT">   *                         from the beginning to the last occurrence of needle.</token>
  </line>
  <line no="5351">
    <token name="T_DOC_COMMENT">   *                         If set to false, it returns all of haystack</token>
  </line>
  <line no="5352">
    <token name="T_DOC_COMMENT">   *                         from the last occurrence of needle to the end,</token>
  </line>
  <line no="5353">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5354">
    <token name="T_DOC_COMMENT">   * @param string $encoding [optional] &lt;p&gt;</token>
  </line>
  <line no="5355">
    <token name="T_DOC_COMMENT">   *                         Character encoding name to use.</token>
  </line>
  <line no="5356">
    <token name="T_DOC_COMMENT">   *                         If it is omitted, internal character encoding is used.</token>
  </line>
  <line no="5357">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5358">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5359">
    <token name="T_DOC_COMMENT">   * @return string the portion of haystack.</token>
  </line>
  <line no="5360">
    <token name="T_DOC_COMMENT">   * or false if needle is not found.</token>
  </line>
  <line no="5361">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5362">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strrichr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$part</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5363">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5364">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5365"/>
  <line no="5366">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strrichr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$part</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5367">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5368"/>
  <line no="5369">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5370">
    <token name="T_DOC_COMMENT">   * Find position of last occurrence of a case-insensitive string.</token>
  </line>
  <line no="5371">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5372">
    <token name="T_DOC_COMMENT">   * @param    string $haystack The string to look in</token>
  </line>
  <line no="5373">
    <token name="T_DOC_COMMENT">   * @param    string $needle   The string to look for</token>
  </line>
  <line no="5374">
    <token name="T_DOC_COMMENT">   * @param    int    $offset   (Optional) Number of characters to ignore in the beginning or end</token>
  </line>
  <line no="5375">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5376">
    <token name="T_DOC_COMMENT">   * @return   int The position of offset</token>
  </line>
  <line no="5377">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5378">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strripos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5379">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5380">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strrpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5381">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5382"/>
  <line no="5383">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5384">
    <token name="T_DOC_COMMENT">   * Find position of last occurrence of a string in a string.</token>
  </line>
  <line no="5385">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5386">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strrpos.php</token>
  </line>
  <line no="5387">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5388">
    <token name="T_DOC_COMMENT">   * @param string     $haystack  &lt;p&gt;</token>
  </line>
  <line no="5389">
    <token name="T_DOC_COMMENT">   *                              The string being checked, for the last occurrence</token>
  </line>
  <line no="5390">
    <token name="T_DOC_COMMENT">   *                              of needle</token>
  </line>
  <line no="5391">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5392">
    <token name="T_DOC_COMMENT">   * @param string|int $needle    &lt;p&gt;</token>
  </line>
  <line no="5393">
    <token name="T_DOC_COMMENT">   *                              The string to find in haystack.</token>
  </line>
  <line no="5394">
    <token name="T_DOC_COMMENT">   *                              Or a code point as int.</token>
  </line>
  <line no="5395">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5396">
    <token name="T_DOC_COMMENT">   * @param int        $offset    [optional] May be specified to begin searching an arbitrary number of characters into</token>
  </line>
  <line no="5397">
    <token name="T_DOC_COMMENT">   *                              the string. Negative values will stop searching at an arbitrary point</token>
  </line>
  <line no="5398">
    <token name="T_DOC_COMMENT">   *                              prior to the end of the string.</token>
  </line>
  <line no="5399">
    <token name="T_DOC_COMMENT">   * @param boolean    $cleanUtf8 Clean non UTF-8 chars from the string</token>
  </line>
  <line no="5400">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5401">
    <token name="T_DOC_COMMENT">   * @return int the numeric position of</token>
  </line>
  <line no="5402">
    <token name="T_DOC_COMMENT">   * the last occurrence of needle in the</token>
  </line>
  <line no="5403">
    <token name="T_DOC_COMMENT">   * haystack string. If</token>
  </line>
  <line no="5404">
    <token name="T_DOC_COMMENT">   * needle is not found, it returns false.</token>
  </line>
  <line no="5405">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5406">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strrpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5407">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5408">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5409"/>
  <line no="5410">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5411">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5412">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5413"/>
  <line no="5414">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5415"/>
  <line no="5416">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5417">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5418">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5419"/>
  <line no="5420">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5421">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5422"/>
  <line no="5423">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5424">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5425"/>
  <line no="5426">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5427">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// \mb_strrpos &amp;&amp; iconv_strrpos is not tolerant to invalid characters</token>
  </line>
  <line no="5428"/>
  <line no="5429">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5430">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5431">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5432"/>
  <line no="5433">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5434">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strrpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5435">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5436"/>
  <line no="5437">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'iconv'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5438">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">grapheme_strrpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5439">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5440"/>
  <line no="5441">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// fallback</token>
  </line>
  <line no="5442"/>
  <line no="5443">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5444">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5445">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5446">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5447">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5448"/>
  <line no="5449">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strrpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5450">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$left</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pos</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5451"/>
  <line no="5452">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// negative offset not supported in PHP strpos(), ignoring</token>
  </line>
  <line no="5453">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$left</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5454">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5455"/>
  <line no="5456">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5457">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5458"/>
  <line no="5459">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5460">
    <token name="T_DOC_COMMENT">   * Finds the length of the initial segment of a string consisting entirely of characters contained within a given</token>
  </line>
  <line no="5461">
    <token name="T_DOC_COMMENT">   * mask.</token>
  </line>
  <line no="5462">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5463">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="5464">
    <token name="T_DOC_COMMENT">   * @param string $mask</token>
  </line>
  <line no="5465">
    <token name="T_DOC_COMMENT">   * @param int    $offset</token>
  </line>
  <line no="5466">
    <token name="T_DOC_COMMENT">   * @param int    $length</token>
  </line>
  <line no="5467">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5468">
    <token name="T_DOC_COMMENT">   * @return int|null</token>
  </line>
  <line no="5469">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5470">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strspn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mask</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2147483647</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5471">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5472">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2147483647</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5473">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5474">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5475"/>
  <line no="5476">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rxClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$mask</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'+/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5477">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5478"/>
  <line no="5479">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5480">
    <token name="T_DOC_COMMENT">   * Returns part of haystack string from the first occurrence of needle to the end of haystack.</token>
  </line>
  <line no="5481">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5482">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.grapheme-strstr.php</token>
  </line>
  <line no="5483">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5484">
    <token name="T_DOC_COMMENT">   * @param string $haystack      &lt;p&gt;</token>
  </line>
  <line no="5485">
    <token name="T_DOC_COMMENT">   *                              The input string. Must be valid UTF-8.</token>
  </line>
  <line no="5486">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5487">
    <token name="T_DOC_COMMENT">   * @param string $needle        &lt;p&gt;</token>
  </line>
  <line no="5488">
    <token name="T_DOC_COMMENT">   *                              The string to look for. Must be valid UTF-8.</token>
  </line>
  <line no="5489">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5490">
    <token name="T_DOC_COMMENT">   * @param bool   $before_needle [optional] &lt;p&gt;</token>
  </line>
  <line no="5491">
    <token name="T_DOC_COMMENT">   *                              If &lt;b&gt;TRUE&lt;/b&gt;, grapheme_strstr() returns the part of the</token>
  </line>
  <line no="5492">
    <token name="T_DOC_COMMENT">   *                              haystack before the first occurrence of the needle (excluding the needle).</token>
  </line>
  <line no="5493">
    <token name="T_DOC_COMMENT">   *                              &lt;/p&gt;</token>
  </line>
  <line no="5494">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5495">
    <token name="T_DOC_COMMENT">   * @return string the portion of string, or FALSE if needle is not found.</token>
  </line>
  <line no="5496">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5497">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strstr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$before_needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5498">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5499">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5500"/>
  <line no="5501">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">grapheme_strstr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$before_needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5502">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5503"/>
  <line no="5504">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5505">
    <token name="T_DOC_COMMENT">   * Unicode transformation for case-less matching.</token>
  </line>
  <line no="5506">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5507">
    <token name="T_DOC_COMMENT">   * @link http://unicode.org/reports/tr21/tr21-5.html</token>
  </line>
  <line no="5508">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5509">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="5510">
    <token name="T_DOC_COMMENT">   * @param bool   $full</token>
  </line>
  <line no="5511">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5512">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5513">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5514">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtocasefold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$full</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5515">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5516">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fullCaseFold</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5517">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$commonCaseFoldKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5518">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$commonCaseFoldValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5519"/>
  <line no="5520">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$commonCaseFoldKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5521">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$commonCaseFoldKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$commonCaseFold</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5522">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$commonCaseFoldValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$commonCaseFold</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5523">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5524"/>
  <line no="5525">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$commonCaseFoldKeys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$commonCaseFoldValues</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5526"/>
  <line no="5527">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$full</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5528"/>
  <line no="5529">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fullCaseFold</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5530">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$fullCaseFold</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getData</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'caseFolding_full'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5531">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5532"/>
  <line no="5533">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection OffsetOperationsInspection */</token>
  </line>
  <line no="5534">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fullCaseFold</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fullCaseFold</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5535">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5536"/>
  <line no="5537">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5538"/>
  <line no="5539">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5540">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5541"/>
  <line no="5542">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5543">
    <token name="T_DOC_COMMENT">   * (PHP 4 &amp;gt;= 4.3.0, PHP 5)&lt;br/&gt;</token>
  </line>
  <line no="5544">
    <token name="T_DOC_COMMENT">   * Make a string lowercase.</token>
  </line>
  <line no="5545">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5546">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strtolower.php</token>
  </line>
  <line no="5547">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5548">
    <token name="T_DOC_COMMENT">   * @param string $str &lt;p&gt;</token>
  </line>
  <line no="5549">
    <token name="T_DOC_COMMENT">   *                    The string being lowercased.</token>
  </line>
  <line no="5550">
    <token name="T_DOC_COMMENT">   *                    &lt;/p&gt;</token>
  </line>
  <line no="5551">
    <token name="T_DOC_COMMENT">   * @param string $encoding</token>
  </line>
  <line no="5552">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5553">
    <token name="T_DOC_COMMENT">   * @return string str with all alphabetic characters converted to lowercase.</token>
  </line>
  <line no="5554">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5555">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5556">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5557">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5558"/>
  <line no="5559">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5560">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5561">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5562"/>
  <line no="5563">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5564">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5565"/>
  <line no="5566">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5567">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5568"/>
  <line no="5569">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5570">
    <token name="T_DOC_COMMENT">   * Generic case sensitive transformation for collation matching.</token>
  </line>
  <line no="5571">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5572">
    <token name="T_DOC_COMMENT">   * @param string $s</token>
  </line>
  <line no="5573">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5574">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5575">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5576">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtonatfold</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5577">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5578">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/\p{Mn}+/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NFD</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5579">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5580"/>
  <line no="5581">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5582">
    <token name="T_DOC_COMMENT">   * Make a string uppercase.</token>
  </line>
  <line no="5583">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5584">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-strtoupper.php</token>
  </line>
  <line no="5585">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5586">
    <token name="T_DOC_COMMENT">   * @param string $str &lt;p&gt;</token>
  </line>
  <line no="5587">
    <token name="T_DOC_COMMENT">   *                    The string being uppercased.</token>
  </line>
  <line no="5588">
    <token name="T_DOC_COMMENT">   *                    &lt;/p&gt;</token>
  </line>
  <line no="5589">
    <token name="T_DOC_COMMENT">   * @param string $encoding</token>
  </line>
  <line no="5590">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5591">
    <token name="T_DOC_COMMENT">   * @return string str with all alphabetic characters converted to uppercase.</token>
  </line>
  <line no="5592">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5593">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5594">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5595">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5596"/>
  <line no="5597">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5598">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5599">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5600"/>
  <line no="5601">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5602">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5603"/>
  <line no="5604">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5605">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5606">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5607"/>
  <line no="5608">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// fallback</token>
  </line>
  <line no="5609"/>
  <line no="5610">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caseTableKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5611">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caseTableValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5612"/>
  <line no="5613">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caseTableKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5614">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$caseTable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">case_table</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5615">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$caseTableKeys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caseTable</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5616">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$caseTableValues</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caseTable</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5617">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5618"/>
  <line no="5619">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5620"/>
  <line no="5621">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caseTableKeys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caseTableValues</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5622">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5623">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5624"/>
  <line no="5625">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5626">
    <token name="T_DOC_COMMENT">   * Translate characters or replace sub-strings.</token>
  </line>
  <line no="5627">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5628">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.strtr.php</token>
  </line>
  <line no="5629">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5630">
    <token name="T_DOC_COMMENT">   * @param string       $str  &lt;p&gt;</token>
  </line>
  <line no="5631">
    <token name="T_DOC_COMMENT">   *                           The string being translated.</token>
  </line>
  <line no="5632">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5633">
    <token name="T_DOC_COMMENT">   * @param string|array $from &lt;p&gt;</token>
  </line>
  <line no="5634">
    <token name="T_DOC_COMMENT">   *                           The string replacing from.</token>
  </line>
  <line no="5635">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5636">
    <token name="T_DOC_COMMENT">   * @param string|array $to   &lt;p&gt;</token>
  </line>
  <line no="5637">
    <token name="T_DOC_COMMENT">   *                           The string being translated to to.</token>
  </line>
  <line no="5638">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5639">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5640">
    <token name="T_DOC_COMMENT">   * @return string This function returns a copy of str,</token>
  </line>
  <line no="5641">
    <token name="T_DOC_COMMENT">   * translating all occurrences of each character in</token>
  </line>
  <line no="5642">
    <token name="T_DOC_COMMENT">   * from to the corresponding character in</token>
  </line>
  <line no="5643">
    <token name="T_DOC_COMMENT">   * to.</token>
  </line>
  <line no="5644">
    <token name="T_DOC_COMMENT">   * @since 4.0</token>
  </line>
  <line no="5645">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5646">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5647">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5648">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5649">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">INF</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5650">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">str_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5651">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">str_split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5652">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$countFrom</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5653">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$countTo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5654"/>
  <line no="5655">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$countFrom</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$countTo</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5656">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$countTo</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5657">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$countFrom</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$countTo</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5658">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$countFrom</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5659">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5660"/>
  <line no="5661">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_combine</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$to</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5662">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5663"/>
  <line no="5664">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5665">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5666"/>
  <line no="5667">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5668">
    <token name="T_DOC_COMMENT">   * Return the width of a string.</token>
  </line>
  <line no="5669">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5670">
    <token name="T_DOC_COMMENT">   * @param string $s</token>
  </line>
  <line no="5671">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5672">
    <token name="T_DOC_COMMENT">   * @return int</token>
  </line>
  <line no="5673">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5674">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strwidth</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5675">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5676">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5677">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5678"/>
  <line no="5679">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strwidth</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5680">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5681"/>
  <line no="5682">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5683">
    <token name="T_DOC_COMMENT">   * Get part of a string.</token>
  </line>
  <line no="5684">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5685">
    <token name="T_DOC_COMMENT">   * @link http://php.net/manual/en/function.mb-substr.php</token>
  </line>
  <line no="5686">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5687">
    <token name="T_DOC_COMMENT">   * @param string  $str       &lt;p&gt;</token>
  </line>
  <line no="5688">
    <token name="T_DOC_COMMENT">   *                           The string being checked.</token>
  </line>
  <line no="5689">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5690">
    <token name="T_DOC_COMMENT">   * @param int     $start     &lt;p&gt;</token>
  </line>
  <line no="5691">
    <token name="T_DOC_COMMENT">   *                           The first position used in str.</token>
  </line>
  <line no="5692">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5693">
    <token name="T_DOC_COMMENT">   * @param int     $length    [optional] &lt;p&gt;</token>
  </line>
  <line no="5694">
    <token name="T_DOC_COMMENT">   *                           The maximum length of the returned string.</token>
  </line>
  <line no="5695">
    <token name="T_DOC_COMMENT">   *                           &lt;/p&gt;</token>
  </line>
  <line no="5696">
    <token name="T_DOC_COMMENT">   * @param string  $encoding</token>
  </line>
  <line no="5697">
    <token name="T_DOC_COMMENT">   * @param boolean $cleanUtf8 Clean non UTF-8 chars from the string</token>
  </line>
  <line no="5698">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5699">
    <token name="T_DOC_COMMENT">   * @return string mb_substr returns the portion of</token>
  </line>
  <line no="5700">
    <token name="T_DOC_COMMENT">   * str specified by the start and length parameters.</token>
  </line>
  <line no="5701">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5702">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5703">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5704">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5705"/>
  <line no="5706">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5707">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5708">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5709"/>
  <line no="5710">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="5711">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5712"/>
  <line no="5713">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cleanUtf8</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5714">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// iconv and mbstring are not tolerant to invalid encoding</token>
  </line>
  <line no="5715">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// further, their behaviour is inconsistent with that of PHP's substr</token>
  </line>
  <line no="5716"/>
  <line no="5717">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5718">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5719"/>
  <line no="5720">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5721">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5722">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5723">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5724">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5725"/>
  <line no="5726">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mbstring'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5727"/>
  <line no="5728">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// INFO: this is only a fallback for old versions</token>
  </line>
  <line no="5729">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5730">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5731">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5732"/>
  <line no="5733">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5734">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5735"/>
  <line no="5736">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$support</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'iconv'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5737">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">grapheme_substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5738">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5739"/>
  <line no="5740">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// fallback</token>
  </line>
  <line no="5741"/>
  <line no="5742">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// split to array, and remove invalid characters</token>
  </line>
  <line no="5743">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5744"/>
  <line no="5745">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// extract relevant part, and join to make sting again</token>
  </line>
  <line no="5746">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5747">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5748"/>
  <line no="5749">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5750">
    <token name="T_DOC_COMMENT">   * Binary safe comparison of two strings from an offset, up to length characters.</token>
  </line>
  <line no="5751">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5752">
    <token name="T_DOC_COMMENT">   * @param string  $main_str           The main string being compared.</token>
  </line>
  <line no="5753">
    <token name="T_DOC_COMMENT">   * @param string  $str                The secondary string being compared.</token>
  </line>
  <line no="5754">
    <token name="T_DOC_COMMENT">   * @param int     $offset             The start position for the comparison. If negative, it starts counting from the</token>
  </line>
  <line no="5755">
    <token name="T_DOC_COMMENT">   *                                    end of the string.</token>
  </line>
  <line no="5756">
    <token name="T_DOC_COMMENT">   * @param int     $length             The length of the comparison. The default value is the largest of the length of</token>
  </line>
  <line no="5757">
    <token name="T_DOC_COMMENT">   *                                    the str compared to the length of main_str less the offset.</token>
  </line>
  <line no="5758">
    <token name="T_DOC_COMMENT">   * @param boolean $case_insensitivity If case_insensitivity is TRUE, comparison is case insensitive.</token>
  </line>
  <line no="5759">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5760">
    <token name="T_DOC_COMMENT">   * @return int</token>
  </line>
  <line no="5761">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5762">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr_compare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2147483647</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$case_insensitivity</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5763">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5764">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5765">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5766"/>
  <line no="5767">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$case_insensitivity</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strcasecmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strcmp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$main_str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5768">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5769"/>
  <line no="5770">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5771">
    <token name="T_DOC_COMMENT">   * Count the number of substring occurrences</token>
  </line>
  <line no="5772">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5773">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.substr-count.php</token>
  </line>
  <line no="5774">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5775">
    <token name="T_DOC_COMMENT">   * @param string $haystack &lt;p&gt;</token>
  </line>
  <line no="5776">
    <token name="T_DOC_COMMENT">   *                         The string to search in</token>
  </line>
  <line no="5777">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5778">
    <token name="T_DOC_COMMENT">   * @param string $needle   &lt;p&gt;</token>
  </line>
  <line no="5779">
    <token name="T_DOC_COMMENT">   *                         The substring to search for</token>
  </line>
  <line no="5780">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5781">
    <token name="T_DOC_COMMENT">   * @param int    $offset   [optional] &lt;p&gt;</token>
  </line>
  <line no="5782">
    <token name="T_DOC_COMMENT">   *                         The offset where to start counting</token>
  </line>
  <line no="5783">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5784">
    <token name="T_DOC_COMMENT">   * @param int    $length   [optional] &lt;p&gt;</token>
  </line>
  <line no="5785">
    <token name="T_DOC_COMMENT">   *                         The maximum length after the specified offset to search for the</token>
  </line>
  <line no="5786">
    <token name="T_DOC_COMMENT">   *                         substring. It outputs a warning if the offset plus the length is</token>
  </line>
  <line no="5787">
    <token name="T_DOC_COMMENT">   *                         greater than the haystack length.</token>
  </line>
  <line no="5788">
    <token name="T_DOC_COMMENT">   *                         &lt;/p&gt;</token>
  </line>
  <line no="5789">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5790">
    <token name="T_DOC_COMMENT">   * @return int This functions returns an integer.</token>
  </line>
  <line no="5791">
    <token name="T_DOC_COMMENT">   * @since 4.0</token>
  </line>
  <line no="5792">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="5793">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5794">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr_count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5795">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5796">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5797">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5798"/>
  <line no="5799">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5800">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5801">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5802"/>
  <line no="5803">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5804">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5805">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5806"/>
  <line no="5807">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5808">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5809"/>
  <line no="5810">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5811"/>
  <line no="5812">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_substr_count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$haystack</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$needle</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5813">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5814"/>
  <line no="5815">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5816">
    <token name="T_DOC_COMMENT">   * Replace text within a portion of a string.</token>
  </line>
  <line no="5817">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5818">
    <token name="T_DOC_COMMENT">   * source: https://gist.github.com/stemar/8287074</token>
  </line>
  <line no="5819">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5820">
    <token name="T_DOC_COMMENT">   * @param string|array   $str</token>
  </line>
  <line no="5821">
    <token name="T_DOC_COMMENT">   * @param string|array   $replacement</token>
  </line>
  <line no="5822">
    <token name="T_DOC_COMMENT">   * @param int|array      $start</token>
  </line>
  <line no="5823">
    <token name="T_DOC_COMMENT">   * @param null|int|array $length</token>
  </line>
  <line no="5824">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5825">
    <token name="T_DOC_COMMENT">   * @return array|string</token>
  </line>
  <line no="5826">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5827">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5828">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5829">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5830">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5831"/>
  <line no="5832">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// $replacement</token>
  </line>
  <line no="5833">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5834">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5835">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5836">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_pad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5837">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5838"/>
  <line no="5839">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// $start</token>
  </line>
  <line no="5840">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5841">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5842">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5843">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5844">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5845">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$valueTmp</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5846">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5847">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_pad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5848">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5849"/>
  <line no="5850">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// $length</token>
  </line>
  <line no="5851">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5852">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_fill</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5853">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5854">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5855">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5856">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5857">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5858">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5859">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5860">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5861">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5862">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$valueTmpV2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5863">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5864">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_pad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$num</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5865">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5866"/>
  <line no="5867">
    <token name="T_WHITESPACE">      </token>
    <token name="T_COMMENT">// Recursive call</token>
  </line>
  <line no="5868">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_map</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CLASS_C">__CLASS__</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'substr_replace'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5869">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5870">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5871">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5872">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5873">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5874">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5875">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5876">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5877">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5878"/>
  <line no="5879">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/./us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$smatches</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5880">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/./us'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$replacement</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rmatches</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5881"/>
  <line no="5882">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5883">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5884"/>
  <line no="5885">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5886">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5887"/>
  <line no="5888">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">array_splice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$smatches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$start</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$length</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$rmatches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5889"/>
  <line no="5890">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$smatches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5891">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5892"/>
  <line no="5893">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5894">
    <token name="T_DOC_COMMENT">   * Returns a case swapped version of the string.</token>
  </line>
  <line no="5895">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5896">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="5897">
    <token name="T_DOC_COMMENT">   * @param string $encoding</token>
  </line>
  <line no="5898">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5899">
    <token name="T_DOC_COMMENT">   * @return string each character's case swapped</token>
  </line>
  <line no="5900">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5901">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">swapCase</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5902">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5903">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5904"/>
  <line no="5905">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5906">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5907">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5908"/>
  <line no="5909">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5910"/>
  <line no="5911">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$strSwappedCase</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace_callback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="5912">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\S]/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="5913">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5914">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$marchToUpper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UTF8</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5915"/>
  <line no="5916">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$marchToUpper</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5917">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UTF8</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$encoding</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5918">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5919">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$marchToUpper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5920">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5921">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="5922">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
  </line>
  <line no="5923">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5924"/>
  <line no="5925">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strSwappedCase</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5926">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5927"/>
  <line no="5928">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5929">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::to_ascii()"</token>
  </line>
  <line no="5930">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5931">
    <token name="T_DOC_COMMENT">   * @param string $s The input string e.g. a UTF-8 String</token>
  </line>
  <line no="5932">
    <token name="T_DOC_COMMENT">   * @param string $subst_chr</token>
  </line>
  <line no="5933">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5934">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5935">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5936">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toAscii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subst_chr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5937">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5938">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_ascii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subst_chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5939">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5940"/>
  <line no="5941">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5942">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::to_latin1()"</token>
  </line>
  <line no="5943">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5944">
    <token name="T_DOC_COMMENT">   * @param $str</token>
  </line>
  <line no="5945">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5946">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5947">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5948">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toLatin1</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5949">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5950">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_latin1</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5951">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5952"/>
  <line no="5953">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5954">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::to_utf8"</token>
  </line>
  <line no="5955">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5956">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="5957">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5958">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5959">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5960">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toUTF8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5961">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5962">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5963">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5964"/>
  <line no="5965">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="5966">
    <token name="T_DOC_COMMENT">   * convert to ASCII</token>
  </line>
  <line no="5967">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5968">
    <token name="T_DOC_COMMENT">   * @param string $s The input string e.g. a UTF-8 String</token>
  </line>
  <line no="5969">
    <token name="T_DOC_COMMENT">   * @param string $subst_chr</token>
  </line>
  <line no="5970">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="5971">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="5972">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="5973">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">to_ascii</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subst_chr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="5974">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5975">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$translitExtra</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5976"/>
  <line no="5977">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5978"/>
  <line no="5979">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5980">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5981">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5982"/>
  <line no="5983">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5984"/>
  <line no="5985">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/[\x80-\xFF]/"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5986">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NFKC</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5987"/>
  <line no="5988">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$glibc</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'glibc'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ICONV_IMPL</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5989"/>
  <line no="5990">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STRING">preg_match_all</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/./u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5991"/>
  <line no="5992">
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="5993">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5994"/>
  <line no="5995">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="5996">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5997">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="5998"/>
  <line no="5999">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$glibc</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6000">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">iconv</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASCII//TRANSLIT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6001">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6002">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">iconv</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ASCII//IGNORE//TRANSLIT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6003"/>
  <line no="6004">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_string</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6005">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6006">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6007">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6008">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ltrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\'`"^~'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6009">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6010">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6011">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6012"/>
  <line no="6013">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6014"/>
  <line no="6015">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$translitExtra</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6016">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$translitExtra</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getData</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'translit_extra'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6017">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6018"/>
  <line no="6019">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$translitExtra</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6020">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$translitExtra</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6021">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6022">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Normalizer</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NFD</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6023"/>
  <line no="6024">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6025">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6026">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6027">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subst_chr</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6028">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6029">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6030">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6031"/>
  <line no="6032">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6033">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">str_transliterate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$subst_chr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6034">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6035"/>
  <line no="6036">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$t</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6037">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6038"/>
  <line no="6039">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6040">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6041"/>
  <line no="6042">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6043">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6044"/>
  <line no="6045">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6046">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::to_win1252()"</token>
  </line>
  <line no="6047">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6048">
    <token name="T_DOC_COMMENT">   * @param   string $str</token>
  </line>
  <line no="6049">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6050">
    <token name="T_DOC_COMMENT">   * @return  array|string</token>
  </line>
  <line no="6051">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6052">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">to_iso8859</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6053">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6054">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_win1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6055">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6056"/>
  <line no="6057">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6058">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::to_win1252()"</token>
  </line>
  <line no="6059">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6060">
    <token name="T_DOC_COMMENT">   * @param string|array $str</token>
  </line>
  <line no="6061">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6062">
    <token name="T_DOC_COMMENT">   * @return string|array</token>
  </line>
  <line no="6063">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6064">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">to_latin1</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6065">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6066">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_win1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6067">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6068"/>
  <line no="6069">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6070">
    <token name="T_DOC_COMMENT">   * This function leaves UTF8 characters alone, while converting almost all non-UTF8 to UTF8.</token>
  </line>
  <line no="6071">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6072">
    <token name="T_DOC_COMMENT">   * - It assumes that the encoding of the original string is either WINDOWS-1252 or ISO-8859-1.</token>
  </line>
  <line no="6073">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6074">
    <token name="T_DOC_COMMENT">   * - It may fail to convert characters to UTF-8 if they fall into one of these scenarios:</token>
  </line>
  <line no="6075">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6076">
    <token name="T_DOC_COMMENT">   * 1) when any of these characters:   &#xC0;&#xC1;&#xC2;&#xC3;&#xC4;&#xC5;&#xC6;&#xC7;&#xC8;&#xC9;&#xCA;&#xCB;&#xCC;&#xCD;&#xCE;&#xCF;&#xD0;&#xD1;&#xD2;&#xD3;&#xD4;&#xD5;&#xD6;&#xD7;&#xD8;&#xD9;&#xDA;&#xDB;&#xDC;&#xDD;&#xDE;&#xDF;</token>
  </line>
  <line no="6077">
    <token name="T_DOC_COMMENT">   *    are followed by any of these:  ("group B")</token>
  </line>
  <line no="6078">
    <token name="T_DOC_COMMENT">   *                                    &#xA1;&#xA2;&#xA3;&#xA4;&#xA5;&#xA6;&#xA7;&#xA8;&#xA9;&#xAA;&#xAB;&#xAC;&#x2594;&#xAE;&#xAF;&#xB0;&#xB1;&#xB2;&#xB3;&#xB4;&#xB5;&#xB6;&#x2022;&#xB8;&#xB9;&#xBA;&#xBB;&#xBC;&#xBD;&#xBE;&#xBF;</token>
  </line>
  <line no="6079">
    <token name="T_DOC_COMMENT">   * For example:   %ABREPRESENT%C9%BB. &#xAB;REPRESENT&#xC9;&#xBB;</token>
  </line>
  <line no="6080">
    <token name="T_DOC_COMMENT">   * The "&#xAB;" (%AB) character will be converted, but the "&#xC9;" followed by "&#xBB;" (%C9%BB)</token>
  </line>
  <line no="6081">
    <token name="T_DOC_COMMENT">   * is also a valid unicode character, and will be left unchanged.</token>
  </line>
  <line no="6082">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6083">
    <token name="T_DOC_COMMENT">   * 2) when any of these: &#xE0;&#xE1;&#xE2;&#xE3;&#xE4;&#xE5;&#xE6;&#xE7;&#xE8;&#xE9;&#xEA;&#xEB;&#xEC;&#xED;&#xEE;&#xEF;  are followed by TWO chars from group B,</token>
  </line>
  <line no="6084">
    <token name="T_DOC_COMMENT">   * 3) when any of these: &#xF0;&#xF1;&#xF2;&#xF3;  are followed by THREE chars from group B.</token>
  </line>
  <line no="6085">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6086">
    <token name="T_DOC_COMMENT">   * @param string|array $str Any string or array.</token>
  </line>
  <line no="6087">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6088">
    <token name="T_DOC_COMMENT">   * @return string The same string, but UTF8 encoded.</token>
  </line>
  <line no="6089">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6090">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6091">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6092">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6093">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6094">
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="6095">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6096">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6097"/>
  <line no="6098">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6099">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6100"/>
  <line no="6101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6102"/>
  <line no="6103">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6104">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6106"/>
  <line no="6107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'8bit'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6108"/>
  <line no="6109">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection ForeachInvariantsInspection */</token>
  </line>
  <line no="6111">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6112">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6113"/>
  <line no="6114">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// should be converted to UTF8, if it's not UTF8 already</token>
  </line>
  <line no="6115">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6116">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6117">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$c4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$max</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x00"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6118"/>
  <line no="6119">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xdf"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// looks like 2 bytes UTF8</token>
  </line>
  <line no="6120"/>
  <line no="6121">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// yeah, almost sure it's UTF8 already</token>
  </line>
  <line no="6122">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6123">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6124">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// not valid UTF8 - convert it</token>
  </line>
  <line no="6125">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6126">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x3f"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6127">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6128">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6129"/>
  <line no="6130">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xe0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xef"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// looks like 3 bytes UTF8</token>
  </line>
  <line no="6131"/>
  <line no="6132">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// yeah, almost sure it's UTF8 already</token>
  </line>
  <line no="6133">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6134">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6135">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// not valid UTF8 - convert it</token>
  </line>
  <line no="6136">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6137">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x3f"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6138">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6139">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6140"/>
  <line no="6141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf0"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xf7"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// looks like 4 bytes UTF8</token>
  </line>
  <line no="6142"/>
  <line no="6143">
    <token name="T_WHITESPACE">          </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c4</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xbf"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// yeah, almost sure it's UTF8 already</token>
  </line>
  <line no="6144">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c4</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6145">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PLUS_EQUAL">+=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6146">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// not valid UTF8 - convert it</token>
  </line>
  <line no="6147">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6148">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x3f"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6149">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6150">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6151"/>
  <line no="6152">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// doesn't look like UTF8, but should be converted</token>
  </line>
  <line no="6153">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6154">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x3f"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6155">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6156">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6157"/>
  <line no="6158">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// needs conversion</token>
  </line>
  <line no="6159"/>
  <line no="6160">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ord</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6161">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$win1252ToUtf8</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// found in Windows-1252 special cases</token>
  </line>
  <line no="6162">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$win1252ToUtf8</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6163">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6164">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">chr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$ordC1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DIV">/</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">64</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xc0"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6165">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x3f"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\x80"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6166">
    <token name="T_WHITESPACE">          </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cc2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6167">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6168"/>
  <line no="6169">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// it doesn't need conversion</token>
  </line>
  <line no="6170">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6171">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6172">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6173"/>
  <line no="6174">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6175"/>
  <line no="6176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// decode unicode escape sequences</token>
  </line>
  <line no="6177">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace_callback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6178">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/\\\\u([0-9a-f]{4})/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6179">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6180">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">pack</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'H*'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UCS-2BE'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6181">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6182">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$buf</token>
  </line>
  <line no="6183">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6184"/>
  <line no="6185">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// decode UTF-8 codepoints</token>
  </line>
  <line no="6186">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace_callback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6187">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/&amp;#\d{2,4};/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6188">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6189">
    <token name="T_WHITESPACE">          </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$match</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HTML-ENTITIES'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6190">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6191">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$buf</token>
  </line>
  <line no="6192">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6193"/>
  <line no="6194">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$buf</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6195">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6196"/>
  <line no="6197">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6198">
    <token name="T_DOC_COMMENT">   * Convert a string into "win1252"-encoding.</token>
  </line>
  <line no="6199">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6200">
    <token name="T_DOC_COMMENT">   * @param  string|array $str</token>
  </line>
  <line no="6201">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6202">
    <token name="T_DOC_COMMENT">   * @return string|array</token>
  </line>
  <line no="6203">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6204">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">to_win1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6205">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6206">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6207"/>
  <line no="6208">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6209">
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOC_COMMENT">/** @noinspection AlterInForeachInspection */</token>
  </line>
  <line no="6210">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_win1252</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6211">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6212"/>
  <line no="6213">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6214">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6215"/>
  <line no="6216">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6217"/>
  <line no="6218">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6219">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6220">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6221"/>
  <line no="6222">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">utf8_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6223">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6224"/>
  <line no="6225">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6226">
    <token name="T_DOC_COMMENT">   * Strip whitespace or other characters from beginning or end of a UTF-8 string.</token>
  </line>
  <line no="6227">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6228">
    <token name="T_DOC_COMMENT">   * INFO: This is slower then "trim()"</token>
  </line>
  <line no="6229">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6230">
    <token name="T_DOC_COMMENT">   * But we can only use the original-function, if we use &lt;= 7-Bit in the string / chars</token>
  </line>
  <line no="6231">
    <token name="T_DOC_COMMENT">   * but the check for ACSII (7-Bit) cost more time, then we can safe here.</token>
  </line>
  <line no="6232">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6233">
    <token name="T_DOC_COMMENT">   * @param    string $str   The string to be trimmed</token>
  </line>
  <line no="6234">
    <token name="T_DOC_COMMENT">   * @param    string $chars Optional characters to be stripped</token>
  </line>
  <line no="6235">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6236">
    <token name="T_DOC_COMMENT">   * @return   string The trimmed string</token>
  </line>
  <line no="6237">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6238">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6239">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6240">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6241"/>
  <line no="6242">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6243">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6244">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6245"/>
  <line no="6246">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// Info: http://nadeausoftware.com/articles/2007/9/php_tip_how_strip_punctuation_characters_web_page#Unicodecharactercategories</token>
  </line>
  <line no="6247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">INF</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6248">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^[\pZ\pC]+|[\pZ\pC]+$/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6249">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6250"/>
  <line no="6251">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rtrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ltrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6252">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6253"/>
  <line no="6254">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6255">
    <token name="T_DOC_COMMENT">   * Makes string's first char uppercase.</token>
  </line>
  <line no="6256">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6257">
    <token name="T_DOC_COMMENT">   * @param    string $str The input string</token>
  </line>
  <line no="6258">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6259">
    <token name="T_DOC_COMMENT">   * @return   string The resulting string</token>
  </line>
  <line no="6260">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6261">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ucfirst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6262">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6263">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6264">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6265"/>
  <line no="6266">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6267">
    <token name="T_DOC_COMMENT">   * alias for "UTF8::ucfirst"</token>
  </line>
  <line no="6268">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6269">
    <token name="T_DOC_COMMENT">   * @param $str</token>
  </line>
  <line no="6270">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6271">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6272">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6273">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ucword</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6274">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6275">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ucfirst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6276">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6277"/>
  <line no="6278">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6279">
    <token name="T_DOC_COMMENT">   * Uppercase for all words in the string.</token>
  </line>
  <line no="6280">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6281">
    <token name="T_DOC_COMMENT">   * @param  string $str</token>
  </line>
  <line no="6282">
    <token name="T_DOC_COMMENT">   * @param array   $exceptions</token>
  </line>
  <line no="6283">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6284">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6285">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6286">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ucwords</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exceptions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6287">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6288">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6289">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6290">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6291"/>
  <line no="6292">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="6293">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">explode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6294">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$newwords</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6295"/>
  <line no="6296">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exceptions</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6297">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$useExceptions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6299">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$useExceptions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6300">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6301"/>
  <line no="6302">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6303">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6304">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$useExceptions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6305">
    <token name="T_WHITESPACE">          </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="6306">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6307">
    <token name="T_WHITESPACE">              </token>
    <token name="T_VARIABLE">$useExceptions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="6308">
    <token name="T_WHITESPACE">              </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="6309">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exceptions</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6310">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6311">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6312">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ucfirst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6313">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6314">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$newwords</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$word</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6315">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6316"/>
  <line no="6317">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ucfirst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$newwords</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6318">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6319"/>
  <line no="6320">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6321">
    <token name="T_DOC_COMMENT">   * Multi decode html entity &amp; fix urlencoded-win1252-chars.</token>
  </line>
  <line no="6322">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6323">
    <token name="T_DOC_COMMENT">   * e.g:</token>
  </line>
  <line no="6324">
    <token name="T_DOC_COMMENT">   * 'D&amp;#252;sseldorf'               =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6325">
    <token name="T_DOC_COMMENT">   * 'D%FCsseldorf'                  =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6326">
    <token name="T_DOC_COMMENT">   * 'D&amp;#xFC;sseldorf'               =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6327">
    <token name="T_DOC_COMMENT">   * 'D%26%23xFC%3Bsseldorf'         =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6328">
    <token name="T_DOC_COMMENT">   * 'D&#xC3;&#xBC;sseldorf'                   =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6329">
    <token name="T_DOC_COMMENT">   * 'D%C3%BCsseldorf'               =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6330">
    <token name="T_DOC_COMMENT">   * 'D%C3%83%C2%BCsseldorf'         =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6331">
    <token name="T_DOC_COMMENT">   * 'D%25C3%2583%25C2%25BCsseldorf' =&gt; 'D&#xFC;sseldorf'</token>
  </line>
  <line no="6332">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6333">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="6334">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6335">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6336">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6337">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">urldecode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6338">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6339">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6340"/>
  <line no="6341">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6342">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6343">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6344"/>
  <line no="6345">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/%u([0-9a-f]{3,4})/i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;#x\\1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">urldecode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6346"/>
  <line no="6347">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$flags</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Bootup</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_php</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5.4'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_QUOTES</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PIPE">|</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_HTML5</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_QUOTES</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6348"/>
  <line no="6349">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fix_simple_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6350">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">rawurldecode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6351">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">html_entity_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6352">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6353">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$flags</token>
  </line>
  <line no="6354">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6355">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6356">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6357"/>
  <line no="6358">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6359">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6360"/>
  <line no="6361">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6362">
    <token name="T_DOC_COMMENT">   * Return a array with "urlencoded"-win1252 -&gt; UTF-8</token>
  </line>
  <line no="6363">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6364">
    <token name="T_DOC_COMMENT">   * @return mixed</token>
  </line>
  <line no="6365">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6366">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">urldecode_fix_win1252_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6367">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6368">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6369">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%20'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6370">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%21'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'!'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6371">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%22'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'"'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6372">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%23'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6373">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%24'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'$'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6374">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%25'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6375">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%26'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6376">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%27'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6377">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%28'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'('</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6378">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%29'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6379">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'*'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6380">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'+'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6381">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6382">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6383">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6384">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%2F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6385">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%30'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'0'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6386">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%31'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'1'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6387">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%32'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6388">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%33'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6389">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%34'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'4'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6390">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%35'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'5'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6391">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%36'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'6'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6392">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%37'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'7'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6393">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%38'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'8'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6394">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%39'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'9'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6395">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">':'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6396">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6397">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6398">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'='</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6399">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6400">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%3F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6401">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%40'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'@'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6402">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%41'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'A'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6403">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%42'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'B'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6404">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%43'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'C'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6405">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%44'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'D'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6406">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%45'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'E'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6407">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%46'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'F'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6408">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%47'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'G'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6409">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%48'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'H'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6410">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%49'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'I'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6411">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'J'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6412">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'K'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6413">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'L'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6414">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'M'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6415">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'N'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6416">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%4F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'O'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6417">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%50'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'P'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6418">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%51'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Q'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6419">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%52'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'R'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6420">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%53'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'S'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6421">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%54'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'T'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6422">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%55'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'U'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6423">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%56'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'V'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6424">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%57'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'W'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6425">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%58'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6426">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%59'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Y'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6427">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Z'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6428">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6429">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6430">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6431">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'^'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6432">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%5F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'_'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6433">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%60'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'`'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6434">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%61'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'a'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6435">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%62'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'b'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6436">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%63'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6437">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%64'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'d'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6438">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%65'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'e'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6439">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%66'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'f'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6440">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%67'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'g'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6441">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%68'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'h'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6442">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%69'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6443">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'j'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6444">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'k'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6445">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'l'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6446">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'m'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6447">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'n'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6448">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%6F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'o'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6449">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%70'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'p'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6450">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%71'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'q'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6451">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%72'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'r'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6452">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%73'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'s'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6453">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%74'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'t'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6454">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%75'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6455">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%76'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'v'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6456">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%77'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'w'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6457">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%78'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'x'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6458">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%79'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'y'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6459">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'z'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6460">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'{'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6461">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'|'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6462">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'}'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6463">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'~'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6464">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%7F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6465">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%80'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'`'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6466">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%81'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6467">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%82'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201A;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6468">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%83'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x192;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6469">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%84'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201E;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6470">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%85'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2026;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6471">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%86'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2020;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6472">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%87'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2021;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6473">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%88'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2C6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6474">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%89'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2030;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6475">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x160;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6476">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2039;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6477">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x152;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6478">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6479">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x17D;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6480">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%8F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6481">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%90'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6482">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%91'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2018;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6483">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%92'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2019;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6484">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%93'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201C;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6485">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%94'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x201D;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6486">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%95'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2022;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6487">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%96'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2013;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6488">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%97'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2014;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6489">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%98'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2DC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6490">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%99'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2122;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6491">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9A'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x161;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6492">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9B'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x203A;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6493">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9C'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x153;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6494">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9D'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x2594;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6495">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9E'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x17E;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6496">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%9F'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x178;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6497">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6498">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6499">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6500">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6501">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6502">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6503">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6504">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6505">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6506">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%A9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xA9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6507">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xAA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6508">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xAB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6509">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xAC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6510">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AD'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6511">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xAE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6512">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%AF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xAF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6513">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6514">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6515">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6516">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6517">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6518">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6519">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6520">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6521">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6522">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%B9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xB9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6523">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6524">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6525">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6526">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BD'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6527">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6528">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%BF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xBF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6529">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6530">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6531">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6532">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6533">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6534">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC5;'</token>
  </line>
  <line no="6535">
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6536">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6537">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6538">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%C9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xC9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6539">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6540">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6541">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6542">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CD'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6543">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6544">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%CF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xCF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6545">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6546">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6547">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6548">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6549">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6550">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6551">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6552">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6553">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6554">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%D9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xD9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6555">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6556">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6557">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6558">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DD'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6559">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6560">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%DF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6561">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6562">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6563">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6564">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6565">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6566">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6567">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6568">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6569">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6570">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%E9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xE9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6571">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%EA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6572">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%EB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6573">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%EC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6574">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%ED'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xED;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6575">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%EE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6576">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%EF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xEF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6577">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F0'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF0;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6578">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF1;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6579">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF2;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6580">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF3;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6581">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F4'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF4;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6582">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F5'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF5;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6583">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F6'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF6;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6584">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F7'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF7;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6585">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F8'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF8;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6586">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%F9'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xF9;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6587">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FA'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFA;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6588">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FB'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFB;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6589">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FC'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFC;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6590">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FD'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFD;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6591">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FE'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFE;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6592">
    <token name="T_WHITESPACE">        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'%FF'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xFF;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="6593">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6594"/>
  <line no="6595">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6596">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6597"/>
  <line no="6598">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6599">
    <token name="T_DOC_COMMENT">   * Decodes an UTF-8 string to ISO-8859-1.</token>
  </line>
  <line no="6600">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6601">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="6602">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6603">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6604">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6605">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">utf8_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6606">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6607">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8ToWin1252Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6608">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8ToWin1252Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6609"/>
  <line no="6610">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6611"/>
  <line no="6612">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6613">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6614">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6615"/>
  <line no="6616">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// init</token>
  </line>
  <line no="6617">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">checkForSupport</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6618"/>
  <line no="6619">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">to_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6620"/>
  <line no="6621">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8ToWin1252Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6622">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$utf8ToWin1252Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$utf8ToWin1252</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6623">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$utf8ToWin1252Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$utf8ToWin1252</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6624">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6625"/>
  <line no="6626">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Xml</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">utf8_decode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$utf8ToWin1252Keys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$utf8ToWin1252Values</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6627">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6628"/>
  <line no="6629">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6630">
    <token name="T_DOC_COMMENT">   * Encodes an ISO-8859-1 string to UTF-8.</token>
  </line>
  <line no="6631">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6632">
    <token name="T_DOC_COMMENT">   * @param string $str</token>
  </line>
  <line no="6633">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6634">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6635">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6636">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">utf8_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6637">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6638">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">utf8_encode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6639"/>
  <line no="6640">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\xC2"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6641">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6642">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6643"/>
  <line no="6644">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cp1252ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6645">
    <token name="T_WHITESPACE">      </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cp1252ToUtf8Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6646"/>
  <line no="6647">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cp1252ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6648">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cp1252ToUtf8Keys</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$cp1252ToUtf8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6649">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cp1252ToUtf8Values</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_values</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$cp1252ToUtf8</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6650">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6651"/>
  <line no="6652">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$cp1252ToUtf8Keys</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cp1252ToUtf8Values</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6653">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6654">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6655"/>
  <line no="6656">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6657">
    <token name="T_DOC_COMMENT">   * fix -&gt; utf8-win1252 chars</token>
  </line>
  <line no="6658">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6659">
    <token name="T_DOC_COMMENT">   * If you received an UTF-8 string that was converted from Windows-1252 as it was ISO-8859-1</token>
  </line>
  <line no="6660">
    <token name="T_DOC_COMMENT">   * (ignoring Windows-1252 chars from 80 to 9F) use this function to fix it.</token>
  </line>
  <line no="6661">
    <token name="T_DOC_COMMENT">   * See: http://en.wikipedia.org/wiki/Windows-1252</token>
  </line>
  <line no="6662">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6663">
    <token name="T_DOC_COMMENT">   * @deprecated use "UTF8::fix_simple_utf8()"</token>
  </line>
  <line no="6664">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6665">
    <token name="T_DOC_COMMENT">   * @param   string $str</token>
  </line>
  <line no="6666">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6667">
    <token name="T_DOC_COMMENT">   * @return  string</token>
  </line>
  <line no="6668">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6669">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">utf8_fix_win1252_chars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6670">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6671">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fix_simple_utf8</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6672">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6673"/>
  <line no="6674">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6675">
    <token name="T_DOC_COMMENT">   * Returns an array with all utf8 whitespace characters.</token>
  </line>
  <line no="6676">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6677">
    <token name="T_DOC_COMMENT">   * @see   : http://www.bogofilter.org/pipermail/bogofilter/2003-March/001889.html</token>
  </line>
  <line no="6678">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6679">
    <token name="T_DOC_COMMENT">   * @author: Derek E. derek.isname@gmail.com</token>
  </line>
  <line no="6680">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6681">
    <token name="T_DOC_COMMENT">   * @return array an array with all known whitespace characters as values and the type of whitespace as keys</token>
  </line>
  <line no="6682">
    <token name="T_DOC_COMMENT">   *         as defined in above URL</token>
  </line>
  <line no="6683">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6684">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">whitespace_table</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6685">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6686">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$whitespaceTable</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6687">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6688"/>
  <line no="6689">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6690">
    <token name="T_DOC_COMMENT">   * Limit the number of words in a string.</token>
  </line>
  <line no="6691">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6692">
    <token name="T_DOC_COMMENT">   * @param  string $str</token>
  </line>
  <line no="6693">
    <token name="T_DOC_COMMENT">   * @param  int    $words</token>
  </line>
  <line no="6694">
    <token name="T_DOC_COMMENT">   * @param  string $strAddOn</token>
  </line>
  <line no="6695">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6696">
    <token name="T_DOC_COMMENT">   * @return string</token>
  </line>
  <line no="6697">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6698">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">words_limit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">100</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'...'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6699">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6700">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6701"/>
  <line no="6702">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6703">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6704">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6705"/>
  <line no="6706">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6707"/>
  <line no="6708">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6709">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6710">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6711"/>
  <line no="6712">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^\s*+(?:\S++\s*+){1,'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$words</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'}/u'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6713"/>
  <line no="6714">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="6715">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6716">
    <token name="T_WHITESPACE">        </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="6717">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6718">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6719">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6720">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6721"/>
  <line no="6722">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">rtrim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$matches</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strAddOn</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6723">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6724"/>
  <line no="6725">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6726">
    <token name="T_DOC_COMMENT">   * Wraps a string to a given number of characters</token>
  </line>
  <line no="6727">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6728">
    <token name="T_DOC_COMMENT">   * @link  http://php.net/manual/en/function.wordwrap.php</token>
  </line>
  <line no="6729">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6730">
    <token name="T_DOC_COMMENT">   * @param string $str   &lt;p&gt;</token>
  </line>
  <line no="6731">
    <token name="T_DOC_COMMENT">   *                      The input string.</token>
  </line>
  <line no="6732">
    <token name="T_DOC_COMMENT">   *                      &lt;/p&gt;</token>
  </line>
  <line no="6733">
    <token name="T_DOC_COMMENT">   * @param int    $width [optional] &lt;p&gt;</token>
  </line>
  <line no="6734">
    <token name="T_DOC_COMMENT">   *                      The column width.</token>
  </line>
  <line no="6735">
    <token name="T_DOC_COMMENT">   *                      &lt;/p&gt;</token>
  </line>
  <line no="6736">
    <token name="T_DOC_COMMENT">   * @param string $break [optional] &lt;p&gt;</token>
  </line>
  <line no="6737">
    <token name="T_DOC_COMMENT">   *                      The line is broken using the optional</token>
  </line>
  <line no="6738">
    <token name="T_DOC_COMMENT">   *                      break parameter.</token>
  </line>
  <line no="6739">
    <token name="T_DOC_COMMENT">   *                      &lt;/p&gt;</token>
  </line>
  <line no="6740">
    <token name="T_DOC_COMMENT">   * @param bool   $cut   [optional] &lt;p&gt;</token>
  </line>
  <line no="6741">
    <token name="T_DOC_COMMENT">   *                      If the cut is set to true, the string is</token>
  </line>
  <line no="6742">
    <token name="T_DOC_COMMENT">   *                      always wrapped at or before the specified width. So if you have</token>
  </line>
  <line no="6743">
    <token name="T_DOC_COMMENT">   *                      a word that is larger than the given width, it is broken apart.</token>
  </line>
  <line no="6744">
    <token name="T_DOC_COMMENT">   *                      (See second example).</token>
  </line>
  <line no="6745">
    <token name="T_DOC_COMMENT">   *                      &lt;/p&gt;</token>
  </line>
  <line no="6746">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6747">
    <token name="T_DOC_COMMENT">   * @return string the given string wrapped at the specified column.</token>
  </line>
  <line no="6748">
    <token name="T_DOC_COMMENT">   * @since 4.0.2</token>
  </line>
  <line no="6749">
    <token name="T_DOC_COMMENT">   * @since 5.0</token>
  </line>
  <line no="6750">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6751">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">wordwrap</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">75</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cut</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6752">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6753">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6754">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6755"/>
  <line no="6756">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6757">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6758">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6759"/>
  <line no="6760">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6761">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$strSplit</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">explode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6762">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strSplit</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6763"/>
  <line no="6764">
    <token name="T_WHITESPACE">    </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strSplit</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6765">
    <token name="T_WHITESPACE">      </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6766">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6767"/>
  <line no="6768">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6769">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/** @noinspection ForeachInvariantsInspection */</token>
  </line>
  <line no="6770">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INC">++</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6771"/>
  <line no="6772">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6773">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6774">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6775">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6776"/>
  <line no="6777">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strSplit</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6778">
    <token name="T_WHITESPACE">      </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strSplit</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6779"/>
  <line no="6780">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">split</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6781">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6782">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$c</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6783">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6784">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6785"/>
  <line no="6786">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$strReturn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6787">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6788">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6789">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">wordwrap</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cut</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6790"/>
  <line no="6791">
    <token name="T_WHITESPACE">    </token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$w</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$b</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6792">
    <token name="T_WHITESPACE">      </token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INC">++</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$b</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INC">++</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6793">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$strReturn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6794">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6795">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6796"/>
  <line no="6797">
    <token name="T_WHITESPACE">      </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6798">
    <token name="T_WHITESPACE">        </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$j</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6799">
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6800"/>
  <line no="6801">
    <token name="T_WHITESPACE">      </token>
    <token name="T_VARIABLE">$strReturn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6802">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6803"/>
  <line no="6804">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strReturn</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$chars</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6805">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6806"/>
  <line no="6807">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="6808">
    <token name="T_DOC_COMMENT">   * Returns an array of Unicode White Space characters.</token>
  </line>
  <line no="6809">
    <token name="T_DOC_COMMENT">   *</token>
  </line>
  <line no="6810">
    <token name="T_DOC_COMMENT">   * @return   array An array with numeric code point as key and White Space Character as value.</token>
  </line>
  <line no="6811">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="6812">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ws</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="6813">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6814">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$whitespace</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6815">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6816"/>
  <line no="6817">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="6818"/>
</source>
